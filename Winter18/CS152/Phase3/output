ident -> IDENT main
declarations-> epsilon
ident -> IDENT n
identifiers -> ident
declaration -> identifiers COLON INTEGER
ident -> IDENT i
ident -> IDENT j
ident -> IDENT k
identifiers -> ident
identifiers -> ident COMMA identifiers
identifiers -> ident COMMA identifiers
declaration -> identifiers COLON INTEGER
ident -> IDENT t
identifiers -> ident
number -> NUMBER 20
declaration -> identifiers COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER
declarations-> epsilon
declaration -> declaration SEMICOLON declarations
declaration -> declaration SEMICOLON declarations
declaration -> declaration SEMICOLON declarations
ident -> IDENT i
var-> ident
ident -> IDENT j
var-> ident
vars -> vars
vars -> var COMMA vars
statements -> READ vars
ident -> IDENT k
var-> ident
number -> NUMBER 0
term -> number
multiplicative_expression -> term
expression -> multiplicative_expression
statement -> var ASSIGN expression
ident -> IDENT n
var-> ident
number -> NUMBER 20
term -> number
multiplicative_expression -> term
expression -> multiplicative_expression
statement -> var ASSIGN expression
ident -> IDENT t
ident -> IDENT k
var-> ident
term -> var
multiplicative_expression -> term
expression -> multiplicative_expression
var -> ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET
ident -> IDENT k
var-> ident
term -> var
multiplicative_expression -> term
expression -> multiplicative_expression
statement -> var ASSIGN expression
ident -> IDENT k
var-> ident
ident -> IDENT k
var-> ident
term -> var
multiplicative_expression -> term
number -> NUMBER 1
term -> number
multiplicative_expression -> term
expression -> multiplicative_expression
expression -> multiplicative_expression ADD expression
statement -> var ASSIGN expression
ident -> IDENT k
var-> ident
term -> var
number -> NUMBER 2
term -> number
multiplicative_expression -> term MOD term
expression -> multiplicative_expression
comp -> EQ
number -> NUMBER 0
term -> number
multiplicative_expression -> term
expression -> multiplicative_expression
relation_exp -> expression comp expression
relation_and_expression -> relation_exp
bool_exp -> relation_and_exp
statement -> CONTINUE
statements -> epsilon
statements -> statement SEMICOLON statements
statement -> IF bool_exp THEN statements ENDIF
ident -> IDENT t
ident -> IDENT k
var-> ident
term -> var
multiplicative_expression -> term
number -> NUMBER 1
term -> number
multiplicative_expression -> term
expression -> multiplicative_expression
expression -> multiplicative_expression SUB expression
var -> ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET
vars -> vars
statements -> WRITE vars
statements -> epsilon
statements -> statement SEMICOLON statements
statements -> statement SEMICOLON statements
statements -> statement SEMICOLON statements
statements -> statement SEMICOLON statements
ident -> IDENT k
var-> ident
term -> var
multiplicative_expression -> term
expression -> multiplicative_expression
comp -> LT
ident -> IDENT n
var-> ident
term -> var
multiplicative_expression -> term
expression -> multiplicative_expression
relation_exp -> expression comp expression
relation_and_expression -> relation_exp
bool_exp -> relation_and_exp
statement -> DO BEGINLOOP statements ENDLOOP WHILE bool_exp
ident -> IDENT i
var-> ident
term -> var
multiplicative_expression -> term
expression -> multiplicative_expression
comp -> LT
ident -> IDENT j
var-> ident
term -> var
multiplicative_expression -> term
expression -> multiplicative_expression
relation_exp -> expression comp expression
ident -> IDENT j
var-> ident
term -> var
multiplicative_expression -> term
expression -> multiplicative_expression
comp -> LT
ident -> IDENT n
var-> ident
term -> var
multiplicative_expression -> term
expression -> multiplicative_expression
relation_exp -> expression comp expression
ident -> IDENT i
var-> ident
term -> var
multiplicative_expression -> term
expression -> multiplicative_expression
comp -> GTE
number -> NUMBER 0
term -> number
multiplicative_expression -> term
expression -> multiplicative_expression
relation_exp -> expression comp expression
relation_and_expression -> relation_exp
relation_and_exp -> relation_exp AND relation_and_exp
relation_and_exp -> relation_exp AND relation_and_exp
bool_exp -> relation_and_exp
ident -> IDENT t
ident -> IDENT i
var-> ident
term -> var
multiplicative_expression -> term
expression -> multiplicative_expression
var -> ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET
ident -> IDENT i
var-> ident
term -> var
number -> NUMBER 2
term -> number
multiplicative_expression -> term MULT term
expression -> multiplicative_expression
statement -> var ASSIGN expression
ident -> IDENT t
ident -> IDENT j
var-> ident
term -> var
multiplicative_expression -> term
expression -> multiplicative_expression
var -> ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET
ident -> IDENT j
var-> ident
term -> var
number -> NUMBER 2
term -> number
multiplicative_expression -> term MULT term
expression -> multiplicative_expression
statement -> var ASSIGN expression
ident -> IDENT k
var-> ident
ident -> IDENT t
ident -> IDENT i
var-> ident
term -> var
multiplicative_expression -> term
expression -> multiplicative_expression
var -> ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET
term -> var
multiplicative_expression -> term
expression -> multiplicative_expression
statement -> var ASSIGN expression
ident -> IDENT t
ident -> IDENT i
var-> ident
term -> var
multiplicative_expression -> term
expression -> multiplicative_expression
var -> ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET
ident -> IDENT t
ident -> IDENT j
var-> ident
term -> var
multiplicative_expression -> term
expression -> multiplicative_expression
var -> ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET
term -> var
multiplicative_expression -> term
expression -> multiplicative_expression
statement -> var ASSIGN expression
ident -> IDENT t
ident -> IDENT j
var-> ident
term -> var
multiplicative_expression -> term
expression -> multiplicative_expression
var -> ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET
ident -> IDENT k
var-> ident
term -> var
multiplicative_expression -> term
expression -> multiplicative_expression
statement -> var ASSIGN expression
statements -> epsilon
statements -> statement SEMICOLON statements
statements -> statement SEMICOLON statements
statements -> statement SEMICOLON statements
statements -> statement SEMICOLON statements
statements -> statement SEMICOLON statements
ident -> IDENT i
var-> ident
term -> var
multiplicative_expression -> term
expression -> multiplicative_expression
comp -> GTE
ident -> IDENT j
var-> ident
term -> var
multiplicative_expression -> term
expression -> multiplicative_expression
relation_exp -> expression comp expression
relation_and_expression -> relation_exp
relation_exp -> FALSE
relation_and_expression -> relation_exp
relation_and_exp OR relation_and_exp
ident -> IDENT k
var-> ident
number -> NUMBER 1
term -> number
multiplicative_expression -> term
ident -> IDENT i
var-> ident
term -> var
multiplicative_expression -> term
ident -> IDENT j
var-> ident
term -> var
multiplicative_expression -> term
expression -> multiplicative_expression
expression -> multiplicative_expression SUB expression
expression -> multiplicative_expression ADD expression
term -> L_PAREN expression R_PAREN
number -> NUMBER 3
term -> number
multiplicative_expression -> term MOD term
expression -> multiplicative_expression
statement -> var ASSIGN expression
ident -> IDENT i
var-> ident
ident -> IDENT i
var-> ident
term -> var
multiplicative_expression -> term
number -> NUMBER 1
term -> number
multiplicative_expression -> term
expression -> multiplicative_expression
expression -> multiplicative_expression SUB expression
statement -> var ASSIGN expression
ident -> IDENT k
var-> ident
term -> var
multiplicative_expression -> term
expression -> multiplicative_expression
comp -> GT
number -> NUMBER 1
term -> number
multiplicative_expression -> term
expression -> multiplicative_expression
relation_exp -> expression comp expression
relation_and_expression -> relation_exp
bool_exp -> relation_and_exp
statement -> CONTINUE
statements -> epsilon
statements -> statement SEMICOLON statements
statement -> IF bool_exp THEN statements ENDIF
ident -> IDENT k
var-> ident
vars -> vars
statements -> WRITE vars
statements -> epsilon
statements -> statement SEMICOLON statements
statements -> statement SEMICOLON statements
statements -> statement SEMICOLON statements
statements -> statement SEMICOLON statements
statement -> WHILE bool_exp BEGINLOOP statements ENDLOOP
statements -> epsilon
statements -> statement SEMICOLON statements
statement -> IF bool_exp THEN statements ENDIF
ident -> IDENT i
var-> ident
ident -> IDENT j
var-> ident
ident -> IDENT k
var-> ident
vars -> vars
vars -> var COMMA vars
vars -> var COMMA vars
statements -> WRITE vars
ident -> IDENT i
var-> ident
term -> var
multiplicative_expression -> term
expression -> multiplicative_expression
comp -> LT
ident -> IDENT n
var-> ident
term -> var
multiplicative_expression -> term
expression -> multiplicative_expression
relation_exp -> expression comp expression
ident -> IDENT i
var-> ident
term -> var
multiplicative_expression -> term
expression -> multiplicative_expression
comp -> GTE
number -> NUMBER 0
term -> number
multiplicative_expression -> term
expression -> multiplicative_expression
relation_exp -> expression comp expression
relation_and_expression -> relation_exp
relation_and_exp -> relation_exp AND relation_and_exp
bool_exp -> relation_and_exp
ident -> IDENT t
ident -> IDENT i
var-> ident
term -> var
multiplicative_expression -> term
expression -> multiplicative_expression
var -> ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET
vars -> vars
statements -> WRITE vars
statements -> epsilon
statements -> statement SEMICOLON statements
statement -> IF bool_exp THEN statements ENDIF
ident -> IDENT j
var-> ident
term -> var
multiplicative_expression -> term
expression -> multiplicative_expression
comp -> LT
ident -> IDENT n
var-> ident
term -> var
multiplicative_expression -> term
expression -> multiplicative_expression
relation_exp -> expression comp expression
ident -> IDENT j
var-> ident
term -> var
multiplicative_expression -> term
expression -> multiplicative_expression
comp -> GTE
number -> NUMBER 0
term -> number
multiplicative_expression -> term
expression -> multiplicative_expression
relation_exp -> expression comp expression
relation_and_expression -> relation_exp
relation_and_exp -> relation_exp AND relation_and_exp
bool_exp -> relation_and_exp
ident -> IDENT t
ident -> IDENT j
var-> ident
term -> var
multiplicative_expression -> term
expression -> multiplicative_expression
var -> ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET
vars -> vars
statements -> WRITE vars
statements -> epsilon
statements -> statement SEMICOLON statements
statement -> IF bool_exp THEN statements ENDIF
statements -> epsilon
statements -> statement SEMICOLON statements
statements -> statement SEMICOLON statements
statements -> statement SEMICOLON statements
statements -> statement SEMICOLON statements
statements -> statement SEMICOLON statements
statements -> statement SEMICOLON statements
statements -> statement SEMICOLON statements
statements -> statement SEMICOLON statements
function -> FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY
functions -> epsilon
functions -> function functions
prog_start -> functions
