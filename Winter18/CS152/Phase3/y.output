Grammar

    0 $accept: prog_start $end

    1 prog_start: functions

    2 functions: function functions
    3          | %empty

    4 function: funcName SEMICOLON begin_params declarations end_params BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    5 funcName: FUNCTION IDENT

    6 begin_params: BEGIN_PARAMS

    7 end_params: END_PARAMS

    8 declarations: declaration SEMICOLON declarations
    9             | %empty

   10 declaration: identifiers COLON INTEGER
   11            | identifiers COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER
   12            | identifiers COLON ARRAY L_SQUARE_BRACKET error R_SQUARE_BRACKET OF INTEGER

   13 statements: statement SEMICOLON statements
   14           | %empty

   15 statement: var ASSIGN expression
   16          | ifCond statements endif
   17          | ifCond statements else statements endif
   18          | while BEGINLOOP statements ENDLOOP
   19          | do BEGINLOOP statements ENDLOOP M8 WHILE bool_exp
   20          | foreach IN ident M5 BEGINLOOP statements ENDLOOP
   21          | READ vars
   22          | WRITE vars
   23          | CONTINUE
   24          | error
   25          | RETURN expression

   26 foreach: FOREACH ident

   27 while: WHILE bool_exp

   28 ifCond: IF bool_exp THEN

   29 else: ELSE

   30 endif: ENDIF

   31 M5: %empty

   32 do: DO

   33 M8: %empty

   34 bool_exp: relation_and_exp
   35         | relation_and_exp OR relation_and_exp

   36 relation_and_exp: relation_exp
   37                 | relation_exp AND relation_and_exp

   38 relation_exp: NOT relation_exp
   39             | expression comp expression
   40             | TRUE
   41             | FALSE
   42             | L_PAREN bool_exp R_PAREN

   43 comp: EQ
   44     | NEQ
   45     | LT
   46     | GT
   47     | LTE
   48     | GTE

   49 expression: multiplicative_expression
   50           | expression ADD multiplicative_expression
   51           | expression SUB multiplicative_expression

   52 multiplicative_expression: term
   53                          | multiplicative_expression MULT term
   54                          | multiplicative_expression DIV term
   55                          | multiplicative_expression MOD term

   56 term: terms
   57     | SUB terms
   58     | IDENT parenExpression
   59     | IDENT error

   60 terms: number
   61      | var
   62      | L_PAREN expression R_PAREN

   63 parenExpression: L_PAREN expressions R_PAREN

   64 expressions: expression
   65            | expression COMMA expressions

   66 vars: var
   67     | var COMMA vars

   68 var: ident
   69    | ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   70    | error L_SQUARE_BRACKET expression R_SQUARE_BRACKET

   71 identifiers: ident
   72            | ident COMMA identifiers

   73 ident: IDENT

   74 number: NUMBER


Terminals, with rules where they appear

$end (0) 0
error (256) 12 24 59 70
FUNCTION (258) 5
INTEGER (259) 10 11 12
OF (260) 11 12
ARRAY (261) 11 12
READ (262) 21
IF (263) 28
THEN (264) 28
ENDIF (265) 30
ELSE (266) 29
WHILE (267) 19 27
DO (268) 32
BEGIN_PARAMS (269) 6
BEGIN_LOCALS (270) 4
BEGIN_BODY (271) 4
IN (272) 20
BEGINLOOP (273) 18 19 20
ENDLOOP (274) 18 19 20
RETURN (275) 25
END_PARAMS (276) 7
END_LOCALS (277) 4
END_BODY (278) 4
CONTINUE (279) 23
WRITE (280) 22
TRUE (281) 40
FALSE (282) 41
FOREACH (283) 26
SEMICOLON (284) 4 8 13
COLON (285) 10 11 12
COMMA (286) 65 67 72
L_PAREN (287) 42 62 63
R_PAREN (288) 42 62 63
L_SQUARE_BRACKET (289) 11 12 69 70
R_SQUARE_BRACKET (290) 11 12 69 70
NUMBER (291) 74
IDENT (292) 5 58 59 73
UMINUS (293)
MULT (294) 53
DIV (295) 54
MOD (296) 55
ADD (297) 50
SUB (298) 51 57
LT (299) 45
LTE (300) 47
GT (301) 46
GTE (302) 48
EQ (303) 43
NEQ (304) 44
NOT (305) 38
AND (306) 37
OR (307) 35
ASSIGN (308) 15


Nonterminals, with rules where they appear

$accept (54)
    on left: 0
prog_start (55)
    on left: 1, on right: 0
functions (56)
    on left: 2 3, on right: 1 2
function (57)
    on left: 4, on right: 2
funcName (58)
    on left: 5, on right: 4
begin_params (59)
    on left: 6, on right: 4
end_params (60)
    on left: 7, on right: 4
declarations (61)
    on left: 8 9, on right: 4 8
declaration (62)
    on left: 10 11 12, on right: 8
statements (63)
    on left: 13 14, on right: 4 13 16 17 18 19 20
statement (64)
    on left: 15 16 17 18 19 20 21 22 23 24 25, on right: 13
foreach (65)
    on left: 26, on right: 20
while (66)
    on left: 27, on right: 18
ifCond (67)
    on left: 28, on right: 16 17
else (68)
    on left: 29, on right: 17
endif (69)
    on left: 30, on right: 16 17
M5 (70)
    on left: 31, on right: 20
do (71)
    on left: 32, on right: 19
M8 (72)
    on left: 33, on right: 19
bool_exp (73)
    on left: 34 35, on right: 19 27 28 42
relation_and_exp (74)
    on left: 36 37, on right: 34 35 37
relation_exp (75)
    on left: 38 39 40 41 42, on right: 36 37 38
comp (76)
    on left: 43 44 45 46 47 48, on right: 39
expression (77)
    on left: 49 50 51, on right: 15 25 39 50 51 62 64 65 69 70
multiplicative_expression (78)
    on left: 52 53 54 55, on right: 49 50 51 53 54 55
term (79)
    on left: 56 57 58 59, on right: 52 53 54 55
terms (80)
    on left: 60 61 62, on right: 56 57
parenExpression (81)
    on left: 63, on right: 58
expressions (82)
    on left: 64 65, on right: 63 65
vars (83)
    on left: 66 67, on right: 21 22 67
var (84)
    on left: 68 69 70, on right: 15 61 66 67
identifiers (85)
    on left: 71 72, on right: 10 11 12 72
ident (86)
    on left: 73, on right: 20 26 68 69 71 72
number (87)
    on left: 74, on right: 11 60


State 0

    0 $accept: . prog_start $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 3 (functions)

    prog_start  go to state 2
    functions   go to state 3
    function    go to state 4
    funcName    go to state 5


State 1

    5 funcName: FUNCTION . IDENT

    IDENT  shift, and go to state 6


State 2

    0 $accept: prog_start . $end

    $end  shift, and go to state 7


State 3

    1 prog_start: functions .

    $default  reduce using rule 1 (prog_start)


State 4

    2 functions: function . functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 3 (functions)

    functions  go to state 8
    function   go to state 4
    funcName   go to state 5


State 5

    4 function: funcName . SEMICOLON begin_params declarations end_params BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    SEMICOLON  shift, and go to state 9


State 6

    5 funcName: FUNCTION IDENT .

    $default  reduce using rule 5 (funcName)


State 7

    0 $accept: prog_start $end .

    $default  accept


State 8

    2 functions: function functions .

    $default  reduce using rule 2 (functions)


State 9

    4 function: funcName SEMICOLON . begin_params declarations end_params BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_PARAMS  shift, and go to state 10

    begin_params  go to state 11


State 10

    6 begin_params: BEGIN_PARAMS .

    $default  reduce using rule 6 (begin_params)


State 11

    4 function: funcName SEMICOLON begin_params . declarations end_params BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 12

    $default  reduce using rule 9 (declarations)

    declarations  go to state 13
    declaration   go to state 14
    identifiers   go to state 15
    ident         go to state 16


State 12

   73 ident: IDENT .

    $default  reduce using rule 73 (ident)


State 13

    4 function: funcName SEMICOLON begin_params declarations . end_params BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    END_PARAMS  shift, and go to state 17

    end_params  go to state 18


State 14

    8 declarations: declaration . SEMICOLON declarations

    SEMICOLON  shift, and go to state 19


State 15

   10 declaration: identifiers . COLON INTEGER
   11            | identifiers . COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER
   12            | identifiers . COLON ARRAY L_SQUARE_BRACKET error R_SQUARE_BRACKET OF INTEGER

    COLON  shift, and go to state 20


State 16

   71 identifiers: ident .
   72            | ident . COMMA identifiers

    COMMA  shift, and go to state 21

    $default  reduce using rule 71 (identifiers)


State 17

    7 end_params: END_PARAMS .

    $default  reduce using rule 7 (end_params)


State 18

    4 function: funcName SEMICOLON begin_params declarations end_params . BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 22


State 19

    8 declarations: declaration SEMICOLON . declarations

    IDENT  shift, and go to state 12

    $default  reduce using rule 9 (declarations)

    declarations  go to state 23
    declaration   go to state 14
    identifiers   go to state 15
    ident         go to state 16


State 20

   10 declaration: identifiers COLON . INTEGER
   11            | identifiers COLON . ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER
   12            | identifiers COLON . ARRAY L_SQUARE_BRACKET error R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 24
    ARRAY    shift, and go to state 25


State 21

   72 identifiers: ident COMMA . identifiers

    IDENT  shift, and go to state 12

    identifiers  go to state 26
    ident        go to state 16


State 22

    4 function: funcName SEMICOLON begin_params declarations end_params BEGIN_LOCALS . declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 12

    $default  reduce using rule 9 (declarations)

    declarations  go to state 27
    declaration   go to state 14
    identifiers   go to state 15
    ident         go to state 16


State 23

    8 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 8 (declarations)


State 24

   10 declaration: identifiers COLON INTEGER .

    $default  reduce using rule 10 (declaration)


State 25

   11 declaration: identifiers COLON ARRAY . L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER
   12            | identifiers COLON ARRAY . L_SQUARE_BRACKET error R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 28


State 26

   72 identifiers: ident COMMA identifiers .

    $default  reduce using rule 72 (identifiers)


State 27

    4 function: funcName SEMICOLON begin_params declarations end_params BEGIN_LOCALS declarations . END_LOCALS BEGIN_BODY statements END_BODY

    END_LOCALS  shift, and go to state 29


State 28

   11 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET . number R_SQUARE_BRACKET OF INTEGER
   12            | identifiers COLON ARRAY L_SQUARE_BRACKET . error R_SQUARE_BRACKET OF INTEGER

    error   shift, and go to state 30
    NUMBER  shift, and go to state 31

    number  go to state 32


State 29

    4 function: funcName SEMICOLON begin_params declarations end_params BEGIN_LOCALS declarations END_LOCALS . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 33


State 30

   12 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET error . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 34


State 31

   74 number: NUMBER .

    $default  reduce using rule 74 (number)


State 32

   11 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET number . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 35


State 33

    4 function: funcName SEMICOLON begin_params declarations end_params BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY . statements END_BODY

    error     shift, and go to state 36
    READ      shift, and go to state 37
    IF        shift, and go to state 38
    WHILE     shift, and go to state 39
    DO        shift, and go to state 40
    RETURN    shift, and go to state 41
    CONTINUE  shift, and go to state 42
    WRITE     shift, and go to state 43
    FOREACH   shift, and go to state 44
    IDENT     shift, and go to state 12

    END_BODY  reduce using rule 14 (statements)

    statements  go to state 45
    statement   go to state 46
    foreach     go to state 47
    while       go to state 48
    ifCond      go to state 49
    do          go to state 50
    var         go to state 51
    ident       go to state 52


State 34

   12 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET error R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 53


State 35

   11 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 54


State 36

   24 statement: error .
   70 var: error . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 55

    $default  reduce using rule 24 (statement)


State 37

   21 statement: READ . vars

    error  shift, and go to state 56
    IDENT  shift, and go to state 12

    vars   go to state 57
    var    go to state 58
    ident  go to state 52


State 38

   28 ifCond: IF . bool_exp THEN

    error    shift, and go to state 56
    TRUE     shift, and go to state 59
    FALSE    shift, and go to state 60
    L_PAREN  shift, and go to state 61
    NUMBER   shift, and go to state 31
    IDENT    shift, and go to state 62
    SUB      shift, and go to state 63
    NOT      shift, and go to state 64

    bool_exp                   go to state 65
    relation_and_exp           go to state 66
    relation_exp               go to state 67
    expression                 go to state 68
    multiplicative_expression  go to state 69
    term                       go to state 70
    terms                      go to state 71
    var                        go to state 72
    ident                      go to state 52
    number                     go to state 73


State 39

   27 while: WHILE . bool_exp

    error    shift, and go to state 56
    TRUE     shift, and go to state 59
    FALSE    shift, and go to state 60
    L_PAREN  shift, and go to state 61
    NUMBER   shift, and go to state 31
    IDENT    shift, and go to state 62
    SUB      shift, and go to state 63
    NOT      shift, and go to state 64

    bool_exp                   go to state 74
    relation_and_exp           go to state 66
    relation_exp               go to state 67
    expression                 go to state 68
    multiplicative_expression  go to state 69
    term                       go to state 70
    terms                      go to state 71
    var                        go to state 72
    ident                      go to state 52
    number                     go to state 73


State 40

   32 do: DO .

    $default  reduce using rule 32 (do)


State 41

   25 statement: RETURN . expression

    error    shift, and go to state 56
    L_PAREN  shift, and go to state 75
    NUMBER   shift, and go to state 31
    IDENT    shift, and go to state 62
    SUB      shift, and go to state 63

    expression                 go to state 76
    multiplicative_expression  go to state 69
    term                       go to state 70
    terms                      go to state 71
    var                        go to state 72
    ident                      go to state 52
    number                     go to state 73


State 42

   23 statement: CONTINUE .

    $default  reduce using rule 23 (statement)


State 43

   22 statement: WRITE . vars

    error  shift, and go to state 56
    IDENT  shift, and go to state 12

    vars   go to state 77
    var    go to state 58
    ident  go to state 52


State 44

   26 foreach: FOREACH . ident

    IDENT  shift, and go to state 12

    ident  go to state 78


State 45

    4 function: funcName SEMICOLON begin_params declarations end_params BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements . END_BODY

    END_BODY  shift, and go to state 79


State 46

   13 statements: statement . SEMICOLON statements

    SEMICOLON  shift, and go to state 80


State 47

   20 statement: foreach . IN ident M5 BEGINLOOP statements ENDLOOP

    IN  shift, and go to state 81


State 48

   18 statement: while . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 82


State 49

   16 statement: ifCond . statements endif
   17          | ifCond . statements else statements endif

    error     shift, and go to state 36
    READ      shift, and go to state 37
    IF        shift, and go to state 38
    WHILE     shift, and go to state 39
    DO        shift, and go to state 40
    RETURN    shift, and go to state 41
    CONTINUE  shift, and go to state 42
    WRITE     shift, and go to state 43
    FOREACH   shift, and go to state 44
    IDENT     shift, and go to state 12

    ENDIF  reduce using rule 14 (statements)
    ELSE   reduce using rule 14 (statements)

    statements  go to state 83
    statement   go to state 46
    foreach     go to state 47
    while       go to state 48
    ifCond      go to state 49
    do          go to state 50
    var         go to state 51
    ident       go to state 52


State 50

   19 statement: do . BEGINLOOP statements ENDLOOP M8 WHILE bool_exp

    BEGINLOOP  shift, and go to state 84


State 51

   15 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 85


State 52

   68 var: ident .
   69    | ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 86

    $default  reduce using rule 68 (var)


State 53

   12 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET error R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 87


State 54

   11 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 88


State 55

   70 var: error L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    error    shift, and go to state 56
    L_PAREN  shift, and go to state 75
    NUMBER   shift, and go to state 31
    IDENT    shift, and go to state 62
    SUB      shift, and go to state 63

    expression                 go to state 89
    multiplicative_expression  go to state 69
    term                       go to state 70
    terms                      go to state 71
    var                        go to state 72
    ident                      go to state 52
    number                     go to state 73


State 56

   70 var: error . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 55


State 57

   21 statement: READ vars .

    $default  reduce using rule 21 (statement)


State 58

   66 vars: var .
   67     | var . COMMA vars

    COMMA  shift, and go to state 90

    $default  reduce using rule 66 (vars)


State 59

   40 relation_exp: TRUE .

    $default  reduce using rule 40 (relation_exp)


State 60

   41 relation_exp: FALSE .

    $default  reduce using rule 41 (relation_exp)


State 61

   42 relation_exp: L_PAREN . bool_exp R_PAREN
   62 terms: L_PAREN . expression R_PAREN

    error    shift, and go to state 56
    TRUE     shift, and go to state 59
    FALSE    shift, and go to state 60
    L_PAREN  shift, and go to state 61
    NUMBER   shift, and go to state 31
    IDENT    shift, and go to state 62
    SUB      shift, and go to state 63
    NOT      shift, and go to state 64

    bool_exp                   go to state 91
    relation_and_exp           go to state 66
    relation_exp               go to state 67
    expression                 go to state 92
    multiplicative_expression  go to state 69
    term                       go to state 70
    terms                      go to state 71
    var                        go to state 72
    ident                      go to state 52
    number                     go to state 73


State 62

   58 term: IDENT . parenExpression
   59     | IDENT . error
   73 ident: IDENT .

    error    shift, and go to state 93
    L_PAREN  shift, and go to state 94

    THEN              reduce using rule 73 (ident)
    BEGINLOOP         reduce using rule 73 (ident)
    SEMICOLON         reduce using rule 73 (ident)
    COMMA             reduce using rule 73 (ident)
    R_PAREN           reduce using rule 73 (ident)
    L_SQUARE_BRACKET  reduce using rule 73 (ident)
    R_SQUARE_BRACKET  reduce using rule 73 (ident)
    MULT              reduce using rule 73 (ident)
    DIV               reduce using rule 73 (ident)
    MOD               reduce using rule 73 (ident)
    ADD               reduce using rule 73 (ident)
    SUB               reduce using rule 73 (ident)
    LT                reduce using rule 73 (ident)
    LTE               reduce using rule 73 (ident)
    GT                reduce using rule 73 (ident)
    GTE               reduce using rule 73 (ident)
    EQ                reduce using rule 73 (ident)
    NEQ               reduce using rule 73 (ident)
    AND               reduce using rule 73 (ident)
    OR                reduce using rule 73 (ident)

    parenExpression  go to state 95


State 63

   57 term: SUB . terms

    error    shift, and go to state 56
    L_PAREN  shift, and go to state 75
    NUMBER   shift, and go to state 31
    IDENT    shift, and go to state 12

    terms   go to state 96
    var     go to state 72
    ident   go to state 52
    number  go to state 73


State 64

   38 relation_exp: NOT . relation_exp

    error    shift, and go to state 56
    TRUE     shift, and go to state 59
    FALSE    shift, and go to state 60
    L_PAREN  shift, and go to state 61
    NUMBER   shift, and go to state 31
    IDENT    shift, and go to state 62
    SUB      shift, and go to state 63
    NOT      shift, and go to state 64

    relation_exp               go to state 97
    expression                 go to state 68
    multiplicative_expression  go to state 69
    term                       go to state 70
    terms                      go to state 71
    var                        go to state 72
    ident                      go to state 52
    number                     go to state 73


State 65

   28 ifCond: IF bool_exp . THEN

    THEN  shift, and go to state 98


State 66

   34 bool_exp: relation_and_exp .
   35         | relation_and_exp . OR relation_and_exp

    OR  shift, and go to state 99

    $default  reduce using rule 34 (bool_exp)


State 67

   36 relation_and_exp: relation_exp .
   37                 | relation_exp . AND relation_and_exp

    AND  shift, and go to state 100

    $default  reduce using rule 36 (relation_and_exp)


State 68

   39 relation_exp: expression . comp expression
   50 expression: expression . ADD multiplicative_expression
   51           | expression . SUB multiplicative_expression

    ADD  shift, and go to state 101
    SUB  shift, and go to state 102
    LT   shift, and go to state 103
    LTE  shift, and go to state 104
    GT   shift, and go to state 105
    GTE  shift, and go to state 106
    EQ   shift, and go to state 107
    NEQ  shift, and go to state 108

    comp  go to state 109


State 69

   49 expression: multiplicative_expression .
   53 multiplicative_expression: multiplicative_expression . MULT term
   54                          | multiplicative_expression . DIV term
   55                          | multiplicative_expression . MOD term

    MULT  shift, and go to state 110
    DIV   shift, and go to state 111
    MOD   shift, and go to state 112

    $default  reduce using rule 49 (expression)


State 70

   52 multiplicative_expression: term .

    $default  reduce using rule 52 (multiplicative_expression)


State 71

   56 term: terms .

    $default  reduce using rule 56 (term)


State 72

   61 terms: var .

    $default  reduce using rule 61 (terms)


State 73

   60 terms: number .

    $default  reduce using rule 60 (terms)


State 74

   27 while: WHILE bool_exp .

    $default  reduce using rule 27 (while)


State 75

   62 terms: L_PAREN . expression R_PAREN

    error    shift, and go to state 56
    L_PAREN  shift, and go to state 75
    NUMBER   shift, and go to state 31
    IDENT    shift, and go to state 62
    SUB      shift, and go to state 63

    expression                 go to state 113
    multiplicative_expression  go to state 69
    term                       go to state 70
    terms                      go to state 71
    var                        go to state 72
    ident                      go to state 52
    number                     go to state 73


State 76

   25 statement: RETURN expression .
   50 expression: expression . ADD multiplicative_expression
   51           | expression . SUB multiplicative_expression

    ADD  shift, and go to state 101
    SUB  shift, and go to state 102

    $default  reduce using rule 25 (statement)


State 77

   22 statement: WRITE vars .

    $default  reduce using rule 22 (statement)


State 78

   26 foreach: FOREACH ident .

    $default  reduce using rule 26 (foreach)


State 79

    4 function: funcName SEMICOLON begin_params declarations end_params BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY .

    $default  reduce using rule 4 (function)


State 80

   13 statements: statement SEMICOLON . statements

    error     shift, and go to state 36
    READ      shift, and go to state 37
    IF        shift, and go to state 38
    WHILE     shift, and go to state 39
    DO        shift, and go to state 40
    RETURN    shift, and go to state 41
    CONTINUE  shift, and go to state 42
    WRITE     shift, and go to state 43
    FOREACH   shift, and go to state 44
    IDENT     shift, and go to state 12

    ENDIF     reduce using rule 14 (statements)
    ELSE      reduce using rule 14 (statements)
    ENDLOOP   reduce using rule 14 (statements)
    END_BODY  reduce using rule 14 (statements)

    statements  go to state 114
    statement   go to state 46
    foreach     go to state 47
    while       go to state 48
    ifCond      go to state 49
    do          go to state 50
    var         go to state 51
    ident       go to state 52


State 81

   20 statement: foreach IN . ident M5 BEGINLOOP statements ENDLOOP

    IDENT  shift, and go to state 12

    ident  go to state 115


State 82

   18 statement: while BEGINLOOP . statements ENDLOOP

    error     shift, and go to state 36
    READ      shift, and go to state 37
    IF        shift, and go to state 38
    WHILE     shift, and go to state 39
    DO        shift, and go to state 40
    RETURN    shift, and go to state 41
    CONTINUE  shift, and go to state 42
    WRITE     shift, and go to state 43
    FOREACH   shift, and go to state 44
    IDENT     shift, and go to state 12

    ENDLOOP  reduce using rule 14 (statements)

    statements  go to state 116
    statement   go to state 46
    foreach     go to state 47
    while       go to state 48
    ifCond      go to state 49
    do          go to state 50
    var         go to state 51
    ident       go to state 52


State 83

   16 statement: ifCond statements . endif
   17          | ifCond statements . else statements endif

    ENDIF  shift, and go to state 117
    ELSE   shift, and go to state 118

    else   go to state 119
    endif  go to state 120


State 84

   19 statement: do BEGINLOOP . statements ENDLOOP M8 WHILE bool_exp

    error     shift, and go to state 36
    READ      shift, and go to state 37
    IF        shift, and go to state 38
    WHILE     shift, and go to state 39
    DO        shift, and go to state 40
    RETURN    shift, and go to state 41
    CONTINUE  shift, and go to state 42
    WRITE     shift, and go to state 43
    FOREACH   shift, and go to state 44
    IDENT     shift, and go to state 12

    ENDLOOP  reduce using rule 14 (statements)

    statements  go to state 121
    statement   go to state 46
    foreach     go to state 47
    while       go to state 48
    ifCond      go to state 49
    do          go to state 50
    var         go to state 51
    ident       go to state 52


State 85

   15 statement: var ASSIGN . expression

    error    shift, and go to state 56
    L_PAREN  shift, and go to state 75
    NUMBER   shift, and go to state 31
    IDENT    shift, and go to state 62
    SUB      shift, and go to state 63

    expression                 go to state 122
    multiplicative_expression  go to state 69
    term                       go to state 70
    terms                      go to state 71
    var                        go to state 72
    ident                      go to state 52
    number                     go to state 73


State 86

   69 var: ident L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    error    shift, and go to state 56
    L_PAREN  shift, and go to state 75
    NUMBER   shift, and go to state 31
    IDENT    shift, and go to state 62
    SUB      shift, and go to state 63

    expression                 go to state 123
    multiplicative_expression  go to state 69
    term                       go to state 70
    terms                      go to state 71
    var                        go to state 72
    ident                      go to state 52
    number                     go to state 73


State 87

   12 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET error R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 12 (declaration)


State 88

   11 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 11 (declaration)


State 89

   50 expression: expression . ADD multiplicative_expression
   51           | expression . SUB multiplicative_expression
   70 var: error L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 124
    ADD               shift, and go to state 101
    SUB               shift, and go to state 102


State 90

   67 vars: var COMMA . vars

    error  shift, and go to state 56
    IDENT  shift, and go to state 12

    vars   go to state 125
    var    go to state 58
    ident  go to state 52


State 91

   42 relation_exp: L_PAREN bool_exp . R_PAREN

    R_PAREN  shift, and go to state 126


State 92

   39 relation_exp: expression . comp expression
   50 expression: expression . ADD multiplicative_expression
   51           | expression . SUB multiplicative_expression
   62 terms: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 127
    ADD      shift, and go to state 101
    SUB      shift, and go to state 102
    LT       shift, and go to state 103
    LTE      shift, and go to state 104
    GT       shift, and go to state 105
    GTE      shift, and go to state 106
    EQ       shift, and go to state 107
    NEQ      shift, and go to state 108

    comp  go to state 109


State 93

   59 term: IDENT error .

    $default  reduce using rule 59 (term)


State 94

   63 parenExpression: L_PAREN . expressions R_PAREN

    error    shift, and go to state 56
    L_PAREN  shift, and go to state 75
    NUMBER   shift, and go to state 31
    IDENT    shift, and go to state 62
    SUB      shift, and go to state 63

    expression                 go to state 128
    multiplicative_expression  go to state 69
    term                       go to state 70
    terms                      go to state 71
    expressions                go to state 129
    var                        go to state 72
    ident                      go to state 52
    number                     go to state 73


State 95

   58 term: IDENT parenExpression .

    $default  reduce using rule 58 (term)


State 96

   57 term: SUB terms .

    $default  reduce using rule 57 (term)


State 97

   38 relation_exp: NOT relation_exp .

    $default  reduce using rule 38 (relation_exp)


State 98

   28 ifCond: IF bool_exp THEN .

    $default  reduce using rule 28 (ifCond)


State 99

   35 bool_exp: relation_and_exp OR . relation_and_exp

    error    shift, and go to state 56
    TRUE     shift, and go to state 59
    FALSE    shift, and go to state 60
    L_PAREN  shift, and go to state 61
    NUMBER   shift, and go to state 31
    IDENT    shift, and go to state 62
    SUB      shift, and go to state 63
    NOT      shift, and go to state 64

    relation_and_exp           go to state 130
    relation_exp               go to state 67
    expression                 go to state 68
    multiplicative_expression  go to state 69
    term                       go to state 70
    terms                      go to state 71
    var                        go to state 72
    ident                      go to state 52
    number                     go to state 73


State 100

   37 relation_and_exp: relation_exp AND . relation_and_exp

    error    shift, and go to state 56
    TRUE     shift, and go to state 59
    FALSE    shift, and go to state 60
    L_PAREN  shift, and go to state 61
    NUMBER   shift, and go to state 31
    IDENT    shift, and go to state 62
    SUB      shift, and go to state 63
    NOT      shift, and go to state 64

    relation_and_exp           go to state 131
    relation_exp               go to state 67
    expression                 go to state 68
    multiplicative_expression  go to state 69
    term                       go to state 70
    terms                      go to state 71
    var                        go to state 72
    ident                      go to state 52
    number                     go to state 73


State 101

   50 expression: expression ADD . multiplicative_expression

    error    shift, and go to state 56
    L_PAREN  shift, and go to state 75
    NUMBER   shift, and go to state 31
    IDENT    shift, and go to state 62
    SUB      shift, and go to state 63

    multiplicative_expression  go to state 132
    term                       go to state 70
    terms                      go to state 71
    var                        go to state 72
    ident                      go to state 52
    number                     go to state 73


State 102

   51 expression: expression SUB . multiplicative_expression

    error    shift, and go to state 56
    L_PAREN  shift, and go to state 75
    NUMBER   shift, and go to state 31
    IDENT    shift, and go to state 62
    SUB      shift, and go to state 63

    multiplicative_expression  go to state 133
    term                       go to state 70
    terms                      go to state 71
    var                        go to state 72
    ident                      go to state 52
    number                     go to state 73


State 103

   45 comp: LT .

    $default  reduce using rule 45 (comp)


State 104

   47 comp: LTE .

    $default  reduce using rule 47 (comp)


State 105

   46 comp: GT .

    $default  reduce using rule 46 (comp)


State 106

   48 comp: GTE .

    $default  reduce using rule 48 (comp)


State 107

   43 comp: EQ .

    $default  reduce using rule 43 (comp)


State 108

   44 comp: NEQ .

    $default  reduce using rule 44 (comp)


State 109

   39 relation_exp: expression comp . expression

    error    shift, and go to state 56
    L_PAREN  shift, and go to state 75
    NUMBER   shift, and go to state 31
    IDENT    shift, and go to state 62
    SUB      shift, and go to state 63

    expression                 go to state 134
    multiplicative_expression  go to state 69
    term                       go to state 70
    terms                      go to state 71
    var                        go to state 72
    ident                      go to state 52
    number                     go to state 73


State 110

   53 multiplicative_expression: multiplicative_expression MULT . term

    error    shift, and go to state 56
    L_PAREN  shift, and go to state 75
    NUMBER   shift, and go to state 31
    IDENT    shift, and go to state 62
    SUB      shift, and go to state 63

    term    go to state 135
    terms   go to state 71
    var     go to state 72
    ident   go to state 52
    number  go to state 73


State 111

   54 multiplicative_expression: multiplicative_expression DIV . term

    error    shift, and go to state 56
    L_PAREN  shift, and go to state 75
    NUMBER   shift, and go to state 31
    IDENT    shift, and go to state 62
    SUB      shift, and go to state 63

    term    go to state 136
    terms   go to state 71
    var     go to state 72
    ident   go to state 52
    number  go to state 73


State 112

   55 multiplicative_expression: multiplicative_expression MOD . term

    error    shift, and go to state 56
    L_PAREN  shift, and go to state 75
    NUMBER   shift, and go to state 31
    IDENT    shift, and go to state 62
    SUB      shift, and go to state 63

    term    go to state 137
    terms   go to state 71
    var     go to state 72
    ident   go to state 52
    number  go to state 73


State 113

   50 expression: expression . ADD multiplicative_expression
   51           | expression . SUB multiplicative_expression
   62 terms: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 127
    ADD      shift, and go to state 101
    SUB      shift, and go to state 102


State 114

   13 statements: statement SEMICOLON statements .

    $default  reduce using rule 13 (statements)


State 115

   20 statement: foreach IN ident . M5 BEGINLOOP statements ENDLOOP

    $default  reduce using rule 31 (M5)

    M5  go to state 138


State 116

   18 statement: while BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 139


State 117

   30 endif: ENDIF .

    $default  reduce using rule 30 (endif)


State 118

   29 else: ELSE .

    $default  reduce using rule 29 (else)


State 119

   17 statement: ifCond statements else . statements endif

    error     shift, and go to state 36
    READ      shift, and go to state 37
    IF        shift, and go to state 38
    WHILE     shift, and go to state 39
    DO        shift, and go to state 40
    RETURN    shift, and go to state 41
    CONTINUE  shift, and go to state 42
    WRITE     shift, and go to state 43
    FOREACH   shift, and go to state 44
    IDENT     shift, and go to state 12

    ENDIF  reduce using rule 14 (statements)

    statements  go to state 140
    statement   go to state 46
    foreach     go to state 47
    while       go to state 48
    ifCond      go to state 49
    do          go to state 50
    var         go to state 51
    ident       go to state 52


State 120

   16 statement: ifCond statements endif .

    $default  reduce using rule 16 (statement)


State 121

   19 statement: do BEGINLOOP statements . ENDLOOP M8 WHILE bool_exp

    ENDLOOP  shift, and go to state 141


State 122

   15 statement: var ASSIGN expression .
   50 expression: expression . ADD multiplicative_expression
   51           | expression . SUB multiplicative_expression

    ADD  shift, and go to state 101
    SUB  shift, and go to state 102

    $default  reduce using rule 15 (statement)


State 123

   50 expression: expression . ADD multiplicative_expression
   51           | expression . SUB multiplicative_expression
   69 var: ident L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 142
    ADD               shift, and go to state 101
    SUB               shift, and go to state 102


State 124

   70 var: error L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 70 (var)


State 125

   67 vars: var COMMA vars .

    $default  reduce using rule 67 (vars)


State 126

   42 relation_exp: L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 42 (relation_exp)


State 127

   62 terms: L_PAREN expression R_PAREN .

    $default  reduce using rule 62 (terms)


State 128

   50 expression: expression . ADD multiplicative_expression
   51           | expression . SUB multiplicative_expression
   64 expressions: expression .
   65            | expression . COMMA expressions

    COMMA  shift, and go to state 143
    ADD    shift, and go to state 101
    SUB    shift, and go to state 102

    $default  reduce using rule 64 (expressions)


State 129

   63 parenExpression: L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 144


State 130

   35 bool_exp: relation_and_exp OR relation_and_exp .

    $default  reduce using rule 35 (bool_exp)


State 131

   37 relation_and_exp: relation_exp AND relation_and_exp .

    $default  reduce using rule 37 (relation_and_exp)


State 132

   50 expression: expression ADD multiplicative_expression .
   53 multiplicative_expression: multiplicative_expression . MULT term
   54                          | multiplicative_expression . DIV term
   55                          | multiplicative_expression . MOD term

    MULT  shift, and go to state 110
    DIV   shift, and go to state 111
    MOD   shift, and go to state 112

    $default  reduce using rule 50 (expression)


State 133

   51 expression: expression SUB multiplicative_expression .
   53 multiplicative_expression: multiplicative_expression . MULT term
   54                          | multiplicative_expression . DIV term
   55                          | multiplicative_expression . MOD term

    MULT  shift, and go to state 110
    DIV   shift, and go to state 111
    MOD   shift, and go to state 112

    $default  reduce using rule 51 (expression)


State 134

   39 relation_exp: expression comp expression .
   50 expression: expression . ADD multiplicative_expression
   51           | expression . SUB multiplicative_expression

    ADD  shift, and go to state 101
    SUB  shift, and go to state 102

    $default  reduce using rule 39 (relation_exp)


State 135

   53 multiplicative_expression: multiplicative_expression MULT term .

    $default  reduce using rule 53 (multiplicative_expression)


State 136

   54 multiplicative_expression: multiplicative_expression DIV term .

    $default  reduce using rule 54 (multiplicative_expression)


State 137

   55 multiplicative_expression: multiplicative_expression MOD term .

    $default  reduce using rule 55 (multiplicative_expression)


State 138

   20 statement: foreach IN ident M5 . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 145


State 139

   18 statement: while BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 18 (statement)


State 140

   17 statement: ifCond statements else statements . endif

    ENDIF  shift, and go to state 117

    endif  go to state 146


State 141

   19 statement: do BEGINLOOP statements ENDLOOP . M8 WHILE bool_exp

    $default  reduce using rule 33 (M8)

    M8  go to state 147


State 142

   69 var: ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 69 (var)


State 143

   65 expressions: expression COMMA . expressions

    error    shift, and go to state 56
    L_PAREN  shift, and go to state 75
    NUMBER   shift, and go to state 31
    IDENT    shift, and go to state 62
    SUB      shift, and go to state 63

    expression                 go to state 128
    multiplicative_expression  go to state 69
    term                       go to state 70
    terms                      go to state 71
    expressions                go to state 148
    var                        go to state 72
    ident                      go to state 52
    number                     go to state 73


State 144

   63 parenExpression: L_PAREN expressions R_PAREN .

    $default  reduce using rule 63 (parenExpression)


State 145

   20 statement: foreach IN ident M5 BEGINLOOP . statements ENDLOOP

    error     shift, and go to state 36
    READ      shift, and go to state 37
    IF        shift, and go to state 38
    WHILE     shift, and go to state 39
    DO        shift, and go to state 40
    RETURN    shift, and go to state 41
    CONTINUE  shift, and go to state 42
    WRITE     shift, and go to state 43
    FOREACH   shift, and go to state 44
    IDENT     shift, and go to state 12

    ENDLOOP  reduce using rule 14 (statements)

    statements  go to state 149
    statement   go to state 46
    foreach     go to state 47
    while       go to state 48
    ifCond      go to state 49
    do          go to state 50
    var         go to state 51
    ident       go to state 52


State 146

   17 statement: ifCond statements else statements endif .

    $default  reduce using rule 17 (statement)


State 147

   19 statement: do BEGINLOOP statements ENDLOOP M8 . WHILE bool_exp

    WHILE  shift, and go to state 150


State 148

   65 expressions: expression COMMA expressions .

    $default  reduce using rule 65 (expressions)


State 149

   20 statement: foreach IN ident M5 BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 151


State 150

   19 statement: do BEGINLOOP statements ENDLOOP M8 WHILE . bool_exp

    error    shift, and go to state 56
    TRUE     shift, and go to state 59
    FALSE    shift, and go to state 60
    L_PAREN  shift, and go to state 61
    NUMBER   shift, and go to state 31
    IDENT    shift, and go to state 62
    SUB      shift, and go to state 63
    NOT      shift, and go to state 64

    bool_exp                   go to state 152
    relation_and_exp           go to state 66
    relation_exp               go to state 67
    expression                 go to state 68
    multiplicative_expression  go to state 69
    term                       go to state 70
    terms                      go to state 71
    var                        go to state 72
    ident                      go to state 52
    number                     go to state 73


State 151

   20 statement: foreach IN ident M5 BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 20 (statement)


State 152

   19 statement: do BEGINLOOP statements ENDLOOP M8 WHILE bool_exp .

    $default  reduce using rule 19 (statement)
