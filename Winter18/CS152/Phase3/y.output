Grammar

    0 $accept: prog_start $end

    1 prog_start: functions

    2 functions: function functions
    3          | %empty

    4 function: funcName SEMICOLON M1 BEGIN_PARAMS declarations END_PARAMS M2 BEGIN_LOCALS declarations M END_LOCALS BEGIN_BODY statements END_BODY

    5 funcName: FUNCTION IDENT

    6 M: %empty

    7 M1: %empty

    8 M2: %empty

    9 declarations: declaration SEMICOLON declarations
   10             | %empty

   11 declaration: identifiers COLON INTEGER
   12            | identifiers COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER

   13 statements: statement SEMICOLON statements
   14           | %empty

   15 statement: var ASSIGN expression
   16          | ifCond statements M4 ENDIF
   17          | ifCond statements M3 ELSE statements M4 ENDIF
   18          | WHILE M6 bool_exp loop M7
   19          | DO M10 BEGINLOOP statements ENDLOOP M11 WHILE bool_exp
   20          | FOREACH ident IN IDENT loop
   21          | READ M8 vars
   22          | WRITE M9 vars
   23          | CONTINUE
   24          | RETURN expression

   25 M8: %empty

   26 M9: %empty

   27 ifCond: IF bool_exp THEN

   28 loop: BEGINLOOP statements ENDLOOP

   29 M3: %empty

   30 M4: %empty

   31 M6: %empty

   32 M7: %empty

   33 M10: %empty

   34 M11: %empty

   35 bool_exp: relation_and_exp
   36         | relation_and_exp OR relation_and_exp

   37 relation_and_exp: relation_exp
   38                 | relation_exp AND relation_and_exp

   39 relation_exp: NOT relation_exp
   40             | expression comp expression
   41             | TRUE
   42             | FALSE
   43             | L_PAREN bool_exp R_PAREN

   44 comp: EQ
   45     | NEQ
   46     | LT
   47     | GT
   48     | LTE
   49     | GTE

   50 expression: multiplicative_expression
   51           | expression ADD multiplicative_expression
   52           | expression SUB multiplicative_expression

   53 multiplicative_expression: term
   54                          | multiplicative_expression MULT term
   55                          | multiplicative_expression DIV term
   56                          | multiplicative_expression MOD term

   57 term: terms
   58     | SUB terms
   59     | IDENT parenExpression

   60 terms: number
   61      | var
   62      | L_PAREN expression R_PAREN

   63 parenExpression: L_PAREN expressions R_PAREN

   64 expressions: expression
   65            | expression COMMA expressions

   66 vars: var
   67     | var COMMA vars

   68 var: ident
   69    | ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET

   70 identifiers: ident
   71            | ident COMMA identifiers

   72 ident: IDENT

   73 number: NUMBER


Terminals, with rules where they appear

$end (0) 0
error (256)
FUNCTION (258) 5
INTEGER (259) 11 12
OF (260) 12
ARRAY (261) 12
READ (262) 21
IF (263) 27
THEN (264) 27
ENDIF (265) 16 17
ELSE (266) 17
WHILE (267) 18 19
DO (268) 19
BEGIN_PARAMS (269) 4
BEGIN_LOCALS (270) 4
BEGIN_BODY (271) 4
IN (272) 20
BEGINLOOP (273) 19 28
ENDLOOP (274) 19 28
RETURN (275) 24
END_PARAMS (276) 4
END_LOCALS (277) 4
END_BODY (278) 4
CONTINUE (279) 23
WRITE (280) 22
TRUE (281) 41
FALSE (282) 42
FOREACH (283) 20
SEMICOLON (284) 4 9 13
COLON (285) 11 12
COMMA (286) 65 67 71
L_PAREN (287) 43 62 63
R_PAREN (288) 43 62 63
L_SQUARE_BRACKET (289) 12 69
R_SQUARE_BRACKET (290) 12 69
NUMBER (291) 73
IDENT (292) 5 20 59 72
UMINUS (293)
MULT (294) 54
DIV (295) 55
MOD (296) 56
ADD (297) 51
SUB (298) 52 58
LT (299) 46
LTE (300) 48
GT (301) 47
GTE (302) 49
EQ (303) 44
NEQ (304) 45
NOT (305) 39
AND (306) 38
OR (307) 36
ASSIGN (308) 15


Nonterminals, with rules where they appear

$accept (54)
    on left: 0
prog_start (55)
    on left: 1, on right: 0
functions (56)
    on left: 2 3, on right: 1 2
function (57)
    on left: 4, on right: 2
funcName (58)
    on left: 5, on right: 4
M (59)
    on left: 6, on right: 4
M1 (60)
    on left: 7, on right: 4
M2 (61)
    on left: 8, on right: 4
declarations (62)
    on left: 9 10, on right: 4 9
declaration (63)
    on left: 11 12, on right: 9
statements (64)
    on left: 13 14, on right: 4 13 16 17 19 28
statement (65)
    on left: 15 16 17 18 19 20 21 22 23 24, on right: 13
M8 (66)
    on left: 25, on right: 21
M9 (67)
    on left: 26, on right: 22
ifCond (68)
    on left: 27, on right: 16 17
loop (69)
    on left: 28, on right: 18 20
M3 (70)
    on left: 29, on right: 17
M4 (71)
    on left: 30, on right: 16 17
M6 (72)
    on left: 31, on right: 18
M7 (73)
    on left: 32, on right: 18
M10 (74)
    on left: 33, on right: 19
M11 (75)
    on left: 34, on right: 19
bool_exp (76)
    on left: 35 36, on right: 18 19 27 43
relation_and_exp (77)
    on left: 37 38, on right: 35 36 38
relation_exp (78)
    on left: 39 40 41 42 43, on right: 37 38 39
comp (79)
    on left: 44 45 46 47 48 49, on right: 40
expression (80)
    on left: 50 51 52, on right: 15 24 40 51 52 62 64 65 69
multiplicative_expression (81)
    on left: 53 54 55 56, on right: 50 51 52 54 55 56
term (82)
    on left: 57 58 59, on right: 53 54 55 56
terms (83)
    on left: 60 61 62, on right: 57 58
parenExpression (84)
    on left: 63, on right: 59
expressions (85)
    on left: 64 65, on right: 63 65
vars (86)
    on left: 66 67, on right: 21 22 67
var (87)
    on left: 68 69, on right: 15 61 66 67
identifiers (88)
    on left: 70 71, on right: 11 12 71
ident (89)
    on left: 72, on right: 20 68 69 70 71
number (90)
    on left: 73, on right: 12 60


State 0

    0 $accept: . prog_start $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 3 (functions)

    prog_start  go to state 2
    functions   go to state 3
    function    go to state 4
    funcName    go to state 5


State 1

    5 funcName: FUNCTION . IDENT

    IDENT  shift, and go to state 6


State 2

    0 $accept: prog_start . $end

    $end  shift, and go to state 7


State 3

    1 prog_start: functions .

    $default  reduce using rule 1 (prog_start)


State 4

    2 functions: function . functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 3 (functions)

    functions  go to state 8
    function   go to state 4
    funcName   go to state 5


State 5

    4 function: funcName . SEMICOLON M1 BEGIN_PARAMS declarations END_PARAMS M2 BEGIN_LOCALS declarations M END_LOCALS BEGIN_BODY statements END_BODY

    SEMICOLON  shift, and go to state 9


State 6

    5 funcName: FUNCTION IDENT .

    $default  reduce using rule 5 (funcName)


State 7

    0 $accept: prog_start $end .

    $default  accept


State 8

    2 functions: function functions .

    $default  reduce using rule 2 (functions)


State 9

    4 function: funcName SEMICOLON . M1 BEGIN_PARAMS declarations END_PARAMS M2 BEGIN_LOCALS declarations M END_LOCALS BEGIN_BODY statements END_BODY

    $default  reduce using rule 7 (M1)

    M1  go to state 10


State 10

    4 function: funcName SEMICOLON M1 . BEGIN_PARAMS declarations END_PARAMS M2 BEGIN_LOCALS declarations M END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_PARAMS  shift, and go to state 11


State 11

    4 function: funcName SEMICOLON M1 BEGIN_PARAMS . declarations END_PARAMS M2 BEGIN_LOCALS declarations M END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 12

    $default  reduce using rule 10 (declarations)

    declarations  go to state 13
    declaration   go to state 14
    identifiers   go to state 15
    ident         go to state 16


State 12

   72 ident: IDENT .

    $default  reduce using rule 72 (ident)


State 13

    4 function: funcName SEMICOLON M1 BEGIN_PARAMS declarations . END_PARAMS M2 BEGIN_LOCALS declarations M END_LOCALS BEGIN_BODY statements END_BODY

    END_PARAMS  shift, and go to state 17


State 14

    9 declarations: declaration . SEMICOLON declarations

    SEMICOLON  shift, and go to state 18


State 15

   11 declaration: identifiers . COLON INTEGER
   12            | identifiers . COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER

    COLON  shift, and go to state 19


State 16

   70 identifiers: ident .
   71            | ident . COMMA identifiers

    COMMA  shift, and go to state 20

    $default  reduce using rule 70 (identifiers)


State 17

    4 function: funcName SEMICOLON M1 BEGIN_PARAMS declarations END_PARAMS . M2 BEGIN_LOCALS declarations M END_LOCALS BEGIN_BODY statements END_BODY

    $default  reduce using rule 8 (M2)

    M2  go to state 21


State 18

    9 declarations: declaration SEMICOLON . declarations

    IDENT  shift, and go to state 12

    $default  reduce using rule 10 (declarations)

    declarations  go to state 22
    declaration   go to state 14
    identifiers   go to state 15
    ident         go to state 16


State 19

   11 declaration: identifiers COLON . INTEGER
   12            | identifiers COLON . ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 23
    ARRAY    shift, and go to state 24


State 20

   71 identifiers: ident COMMA . identifiers

    IDENT  shift, and go to state 12

    identifiers  go to state 25
    ident        go to state 16


State 21

    4 function: funcName SEMICOLON M1 BEGIN_PARAMS declarations END_PARAMS M2 . BEGIN_LOCALS declarations M END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 26


State 22

    9 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 9 (declarations)


State 23

   11 declaration: identifiers COLON INTEGER .

    $default  reduce using rule 11 (declaration)


State 24

   12 declaration: identifiers COLON ARRAY . L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 27


State 25

   71 identifiers: ident COMMA identifiers .

    $default  reduce using rule 71 (identifiers)


State 26

    4 function: funcName SEMICOLON M1 BEGIN_PARAMS declarations END_PARAMS M2 BEGIN_LOCALS . declarations M END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 12

    $default  reduce using rule 10 (declarations)

    declarations  go to state 28
    declaration   go to state 14
    identifiers   go to state 15
    ident         go to state 16


State 27

   12 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET . number R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 29

    number  go to state 30


State 28

    4 function: funcName SEMICOLON M1 BEGIN_PARAMS declarations END_PARAMS M2 BEGIN_LOCALS declarations . M END_LOCALS BEGIN_BODY statements END_BODY

    $default  reduce using rule 6 (M)

    M  go to state 31


State 29

   73 number: NUMBER .

    $default  reduce using rule 73 (number)


State 30

   12 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET number . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 32


State 31

    4 function: funcName SEMICOLON M1 BEGIN_PARAMS declarations END_PARAMS M2 BEGIN_LOCALS declarations M . END_LOCALS BEGIN_BODY statements END_BODY

    END_LOCALS  shift, and go to state 33


State 32

   12 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 34


State 33

    4 function: funcName SEMICOLON M1 BEGIN_PARAMS declarations END_PARAMS M2 BEGIN_LOCALS declarations M END_LOCALS . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 35


State 34

   12 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 36


State 35

    4 function: funcName SEMICOLON M1 BEGIN_PARAMS declarations END_PARAMS M2 BEGIN_LOCALS declarations M END_LOCALS BEGIN_BODY . statements END_BODY

    READ      shift, and go to state 37
    IF        shift, and go to state 38
    WHILE     shift, and go to state 39
    DO        shift, and go to state 40
    RETURN    shift, and go to state 41
    CONTINUE  shift, and go to state 42
    WRITE     shift, and go to state 43
    FOREACH   shift, and go to state 44
    IDENT     shift, and go to state 12

    $default  reduce using rule 14 (statements)

    statements  go to state 45
    statement   go to state 46
    ifCond      go to state 47
    var         go to state 48
    ident       go to state 49


State 36

   12 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 12 (declaration)


State 37

   21 statement: READ . M8 vars

    $default  reduce using rule 25 (M8)

    M8  go to state 50


State 38

   27 ifCond: IF . bool_exp THEN

    TRUE     shift, and go to state 51
    FALSE    shift, and go to state 52
    L_PAREN  shift, and go to state 53
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 54
    SUB      shift, and go to state 55
    NOT      shift, and go to state 56

    bool_exp                   go to state 57
    relation_and_exp           go to state 58
    relation_exp               go to state 59
    expression                 go to state 60
    multiplicative_expression  go to state 61
    term                       go to state 62
    terms                      go to state 63
    var                        go to state 64
    ident                      go to state 49
    number                     go to state 65


State 39

   18 statement: WHILE . M6 bool_exp loop M7

    $default  reduce using rule 31 (M6)

    M6  go to state 66


State 40

   19 statement: DO . M10 BEGINLOOP statements ENDLOOP M11 WHILE bool_exp

    $default  reduce using rule 33 (M10)

    M10  go to state 67


State 41

   24 statement: RETURN . expression

    L_PAREN  shift, and go to state 68
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 54
    SUB      shift, and go to state 55

    expression                 go to state 69
    multiplicative_expression  go to state 61
    term                       go to state 62
    terms                      go to state 63
    var                        go to state 64
    ident                      go to state 49
    number                     go to state 65


State 42

   23 statement: CONTINUE .

    $default  reduce using rule 23 (statement)


State 43

   22 statement: WRITE . M9 vars

    $default  reduce using rule 26 (M9)

    M9  go to state 70


State 44

   20 statement: FOREACH . ident IN IDENT loop

    IDENT  shift, and go to state 12

    ident  go to state 71


State 45

    4 function: funcName SEMICOLON M1 BEGIN_PARAMS declarations END_PARAMS M2 BEGIN_LOCALS declarations M END_LOCALS BEGIN_BODY statements . END_BODY

    END_BODY  shift, and go to state 72


State 46

   13 statements: statement . SEMICOLON statements

    SEMICOLON  shift, and go to state 73


State 47

   16 statement: ifCond . statements M4 ENDIF
   17          | ifCond . statements M3 ELSE statements M4 ENDIF

    READ      shift, and go to state 37
    IF        shift, and go to state 38
    WHILE     shift, and go to state 39
    DO        shift, and go to state 40
    RETURN    shift, and go to state 41
    CONTINUE  shift, and go to state 42
    WRITE     shift, and go to state 43
    FOREACH   shift, and go to state 44
    IDENT     shift, and go to state 12

    $default  reduce using rule 14 (statements)

    statements  go to state 74
    statement   go to state 46
    ifCond      go to state 47
    var         go to state 48
    ident       go to state 49


State 48

   15 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 75


State 49

   68 var: ident .
   69    | ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 76

    $default  reduce using rule 68 (var)


State 50

   21 statement: READ M8 . vars

    IDENT  shift, and go to state 12

    vars   go to state 77
    var    go to state 78
    ident  go to state 49


State 51

   41 relation_exp: TRUE .

    $default  reduce using rule 41 (relation_exp)


State 52

   42 relation_exp: FALSE .

    $default  reduce using rule 42 (relation_exp)


State 53

   43 relation_exp: L_PAREN . bool_exp R_PAREN
   62 terms: L_PAREN . expression R_PAREN

    TRUE     shift, and go to state 51
    FALSE    shift, and go to state 52
    L_PAREN  shift, and go to state 53
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 54
    SUB      shift, and go to state 55
    NOT      shift, and go to state 56

    bool_exp                   go to state 79
    relation_and_exp           go to state 58
    relation_exp               go to state 59
    expression                 go to state 80
    multiplicative_expression  go to state 61
    term                       go to state 62
    terms                      go to state 63
    var                        go to state 64
    ident                      go to state 49
    number                     go to state 65


State 54

   59 term: IDENT . parenExpression
   72 ident: IDENT .

    L_PAREN  shift, and go to state 81

    $default  reduce using rule 72 (ident)

    parenExpression  go to state 82


State 55

   58 term: SUB . terms

    L_PAREN  shift, and go to state 68
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 12

    terms   go to state 83
    var     go to state 64
    ident   go to state 49
    number  go to state 65


State 56

   39 relation_exp: NOT . relation_exp

    TRUE     shift, and go to state 51
    FALSE    shift, and go to state 52
    L_PAREN  shift, and go to state 53
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 54
    SUB      shift, and go to state 55
    NOT      shift, and go to state 56

    relation_exp               go to state 84
    expression                 go to state 60
    multiplicative_expression  go to state 61
    term                       go to state 62
    terms                      go to state 63
    var                        go to state 64
    ident                      go to state 49
    number                     go to state 65


State 57

   27 ifCond: IF bool_exp . THEN

    THEN  shift, and go to state 85


State 58

   35 bool_exp: relation_and_exp .
   36         | relation_and_exp . OR relation_and_exp

    OR  shift, and go to state 86

    $default  reduce using rule 35 (bool_exp)


State 59

   37 relation_and_exp: relation_exp .
   38                 | relation_exp . AND relation_and_exp

    AND  shift, and go to state 87

    $default  reduce using rule 37 (relation_and_exp)


State 60

   40 relation_exp: expression . comp expression
   51 expression: expression . ADD multiplicative_expression
   52           | expression . SUB multiplicative_expression

    ADD  shift, and go to state 88
    SUB  shift, and go to state 89
    LT   shift, and go to state 90
    LTE  shift, and go to state 91
    GT   shift, and go to state 92
    GTE  shift, and go to state 93
    EQ   shift, and go to state 94
    NEQ  shift, and go to state 95

    comp  go to state 96


State 61

   50 expression: multiplicative_expression .
   54 multiplicative_expression: multiplicative_expression . MULT term
   55                          | multiplicative_expression . DIV term
   56                          | multiplicative_expression . MOD term

    MULT  shift, and go to state 97
    DIV   shift, and go to state 98
    MOD   shift, and go to state 99

    $default  reduce using rule 50 (expression)


State 62

   53 multiplicative_expression: term .

    $default  reduce using rule 53 (multiplicative_expression)


State 63

   57 term: terms .

    $default  reduce using rule 57 (term)


State 64

   61 terms: var .

    $default  reduce using rule 61 (terms)


State 65

   60 terms: number .

    $default  reduce using rule 60 (terms)


State 66

   18 statement: WHILE M6 . bool_exp loop M7

    TRUE     shift, and go to state 51
    FALSE    shift, and go to state 52
    L_PAREN  shift, and go to state 53
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 54
    SUB      shift, and go to state 55
    NOT      shift, and go to state 56

    bool_exp                   go to state 100
    relation_and_exp           go to state 58
    relation_exp               go to state 59
    expression                 go to state 60
    multiplicative_expression  go to state 61
    term                       go to state 62
    terms                      go to state 63
    var                        go to state 64
    ident                      go to state 49
    number                     go to state 65


State 67

   19 statement: DO M10 . BEGINLOOP statements ENDLOOP M11 WHILE bool_exp

    BEGINLOOP  shift, and go to state 101


State 68

   62 terms: L_PAREN . expression R_PAREN

    L_PAREN  shift, and go to state 68
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 54
    SUB      shift, and go to state 55

    expression                 go to state 102
    multiplicative_expression  go to state 61
    term                       go to state 62
    terms                      go to state 63
    var                        go to state 64
    ident                      go to state 49
    number                     go to state 65


State 69

   24 statement: RETURN expression .
   51 expression: expression . ADD multiplicative_expression
   52           | expression . SUB multiplicative_expression

    ADD  shift, and go to state 88
    SUB  shift, and go to state 89

    $default  reduce using rule 24 (statement)


State 70

   22 statement: WRITE M9 . vars

    IDENT  shift, and go to state 12

    vars   go to state 103
    var    go to state 78
    ident  go to state 49


State 71

   20 statement: FOREACH ident . IN IDENT loop

    IN  shift, and go to state 104


State 72

    4 function: funcName SEMICOLON M1 BEGIN_PARAMS declarations END_PARAMS M2 BEGIN_LOCALS declarations M END_LOCALS BEGIN_BODY statements END_BODY .

    $default  reduce using rule 4 (function)


State 73

   13 statements: statement SEMICOLON . statements

    READ      shift, and go to state 37
    IF        shift, and go to state 38
    WHILE     shift, and go to state 39
    DO        shift, and go to state 40
    RETURN    shift, and go to state 41
    CONTINUE  shift, and go to state 42
    WRITE     shift, and go to state 43
    FOREACH   shift, and go to state 44
    IDENT     shift, and go to state 12

    $default  reduce using rule 14 (statements)

    statements  go to state 105
    statement   go to state 46
    ifCond      go to state 47
    var         go to state 48
    ident       go to state 49


State 74

   16 statement: ifCond statements . M4 ENDIF
   17          | ifCond statements . M3 ELSE statements M4 ENDIF

    ENDIF     reduce using rule 30 (M4)
    $default  reduce using rule 29 (M3)

    M3  go to state 106
    M4  go to state 107


State 75

   15 statement: var ASSIGN . expression

    L_PAREN  shift, and go to state 68
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 54
    SUB      shift, and go to state 55

    expression                 go to state 108
    multiplicative_expression  go to state 61
    term                       go to state 62
    terms                      go to state 63
    var                        go to state 64
    ident                      go to state 49
    number                     go to state 65


State 76

   69 var: ident L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    L_PAREN  shift, and go to state 68
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 54
    SUB      shift, and go to state 55

    expression                 go to state 109
    multiplicative_expression  go to state 61
    term                       go to state 62
    terms                      go to state 63
    var                        go to state 64
    ident                      go to state 49
    number                     go to state 65


State 77

   21 statement: READ M8 vars .

    $default  reduce using rule 21 (statement)


State 78

   66 vars: var .
   67     | var . COMMA vars

    COMMA  shift, and go to state 110

    $default  reduce using rule 66 (vars)


State 79

   43 relation_exp: L_PAREN bool_exp . R_PAREN

    R_PAREN  shift, and go to state 111


State 80

   40 relation_exp: expression . comp expression
   51 expression: expression . ADD multiplicative_expression
   52           | expression . SUB multiplicative_expression
   62 terms: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 112
    ADD      shift, and go to state 88
    SUB      shift, and go to state 89
    LT       shift, and go to state 90
    LTE      shift, and go to state 91
    GT       shift, and go to state 92
    GTE      shift, and go to state 93
    EQ       shift, and go to state 94
    NEQ      shift, and go to state 95

    comp  go to state 96


State 81

   63 parenExpression: L_PAREN . expressions R_PAREN

    L_PAREN  shift, and go to state 68
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 54
    SUB      shift, and go to state 55

    expression                 go to state 113
    multiplicative_expression  go to state 61
    term                       go to state 62
    terms                      go to state 63
    expressions                go to state 114
    var                        go to state 64
    ident                      go to state 49
    number                     go to state 65


State 82

   59 term: IDENT parenExpression .

    $default  reduce using rule 59 (term)


State 83

   58 term: SUB terms .

    $default  reduce using rule 58 (term)


State 84

   39 relation_exp: NOT relation_exp .

    $default  reduce using rule 39 (relation_exp)


State 85

   27 ifCond: IF bool_exp THEN .

    $default  reduce using rule 27 (ifCond)


State 86

   36 bool_exp: relation_and_exp OR . relation_and_exp

    TRUE     shift, and go to state 51
    FALSE    shift, and go to state 52
    L_PAREN  shift, and go to state 53
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 54
    SUB      shift, and go to state 55
    NOT      shift, and go to state 56

    relation_and_exp           go to state 115
    relation_exp               go to state 59
    expression                 go to state 60
    multiplicative_expression  go to state 61
    term                       go to state 62
    terms                      go to state 63
    var                        go to state 64
    ident                      go to state 49
    number                     go to state 65


State 87

   38 relation_and_exp: relation_exp AND . relation_and_exp

    TRUE     shift, and go to state 51
    FALSE    shift, and go to state 52
    L_PAREN  shift, and go to state 53
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 54
    SUB      shift, and go to state 55
    NOT      shift, and go to state 56

    relation_and_exp           go to state 116
    relation_exp               go to state 59
    expression                 go to state 60
    multiplicative_expression  go to state 61
    term                       go to state 62
    terms                      go to state 63
    var                        go to state 64
    ident                      go to state 49
    number                     go to state 65


State 88

   51 expression: expression ADD . multiplicative_expression

    L_PAREN  shift, and go to state 68
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 54
    SUB      shift, and go to state 55

    multiplicative_expression  go to state 117
    term                       go to state 62
    terms                      go to state 63
    var                        go to state 64
    ident                      go to state 49
    number                     go to state 65


State 89

   52 expression: expression SUB . multiplicative_expression

    L_PAREN  shift, and go to state 68
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 54
    SUB      shift, and go to state 55

    multiplicative_expression  go to state 118
    term                       go to state 62
    terms                      go to state 63
    var                        go to state 64
    ident                      go to state 49
    number                     go to state 65


State 90

   46 comp: LT .

    $default  reduce using rule 46 (comp)


State 91

   48 comp: LTE .

    $default  reduce using rule 48 (comp)


State 92

   47 comp: GT .

    $default  reduce using rule 47 (comp)


State 93

   49 comp: GTE .

    $default  reduce using rule 49 (comp)


State 94

   44 comp: EQ .

    $default  reduce using rule 44 (comp)


State 95

   45 comp: NEQ .

    $default  reduce using rule 45 (comp)


State 96

   40 relation_exp: expression comp . expression

    L_PAREN  shift, and go to state 68
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 54
    SUB      shift, and go to state 55

    expression                 go to state 119
    multiplicative_expression  go to state 61
    term                       go to state 62
    terms                      go to state 63
    var                        go to state 64
    ident                      go to state 49
    number                     go to state 65


State 97

   54 multiplicative_expression: multiplicative_expression MULT . term

    L_PAREN  shift, and go to state 68
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 54
    SUB      shift, and go to state 55

    term    go to state 120
    terms   go to state 63
    var     go to state 64
    ident   go to state 49
    number  go to state 65


State 98

   55 multiplicative_expression: multiplicative_expression DIV . term

    L_PAREN  shift, and go to state 68
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 54
    SUB      shift, and go to state 55

    term    go to state 121
    terms   go to state 63
    var     go to state 64
    ident   go to state 49
    number  go to state 65


State 99

   56 multiplicative_expression: multiplicative_expression MOD . term

    L_PAREN  shift, and go to state 68
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 54
    SUB      shift, and go to state 55

    term    go to state 122
    terms   go to state 63
    var     go to state 64
    ident   go to state 49
    number  go to state 65


State 100

   18 statement: WHILE M6 bool_exp . loop M7

    BEGINLOOP  shift, and go to state 123

    loop  go to state 124


State 101

   19 statement: DO M10 BEGINLOOP . statements ENDLOOP M11 WHILE bool_exp

    READ      shift, and go to state 37
    IF        shift, and go to state 38
    WHILE     shift, and go to state 39
    DO        shift, and go to state 40
    RETURN    shift, and go to state 41
    CONTINUE  shift, and go to state 42
    WRITE     shift, and go to state 43
    FOREACH   shift, and go to state 44
    IDENT     shift, and go to state 12

    $default  reduce using rule 14 (statements)

    statements  go to state 125
    statement   go to state 46
    ifCond      go to state 47
    var         go to state 48
    ident       go to state 49


State 102

   51 expression: expression . ADD multiplicative_expression
   52           | expression . SUB multiplicative_expression
   62 terms: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 112
    ADD      shift, and go to state 88
    SUB      shift, and go to state 89


State 103

   22 statement: WRITE M9 vars .

    $default  reduce using rule 22 (statement)


State 104

   20 statement: FOREACH ident IN . IDENT loop

    IDENT  shift, and go to state 126


State 105

   13 statements: statement SEMICOLON statements .

    $default  reduce using rule 13 (statements)


State 106

   17 statement: ifCond statements M3 . ELSE statements M4 ENDIF

    ELSE  shift, and go to state 127


State 107

   16 statement: ifCond statements M4 . ENDIF

    ENDIF  shift, and go to state 128


State 108

   15 statement: var ASSIGN expression .
   51 expression: expression . ADD multiplicative_expression
   52           | expression . SUB multiplicative_expression

    ADD  shift, and go to state 88
    SUB  shift, and go to state 89

    $default  reduce using rule 15 (statement)


State 109

   51 expression: expression . ADD multiplicative_expression
   52           | expression . SUB multiplicative_expression
   69 var: ident L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 129
    ADD               shift, and go to state 88
    SUB               shift, and go to state 89


State 110

   67 vars: var COMMA . vars

    IDENT  shift, and go to state 12

    vars   go to state 130
    var    go to state 78
    ident  go to state 49


State 111

   43 relation_exp: L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 43 (relation_exp)


State 112

   62 terms: L_PAREN expression R_PAREN .

    $default  reduce using rule 62 (terms)


State 113

   51 expression: expression . ADD multiplicative_expression
   52           | expression . SUB multiplicative_expression
   64 expressions: expression .
   65            | expression . COMMA expressions

    COMMA  shift, and go to state 131
    ADD    shift, and go to state 88
    SUB    shift, and go to state 89

    $default  reduce using rule 64 (expressions)


State 114

   63 parenExpression: L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 132


State 115

   36 bool_exp: relation_and_exp OR relation_and_exp .

    $default  reduce using rule 36 (bool_exp)


State 116

   38 relation_and_exp: relation_exp AND relation_and_exp .

    $default  reduce using rule 38 (relation_and_exp)


State 117

   51 expression: expression ADD multiplicative_expression .
   54 multiplicative_expression: multiplicative_expression . MULT term
   55                          | multiplicative_expression . DIV term
   56                          | multiplicative_expression . MOD term

    MULT  shift, and go to state 97
    DIV   shift, and go to state 98
    MOD   shift, and go to state 99

    $default  reduce using rule 51 (expression)


State 118

   52 expression: expression SUB multiplicative_expression .
   54 multiplicative_expression: multiplicative_expression . MULT term
   55                          | multiplicative_expression . DIV term
   56                          | multiplicative_expression . MOD term

    MULT  shift, and go to state 97
    DIV   shift, and go to state 98
    MOD   shift, and go to state 99

    $default  reduce using rule 52 (expression)


State 119

   40 relation_exp: expression comp expression .
   51 expression: expression . ADD multiplicative_expression
   52           | expression . SUB multiplicative_expression

    ADD  shift, and go to state 88
    SUB  shift, and go to state 89

    $default  reduce using rule 40 (relation_exp)


State 120

   54 multiplicative_expression: multiplicative_expression MULT term .

    $default  reduce using rule 54 (multiplicative_expression)


State 121

   55 multiplicative_expression: multiplicative_expression DIV term .

    $default  reduce using rule 55 (multiplicative_expression)


State 122

   56 multiplicative_expression: multiplicative_expression MOD term .

    $default  reduce using rule 56 (multiplicative_expression)


State 123

   28 loop: BEGINLOOP . statements ENDLOOP

    READ      shift, and go to state 37
    IF        shift, and go to state 38
    WHILE     shift, and go to state 39
    DO        shift, and go to state 40
    RETURN    shift, and go to state 41
    CONTINUE  shift, and go to state 42
    WRITE     shift, and go to state 43
    FOREACH   shift, and go to state 44
    IDENT     shift, and go to state 12

    $default  reduce using rule 14 (statements)

    statements  go to state 133
    statement   go to state 46
    ifCond      go to state 47
    var         go to state 48
    ident       go to state 49


State 124

   18 statement: WHILE M6 bool_exp loop . M7

    $default  reduce using rule 32 (M7)

    M7  go to state 134


State 125

   19 statement: DO M10 BEGINLOOP statements . ENDLOOP M11 WHILE bool_exp

    ENDLOOP  shift, and go to state 135


State 126

   20 statement: FOREACH ident IN IDENT . loop

    BEGINLOOP  shift, and go to state 123

    loop  go to state 136


State 127

   17 statement: ifCond statements M3 ELSE . statements M4 ENDIF

    READ      shift, and go to state 37
    IF        shift, and go to state 38
    WHILE     shift, and go to state 39
    DO        shift, and go to state 40
    RETURN    shift, and go to state 41
    CONTINUE  shift, and go to state 42
    WRITE     shift, and go to state 43
    FOREACH   shift, and go to state 44
    IDENT     shift, and go to state 12

    $default  reduce using rule 14 (statements)

    statements  go to state 137
    statement   go to state 46
    ifCond      go to state 47
    var         go to state 48
    ident       go to state 49


State 128

   16 statement: ifCond statements M4 ENDIF .

    $default  reduce using rule 16 (statement)


State 129

   69 var: ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 69 (var)


State 130

   67 vars: var COMMA vars .

    $default  reduce using rule 67 (vars)


State 131

   65 expressions: expression COMMA . expressions

    L_PAREN  shift, and go to state 68
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 54
    SUB      shift, and go to state 55

    expression                 go to state 113
    multiplicative_expression  go to state 61
    term                       go to state 62
    terms                      go to state 63
    expressions                go to state 138
    var                        go to state 64
    ident                      go to state 49
    number                     go to state 65


State 132

   63 parenExpression: L_PAREN expressions R_PAREN .

    $default  reduce using rule 63 (parenExpression)


State 133

   28 loop: BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 139


State 134

   18 statement: WHILE M6 bool_exp loop M7 .

    $default  reduce using rule 18 (statement)


State 135

   19 statement: DO M10 BEGINLOOP statements ENDLOOP . M11 WHILE bool_exp

    $default  reduce using rule 34 (M11)

    M11  go to state 140


State 136

   20 statement: FOREACH ident IN IDENT loop .

    $default  reduce using rule 20 (statement)


State 137

   17 statement: ifCond statements M3 ELSE statements . M4 ENDIF

    $default  reduce using rule 30 (M4)

    M4  go to state 141


State 138

   65 expressions: expression COMMA expressions .

    $default  reduce using rule 65 (expressions)


State 139

   28 loop: BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 28 (loop)


State 140

   19 statement: DO M10 BEGINLOOP statements ENDLOOP M11 . WHILE bool_exp

    WHILE  shift, and go to state 142


State 141

   17 statement: ifCond statements M3 ELSE statements M4 . ENDIF

    ENDIF  shift, and go to state 143


State 142

   19 statement: DO M10 BEGINLOOP statements ENDLOOP M11 WHILE . bool_exp

    TRUE     shift, and go to state 51
    FALSE    shift, and go to state 52
    L_PAREN  shift, and go to state 53
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 54
    SUB      shift, and go to state 55
    NOT      shift, and go to state 56

    bool_exp                   go to state 144
    relation_and_exp           go to state 58
    relation_exp               go to state 59
    expression                 go to state 60
    multiplicative_expression  go to state 61
    term                       go to state 62
    terms                      go to state 63
    var                        go to state 64
    ident                      go to state 49
    number                     go to state 65


State 143

   17 statement: ifCond statements M3 ELSE statements M4 ENDIF .

    $default  reduce using rule 17 (statement)


State 144

   19 statement: DO M10 BEGINLOOP statements ENDLOOP M11 WHILE bool_exp .

    $default  reduce using rule 19 (statement)
