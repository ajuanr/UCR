Grammar

    0 $accept: prog_start $end

    1 prog_start: functions

    2 functions: function functions
    3          | %empty

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    5 declarations: declaration SEMICOLON declarations
    6             | %empty

    7 declaration: identifiers COLON INTEGER
    8            | identifiers COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER

    9 statements: statement SEMICOLON statements
   10           | %empty

   11 statement: var ASSIGN expression
   12          | IF ifCond ENDIF
   13          | IF ifCond ELSE statements ENDIF
   14          | WHILE bool_exp loop
   15          | DO loop WHILE bool_exp
   16          | FOREACH IDENT IN IDENT loop
   17          | READ vars
   18          | WRITE vars
   19          | CONTINUE
   20          | RETURN expression

   21 ifCond: bool_exp THEN statements

   22 loop: BEGINLOOP statements ENDLOOP

   23 bool_exp: relation_and_exp
   24         | relation_and_exp OR relation_and_exp

   25 relation_and_exp: relation_exp
   26                 | relation_exp AND relation_and_exp

   27 relation_exp: NOT relation_exp
   28             | expression comp expression
   29             | TRUE
   30             | FALSE
   31             | L_PAREN bool_exp R_PAREN

   32 comp: EQ
   33     | NEQ
   34     | LT
   35     | GT
   36     | LTE
   37     | GTE

   38 expression: multiplicative_expression
   39           | expression ADD multiplicative_expression
   40           | expression SUB multiplicative_expression

   41 multiplicative_expression: term
   42                          | multiplicative_expression MULT term
   43                          | multiplicative_expression DIV term
   44                          | multiplicative_expression MOD term

   45 term: SUB number
   46     | number
   47     | var
   48     | SUB var
   49     | L_PAREN expression R_PAREN
   50     | SUB L_PAREN expression R_PAREN
   51     | IDENT L_PAREN expressions R_PAREN

   52 expressions: expression
   53            | expression COMMA expressions

   54 vars: var
   55     | var COMMA vars

   56 var: IDENT
   57    | IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET

   58 identifiers: ident
   59            | ident COMMA identifiers

   60 ident: IDENT

   61 number: NUMBER


Terminals, with rules where they appear

$end (0) 0
error (256)
FUNCTION (258) 4
INTEGER (259) 7 8
OF (260) 8
ARRAY (261) 8
READ (262) 17
IF (263) 12 13
THEN (264) 21
ENDIF (265) 12 13
ELSE (266) 13
WHILE (267) 14 15
DO (268) 15
BEGIN_PARAMS (269) 4
BEGIN_LOCALS (270) 4
BEGIN_BODY (271) 4
IN (272) 16
BEGINLOOP (273) 22
ENDLOOP (274) 22
RETURN (275) 20
END_PARAMS (276) 4
END_LOCALS (277) 4
END_BODY (278) 4
CONTINUE (279) 19
WRITE (280) 18
TRUE (281) 29
FALSE (282) 30
FOREACH (283) 16
SEMICOLON (284) 4 5 9
COLON (285) 7 8
COMMA (286) 53 55 59
L_PAREN (287) 31 49 50 51
R_PAREN (288) 31 49 50 51
L_SQUARE_BRACKET (289) 8 57
R_SQUARE_BRACKET (290) 8 57
NUMBER (291) 61
IDENT (292) 4 16 51 56 57 60
UMINUS (293)
MULT (294) 42
DIV (295) 43
MOD (296) 44
ADD (297) 39
SUB (298) 40 45 48 50
LT (299) 34
LTE (300) 36
GT (301) 35
GTE (302) 37
EQ (303) 32
NEQ (304) 33
NOT (305) 27
AND (306) 26
OR (307) 24
ASSIGN (308) 11


Nonterminals, with rules where they appear

$accept (54)
    on left: 0
prog_start (55)
    on left: 1, on right: 0
functions (56)
    on left: 2 3, on right: 1 2
function (57)
    on left: 4, on right: 2
declarations (58)
    on left: 5 6, on right: 4 5
declaration (59)
    on left: 7 8, on right: 5
statements (60)
    on left: 9 10, on right: 4 9 13 21 22
statement (61)
    on left: 11 12 13 14 15 16 17 18 19 20, on right: 9
ifCond (62)
    on left: 21, on right: 12 13
loop (63)
    on left: 22, on right: 14 15 16
bool_exp (64)
    on left: 23 24, on right: 14 15 21 31
relation_and_exp (65)
    on left: 25 26, on right: 23 24 26
relation_exp (66)
    on left: 27 28 29 30 31, on right: 25 26 27
comp (67)
    on left: 32 33 34 35 36 37, on right: 28
expression (68)
    on left: 38 39 40, on right: 11 20 28 39 40 49 50 52 53 57
multiplicative_expression (69)
    on left: 41 42 43 44, on right: 38 39 40 42 43 44
term (70)
    on left: 45 46 47 48 49 50 51, on right: 41 42 43 44
expressions (71)
    on left: 52 53, on right: 51 53
vars (72)
    on left: 54 55, on right: 17 18 55
var (73)
    on left: 56 57, on right: 11 47 48 54 55
identifiers (74)
    on left: 58 59, on right: 7 8 59
ident (75)
    on left: 60, on right: 58 59
number (76)
    on left: 61, on right: 8 45 46


State 0

    0 $accept: . prog_start $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 3 (functions)

    prog_start  go to state 2
    functions   go to state 3
    function    go to state 4


State 1

    4 function: FUNCTION . IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 5


State 2

    0 $accept: prog_start . $end

    $end  shift, and go to state 6


State 3

    1 prog_start: functions .

    $default  reduce using rule 1 (prog_start)


State 4

    2 functions: function . functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 3 (functions)

    functions  go to state 7
    function   go to state 4


State 5

    4 function: FUNCTION IDENT . SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    SEMICOLON  shift, and go to state 8


State 6

    0 $accept: prog_start $end .

    $default  accept


State 7

    2 functions: function functions .

    $default  reduce using rule 2 (functions)


State 8

    4 function: FUNCTION IDENT SEMICOLON . BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_PARAMS  shift, and go to state 9


State 9

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS . declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 10

    $default  reduce using rule 6 (declarations)

    declarations  go to state 11
    declaration   go to state 12
    identifiers   go to state 13
    ident         go to state 14


State 10

   60 ident: IDENT .

    $default  reduce using rule 60 (ident)


State 11

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations . END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    END_PARAMS  shift, and go to state 15


State 12

    5 declarations: declaration . SEMICOLON declarations

    SEMICOLON  shift, and go to state 16


State 13

    7 declaration: identifiers . COLON INTEGER
    8            | identifiers . COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER

    COLON  shift, and go to state 17


State 14

   58 identifiers: ident .
   59            | ident . COMMA identifiers

    COMMA  shift, and go to state 18

    $default  reduce using rule 58 (identifiers)


State 15

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS . BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 19


State 16

    5 declarations: declaration SEMICOLON . declarations

    IDENT  shift, and go to state 10

    $default  reduce using rule 6 (declarations)

    declarations  go to state 20
    declaration   go to state 12
    identifiers   go to state 13
    ident         go to state 14


State 17

    7 declaration: identifiers COLON . INTEGER
    8            | identifiers COLON . ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 21
    ARRAY    shift, and go to state 22


State 18

   59 identifiers: ident COMMA . identifiers

    IDENT  shift, and go to state 10

    identifiers  go to state 23
    ident        go to state 14


State 19

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS . declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 10

    $default  reduce using rule 6 (declarations)

    declarations  go to state 24
    declaration   go to state 12
    identifiers   go to state 13
    ident         go to state 14


State 20

    5 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 5 (declarations)


State 21

    7 declaration: identifiers COLON INTEGER .

    $default  reduce using rule 7 (declaration)


State 22

    8 declaration: identifiers COLON ARRAY . L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 25


State 23

   59 identifiers: ident COMMA identifiers .

    $default  reduce using rule 59 (identifiers)


State 24

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations . END_LOCALS BEGIN_BODY statements END_BODY

    END_LOCALS  shift, and go to state 26


State 25

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET . number R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 27

    number  go to state 28


State 26

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 29


State 27

   61 number: NUMBER .

    $default  reduce using rule 61 (number)


State 28

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET number . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 30


State 29

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY . statements END_BODY

    READ      shift, and go to state 31
    IF        shift, and go to state 32
    WHILE     shift, and go to state 33
    DO        shift, and go to state 34
    RETURN    shift, and go to state 35
    CONTINUE  shift, and go to state 36
    WRITE     shift, and go to state 37
    FOREACH   shift, and go to state 38
    IDENT     shift, and go to state 39

    $default  reduce using rule 10 (statements)

    statements  go to state 40
    statement   go to state 41
    var         go to state 42


State 30

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 43


State 31

   17 statement: READ . vars

    IDENT  shift, and go to state 39

    vars  go to state 44
    var   go to state 45


State 32

   12 statement: IF . ifCond ENDIF
   13          | IF . ifCond ELSE statements ENDIF

    TRUE     shift, and go to state 46
    FALSE    shift, and go to state 47
    L_PAREN  shift, and go to state 48
    NUMBER   shift, and go to state 27
    IDENT    shift, and go to state 49
    SUB      shift, and go to state 50
    NOT      shift, and go to state 51

    ifCond                     go to state 52
    bool_exp                   go to state 53
    relation_and_exp           go to state 54
    relation_exp               go to state 55
    expression                 go to state 56
    multiplicative_expression  go to state 57
    term                       go to state 58
    var                        go to state 59
    number                     go to state 60


State 33

   14 statement: WHILE . bool_exp loop

    TRUE     shift, and go to state 46
    FALSE    shift, and go to state 47
    L_PAREN  shift, and go to state 48
    NUMBER   shift, and go to state 27
    IDENT    shift, and go to state 49
    SUB      shift, and go to state 50
    NOT      shift, and go to state 51

    bool_exp                   go to state 61
    relation_and_exp           go to state 54
    relation_exp               go to state 55
    expression                 go to state 56
    multiplicative_expression  go to state 57
    term                       go to state 58
    var                        go to state 59
    number                     go to state 60


State 34

   15 statement: DO . loop WHILE bool_exp

    BEGINLOOP  shift, and go to state 62

    loop  go to state 63


State 35

   20 statement: RETURN . expression

    L_PAREN  shift, and go to state 64
    NUMBER   shift, and go to state 27
    IDENT    shift, and go to state 49
    SUB      shift, and go to state 50

    expression                 go to state 65
    multiplicative_expression  go to state 57
    term                       go to state 58
    var                        go to state 59
    number                     go to state 60


State 36

   19 statement: CONTINUE .

    $default  reduce using rule 19 (statement)


State 37

   18 statement: WRITE . vars

    IDENT  shift, and go to state 39

    vars  go to state 66
    var   go to state 45


State 38

   16 statement: FOREACH . IDENT IN IDENT loop

    IDENT  shift, and go to state 67


State 39

   56 var: IDENT .
   57    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 68

    $default  reduce using rule 56 (var)


State 40

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements . END_BODY

    END_BODY  shift, and go to state 69


State 41

    9 statements: statement . SEMICOLON statements

    SEMICOLON  shift, and go to state 70


State 42

   11 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 71


State 43

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 72


State 44

   17 statement: READ vars .

    $default  reduce using rule 17 (statement)


State 45

   54 vars: var .
   55     | var . COMMA vars

    COMMA  shift, and go to state 73

    $default  reduce using rule 54 (vars)


State 46

   29 relation_exp: TRUE .

    $default  reduce using rule 29 (relation_exp)


State 47

   30 relation_exp: FALSE .

    $default  reduce using rule 30 (relation_exp)


State 48

   31 relation_exp: L_PAREN . bool_exp R_PAREN
   49 term: L_PAREN . expression R_PAREN

    TRUE     shift, and go to state 46
    FALSE    shift, and go to state 47
    L_PAREN  shift, and go to state 48
    NUMBER   shift, and go to state 27
    IDENT    shift, and go to state 49
    SUB      shift, and go to state 50
    NOT      shift, and go to state 51

    bool_exp                   go to state 74
    relation_and_exp           go to state 54
    relation_exp               go to state 55
    expression                 go to state 75
    multiplicative_expression  go to state 57
    term                       go to state 58
    var                        go to state 59
    number                     go to state 60


State 49

   51 term: IDENT . L_PAREN expressions R_PAREN
   56 var: IDENT .
   57    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_PAREN           shift, and go to state 76
    L_SQUARE_BRACKET  shift, and go to state 68

    $default  reduce using rule 56 (var)


State 50

   45 term: SUB . number
   48     | SUB . var
   50     | SUB . L_PAREN expression R_PAREN

    L_PAREN  shift, and go to state 77
    NUMBER   shift, and go to state 27
    IDENT    shift, and go to state 39

    var     go to state 78
    number  go to state 79


State 51

   27 relation_exp: NOT . relation_exp

    TRUE     shift, and go to state 46
    FALSE    shift, and go to state 47
    L_PAREN  shift, and go to state 48
    NUMBER   shift, and go to state 27
    IDENT    shift, and go to state 49
    SUB      shift, and go to state 50
    NOT      shift, and go to state 51

    relation_exp               go to state 80
    expression                 go to state 56
    multiplicative_expression  go to state 57
    term                       go to state 58
    var                        go to state 59
    number                     go to state 60


State 52

   12 statement: IF ifCond . ENDIF
   13          | IF ifCond . ELSE statements ENDIF

    ENDIF  shift, and go to state 81
    ELSE   shift, and go to state 82


State 53

   21 ifCond: bool_exp . THEN statements

    THEN  shift, and go to state 83


State 54

   23 bool_exp: relation_and_exp .
   24         | relation_and_exp . OR relation_and_exp

    OR  shift, and go to state 84

    $default  reduce using rule 23 (bool_exp)


State 55

   25 relation_and_exp: relation_exp .
   26                 | relation_exp . AND relation_and_exp

    AND  shift, and go to state 85

    $default  reduce using rule 25 (relation_and_exp)


State 56

   28 relation_exp: expression . comp expression
   39 expression: expression . ADD multiplicative_expression
   40           | expression . SUB multiplicative_expression

    ADD  shift, and go to state 86
    SUB  shift, and go to state 87
    LT   shift, and go to state 88
    LTE  shift, and go to state 89
    GT   shift, and go to state 90
    GTE  shift, and go to state 91
    EQ   shift, and go to state 92
    NEQ  shift, and go to state 93

    comp  go to state 94


State 57

   38 expression: multiplicative_expression .
   42 multiplicative_expression: multiplicative_expression . MULT term
   43                          | multiplicative_expression . DIV term
   44                          | multiplicative_expression . MOD term

    MULT  shift, and go to state 95
    DIV   shift, and go to state 96
    MOD   shift, and go to state 97

    $default  reduce using rule 38 (expression)


State 58

   41 multiplicative_expression: term .

    $default  reduce using rule 41 (multiplicative_expression)


State 59

   47 term: var .

    $default  reduce using rule 47 (term)


State 60

   46 term: number .

    $default  reduce using rule 46 (term)


State 61

   14 statement: WHILE bool_exp . loop

    BEGINLOOP  shift, and go to state 62

    loop  go to state 98


State 62

   22 loop: BEGINLOOP . statements ENDLOOP

    READ      shift, and go to state 31
    IF        shift, and go to state 32
    WHILE     shift, and go to state 33
    DO        shift, and go to state 34
    RETURN    shift, and go to state 35
    CONTINUE  shift, and go to state 36
    WRITE     shift, and go to state 37
    FOREACH   shift, and go to state 38
    IDENT     shift, and go to state 39

    $default  reduce using rule 10 (statements)

    statements  go to state 99
    statement   go to state 41
    var         go to state 42


State 63

   15 statement: DO loop . WHILE bool_exp

    WHILE  shift, and go to state 100


State 64

   49 term: L_PAREN . expression R_PAREN

    L_PAREN  shift, and go to state 64
    NUMBER   shift, and go to state 27
    IDENT    shift, and go to state 49
    SUB      shift, and go to state 50

    expression                 go to state 101
    multiplicative_expression  go to state 57
    term                       go to state 58
    var                        go to state 59
    number                     go to state 60


State 65

   20 statement: RETURN expression .
   39 expression: expression . ADD multiplicative_expression
   40           | expression . SUB multiplicative_expression

    ADD  shift, and go to state 86
    SUB  shift, and go to state 87

    $default  reduce using rule 20 (statement)


State 66

   18 statement: WRITE vars .

    $default  reduce using rule 18 (statement)


State 67

   16 statement: FOREACH IDENT . IN IDENT loop

    IN  shift, and go to state 102


State 68

   57 var: IDENT L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    L_PAREN  shift, and go to state 64
    NUMBER   shift, and go to state 27
    IDENT    shift, and go to state 49
    SUB      shift, and go to state 50

    expression                 go to state 103
    multiplicative_expression  go to state 57
    term                       go to state 58
    var                        go to state 59
    number                     go to state 60


State 69

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY .

    $default  reduce using rule 4 (function)


State 70

    9 statements: statement SEMICOLON . statements

    READ      shift, and go to state 31
    IF        shift, and go to state 32
    WHILE     shift, and go to state 33
    DO        shift, and go to state 34
    RETURN    shift, and go to state 35
    CONTINUE  shift, and go to state 36
    WRITE     shift, and go to state 37
    FOREACH   shift, and go to state 38
    IDENT     shift, and go to state 39

    $default  reduce using rule 10 (statements)

    statements  go to state 104
    statement   go to state 41
    var         go to state 42


State 71

   11 statement: var ASSIGN . expression

    L_PAREN  shift, and go to state 64
    NUMBER   shift, and go to state 27
    IDENT    shift, and go to state 49
    SUB      shift, and go to state 50

    expression                 go to state 105
    multiplicative_expression  go to state 57
    term                       go to state 58
    var                        go to state 59
    number                     go to state 60


State 72

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 8 (declaration)


State 73

   55 vars: var COMMA . vars

    IDENT  shift, and go to state 39

    vars  go to state 106
    var   go to state 45


State 74

   31 relation_exp: L_PAREN bool_exp . R_PAREN

    R_PAREN  shift, and go to state 107


State 75

   28 relation_exp: expression . comp expression
   39 expression: expression . ADD multiplicative_expression
   40           | expression . SUB multiplicative_expression
   49 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 108
    ADD      shift, and go to state 86
    SUB      shift, and go to state 87
    LT       shift, and go to state 88
    LTE      shift, and go to state 89
    GT       shift, and go to state 90
    GTE      shift, and go to state 91
    EQ       shift, and go to state 92
    NEQ      shift, and go to state 93

    comp  go to state 94


State 76

   51 term: IDENT L_PAREN . expressions R_PAREN

    L_PAREN  shift, and go to state 64
    NUMBER   shift, and go to state 27
    IDENT    shift, and go to state 49
    SUB      shift, and go to state 50

    expression                 go to state 109
    multiplicative_expression  go to state 57
    term                       go to state 58
    expressions                go to state 110
    var                        go to state 59
    number                     go to state 60


State 77

   50 term: SUB L_PAREN . expression R_PAREN

    L_PAREN  shift, and go to state 64
    NUMBER   shift, and go to state 27
    IDENT    shift, and go to state 49
    SUB      shift, and go to state 50

    expression                 go to state 111
    multiplicative_expression  go to state 57
    term                       go to state 58
    var                        go to state 59
    number                     go to state 60


State 78

   48 term: SUB var .

    $default  reduce using rule 48 (term)


State 79

   45 term: SUB number .

    $default  reduce using rule 45 (term)


State 80

   27 relation_exp: NOT relation_exp .

    $default  reduce using rule 27 (relation_exp)


State 81

   12 statement: IF ifCond ENDIF .

    $default  reduce using rule 12 (statement)


State 82

   13 statement: IF ifCond ELSE . statements ENDIF

    READ      shift, and go to state 31
    IF        shift, and go to state 32
    WHILE     shift, and go to state 33
    DO        shift, and go to state 34
    RETURN    shift, and go to state 35
    CONTINUE  shift, and go to state 36
    WRITE     shift, and go to state 37
    FOREACH   shift, and go to state 38
    IDENT     shift, and go to state 39

    $default  reduce using rule 10 (statements)

    statements  go to state 112
    statement   go to state 41
    var         go to state 42


State 83

   21 ifCond: bool_exp THEN . statements

    READ      shift, and go to state 31
    IF        shift, and go to state 32
    WHILE     shift, and go to state 33
    DO        shift, and go to state 34
    RETURN    shift, and go to state 35
    CONTINUE  shift, and go to state 36
    WRITE     shift, and go to state 37
    FOREACH   shift, and go to state 38
    IDENT     shift, and go to state 39

    $default  reduce using rule 10 (statements)

    statements  go to state 113
    statement   go to state 41
    var         go to state 42


State 84

   24 bool_exp: relation_and_exp OR . relation_and_exp

    TRUE     shift, and go to state 46
    FALSE    shift, and go to state 47
    L_PAREN  shift, and go to state 48
    NUMBER   shift, and go to state 27
    IDENT    shift, and go to state 49
    SUB      shift, and go to state 50
    NOT      shift, and go to state 51

    relation_and_exp           go to state 114
    relation_exp               go to state 55
    expression                 go to state 56
    multiplicative_expression  go to state 57
    term                       go to state 58
    var                        go to state 59
    number                     go to state 60


State 85

   26 relation_and_exp: relation_exp AND . relation_and_exp

    TRUE     shift, and go to state 46
    FALSE    shift, and go to state 47
    L_PAREN  shift, and go to state 48
    NUMBER   shift, and go to state 27
    IDENT    shift, and go to state 49
    SUB      shift, and go to state 50
    NOT      shift, and go to state 51

    relation_and_exp           go to state 115
    relation_exp               go to state 55
    expression                 go to state 56
    multiplicative_expression  go to state 57
    term                       go to state 58
    var                        go to state 59
    number                     go to state 60


State 86

   39 expression: expression ADD . multiplicative_expression

    L_PAREN  shift, and go to state 64
    NUMBER   shift, and go to state 27
    IDENT    shift, and go to state 49
    SUB      shift, and go to state 50

    multiplicative_expression  go to state 116
    term                       go to state 58
    var                        go to state 59
    number                     go to state 60


State 87

   40 expression: expression SUB . multiplicative_expression

    L_PAREN  shift, and go to state 64
    NUMBER   shift, and go to state 27
    IDENT    shift, and go to state 49
    SUB      shift, and go to state 50

    multiplicative_expression  go to state 117
    term                       go to state 58
    var                        go to state 59
    number                     go to state 60


State 88

   34 comp: LT .

    $default  reduce using rule 34 (comp)


State 89

   36 comp: LTE .

    $default  reduce using rule 36 (comp)


State 90

   35 comp: GT .

    $default  reduce using rule 35 (comp)


State 91

   37 comp: GTE .

    $default  reduce using rule 37 (comp)


State 92

   32 comp: EQ .

    $default  reduce using rule 32 (comp)


State 93

   33 comp: NEQ .

    $default  reduce using rule 33 (comp)


State 94

   28 relation_exp: expression comp . expression

    L_PAREN  shift, and go to state 64
    NUMBER   shift, and go to state 27
    IDENT    shift, and go to state 49
    SUB      shift, and go to state 50

    expression                 go to state 118
    multiplicative_expression  go to state 57
    term                       go to state 58
    var                        go to state 59
    number                     go to state 60


State 95

   42 multiplicative_expression: multiplicative_expression MULT . term

    L_PAREN  shift, and go to state 64
    NUMBER   shift, and go to state 27
    IDENT    shift, and go to state 49
    SUB      shift, and go to state 50

    term    go to state 119
    var     go to state 59
    number  go to state 60


State 96

   43 multiplicative_expression: multiplicative_expression DIV . term

    L_PAREN  shift, and go to state 64
    NUMBER   shift, and go to state 27
    IDENT    shift, and go to state 49
    SUB      shift, and go to state 50

    term    go to state 120
    var     go to state 59
    number  go to state 60


State 97

   44 multiplicative_expression: multiplicative_expression MOD . term

    L_PAREN  shift, and go to state 64
    NUMBER   shift, and go to state 27
    IDENT    shift, and go to state 49
    SUB      shift, and go to state 50

    term    go to state 121
    var     go to state 59
    number  go to state 60


State 98

   14 statement: WHILE bool_exp loop .

    $default  reduce using rule 14 (statement)


State 99

   22 loop: BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 122


State 100

   15 statement: DO loop WHILE . bool_exp

    TRUE     shift, and go to state 46
    FALSE    shift, and go to state 47
    L_PAREN  shift, and go to state 48
    NUMBER   shift, and go to state 27
    IDENT    shift, and go to state 49
    SUB      shift, and go to state 50
    NOT      shift, and go to state 51

    bool_exp                   go to state 123
    relation_and_exp           go to state 54
    relation_exp               go to state 55
    expression                 go to state 56
    multiplicative_expression  go to state 57
    term                       go to state 58
    var                        go to state 59
    number                     go to state 60


State 101

   39 expression: expression . ADD multiplicative_expression
   40           | expression . SUB multiplicative_expression
   49 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 108
    ADD      shift, and go to state 86
    SUB      shift, and go to state 87


State 102

   16 statement: FOREACH IDENT IN . IDENT loop

    IDENT  shift, and go to state 124


State 103

   39 expression: expression . ADD multiplicative_expression
   40           | expression . SUB multiplicative_expression
   57 var: IDENT L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 125
    ADD               shift, and go to state 86
    SUB               shift, and go to state 87


State 104

    9 statements: statement SEMICOLON statements .

    $default  reduce using rule 9 (statements)


State 105

   11 statement: var ASSIGN expression .
   39 expression: expression . ADD multiplicative_expression
   40           | expression . SUB multiplicative_expression

    ADD  shift, and go to state 86
    SUB  shift, and go to state 87

    $default  reduce using rule 11 (statement)


State 106

   55 vars: var COMMA vars .

    $default  reduce using rule 55 (vars)


State 107

   31 relation_exp: L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 31 (relation_exp)


State 108

   49 term: L_PAREN expression R_PAREN .

    $default  reduce using rule 49 (term)


State 109

   39 expression: expression . ADD multiplicative_expression
   40           | expression . SUB multiplicative_expression
   52 expressions: expression .
   53            | expression . COMMA expressions

    COMMA  shift, and go to state 126
    ADD    shift, and go to state 86
    SUB    shift, and go to state 87

    $default  reduce using rule 52 (expressions)


State 110

   51 term: IDENT L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 127


State 111

   39 expression: expression . ADD multiplicative_expression
   40           | expression . SUB multiplicative_expression
   50 term: SUB L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 128
    ADD      shift, and go to state 86
    SUB      shift, and go to state 87


State 112

   13 statement: IF ifCond ELSE statements . ENDIF

    ENDIF  shift, and go to state 129


State 113

   21 ifCond: bool_exp THEN statements .

    $default  reduce using rule 21 (ifCond)


State 114

   24 bool_exp: relation_and_exp OR relation_and_exp .

    $default  reduce using rule 24 (bool_exp)


State 115

   26 relation_and_exp: relation_exp AND relation_and_exp .

    $default  reduce using rule 26 (relation_and_exp)


State 116

   39 expression: expression ADD multiplicative_expression .
   42 multiplicative_expression: multiplicative_expression . MULT term
   43                          | multiplicative_expression . DIV term
   44                          | multiplicative_expression . MOD term

    MULT  shift, and go to state 95
    DIV   shift, and go to state 96
    MOD   shift, and go to state 97

    $default  reduce using rule 39 (expression)


State 117

   40 expression: expression SUB multiplicative_expression .
   42 multiplicative_expression: multiplicative_expression . MULT term
   43                          | multiplicative_expression . DIV term
   44                          | multiplicative_expression . MOD term

    MULT  shift, and go to state 95
    DIV   shift, and go to state 96
    MOD   shift, and go to state 97

    $default  reduce using rule 40 (expression)


State 118

   28 relation_exp: expression comp expression .
   39 expression: expression . ADD multiplicative_expression
   40           | expression . SUB multiplicative_expression

    ADD  shift, and go to state 86
    SUB  shift, and go to state 87

    $default  reduce using rule 28 (relation_exp)


State 119

   42 multiplicative_expression: multiplicative_expression MULT term .

    $default  reduce using rule 42 (multiplicative_expression)


State 120

   43 multiplicative_expression: multiplicative_expression DIV term .

    $default  reduce using rule 43 (multiplicative_expression)


State 121

   44 multiplicative_expression: multiplicative_expression MOD term .

    $default  reduce using rule 44 (multiplicative_expression)


State 122

   22 loop: BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 22 (loop)


State 123

   15 statement: DO loop WHILE bool_exp .

    $default  reduce using rule 15 (statement)


State 124

   16 statement: FOREACH IDENT IN IDENT . loop

    BEGINLOOP  shift, and go to state 62

    loop  go to state 130


State 125

   57 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 57 (var)


State 126

   53 expressions: expression COMMA . expressions

    L_PAREN  shift, and go to state 64
    NUMBER   shift, and go to state 27
    IDENT    shift, and go to state 49
    SUB      shift, and go to state 50

    expression                 go to state 109
    multiplicative_expression  go to state 57
    term                       go to state 58
    expressions                go to state 131
    var                        go to state 59
    number                     go to state 60


State 127

   51 term: IDENT L_PAREN expressions R_PAREN .

    $default  reduce using rule 51 (term)


State 128

   50 term: SUB L_PAREN expression R_PAREN .

    $default  reduce using rule 50 (term)


State 129

   13 statement: IF ifCond ELSE statements ENDIF .

    $default  reduce using rule 13 (statement)


State 130

   16 statement: FOREACH IDENT IN IDENT loop .

    $default  reduce using rule 16 (statement)


State 131

   53 expressions: expression COMMA expressions .

    $default  reduce using rule 53 (expressions)
