Terminals unused in grammar

   NEQ
   LT


Grammar

    0 $accept: prog_start $end

    1 prog_start: functions

    2 functions: function functions
    3          | %empty

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    5 declarations: declaration SEMICOLON declarations
    6             | %empty

    7 declaration: identifiers COLON INTEGER
    8            | identifiers COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER

    9 statements: statement SEMICOLON statements
   10           | %empty

   11 statement: var ASSIGN expression
   12          | IF bool_exp THEN statements ENDIF
   13          | IF bool_exp THEN statements ELSE statements ENDIF
   14          | WHILE bool_exp loop
   15          | DO loop WHILE bool_exp
   16          | FOREACH ident IN ident loop
   17          | READ vars
   18          | WRITE vars
   19          | CONTINUE
   20          | RETURN expression

   21 loop: BEGINLOOP statements ENDLOOP

   22 bool_exp: relation_and_exp
   23         | relation_and_exp OR relation_and_exp

   24 relation_and_exp: relation_exp
   25                 | relation_exp AND relation_and_exp

   26 relation_exp: NOT relation_exp
   27             | expression comp expression
   28             | TRUE
   29             | FALSE
   30             | L_PAREN bool_exp R_PAREN

   31 comp: EQ
   32     | GT
   33     | LTE
   34     | GTE

   35 expression: multiplicative_expression
   36           | multiplicative_expression ADD expression
   37           | multiplicative_expression SUB expression

   38 multiplicative_expression: term
   39                          | term MULT term
   40                          | term DIV term
   41                          | term MOD term

   42 term: SUB number
   43     | number
   44     | var
   45     | SUB var
   46     | L_PAREN expression R_PAREN
   47     | SUB L_PAREN expression R_PAREN
   48     | ident L_PAREN expressions R_PAREN

   49 expressions: expression
   50            | expression expressionsList

   51 expressionsList: COMMA expressions

   52 vars: var
   53     | var varsList

   54 varsList: COMMA vars

   55 var: ident
   56    | ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET

   57 identifiers: ident
   58            | ident identList

   59 identList: COMMA identifiers

   60 ident: IDENT

   61 number: NUMBER


Terminals, with rules where they appear

$end (0) 0
error (256)
FUNCTION (258) 4
INTEGER (259) 7 8
OF (260) 8
ARRAY (261) 8
READ (262) 17
IF (263) 12 13
THEN (264) 12 13
ENDIF (265) 12 13
ELSE (266) 13
WHILE (267) 14 15
DO (268) 15
BEGIN_PARAMS (269) 4
BEGIN_LOCALS (270) 4
BEGIN_BODY (271) 4
IN (272) 16
BEGINLOOP (273) 21
ENDLOOP (274) 21
END_PARAMS (275) 4
END_LOCALS (276) 4
END_BODY (277) 4
CONTINUE (278) 19
WRITE (279) 18
TRUE (280) 28
FOREACH (281) 16
FALSE (282) 29
RETURN (283) 20
NUMBER (284) 61
ADD (285) 36
MULT (286) 39
DIV (287) 40
MOD (288) 41
AND (289) 25
OR (290) 23
SEMICOLON (291) 4 5 9
COLON (292) 7 8
COMMA (293) 51 54 59
L_PAREN (294) 30 46 47 48
R_PAREN (295) 30 46 47 48
L_SQUARE_BRACKET (296) 8 56
R_SQUARE_BRACKET (297) 8 56
EQ (298) 31
NEQ (299)
LT (300)
GT (301) 32
LTE (302) 33
GTE (303) 34
SUB (304) 37 42 45 47
NOT (305) 26
UMINUS (306)
ASSIGN (307) 11
IDENT (308) 60


Nonterminals, with rules where they appear

$accept (54)
    on left: 0
prog_start (55)
    on left: 1, on right: 0
functions (56)
    on left: 2 3, on right: 1 2
function (57)
    on left: 4, on right: 2
declarations (58)
    on left: 5 6, on right: 4 5
declaration (59)
    on left: 7 8, on right: 5
statements (60)
    on left: 9 10, on right: 4 9 12 13 21
statement (61)
    on left: 11 12 13 14 15 16 17 18 19 20, on right: 9
loop (62)
    on left: 21, on right: 14 15 16
bool_exp (63)
    on left: 22 23, on right: 12 13 14 15 30
relation_and_exp (64)
    on left: 24 25, on right: 22 23 25
relation_exp (65)
    on left: 26 27 28 29 30, on right: 24 25 26
comp (66)
    on left: 31 32 33 34, on right: 27
expression (67)
    on left: 35 36 37, on right: 11 20 27 36 37 46 47 49 50 56
multiplicative_expression (68)
    on left: 38 39 40 41, on right: 35 36 37
term (69)
    on left: 42 43 44 45 46 47 48, on right: 38 39 40 41
expressions (70)
    on left: 49 50, on right: 48 51
expressionsList (71)
    on left: 51, on right: 50
vars (72)
    on left: 52 53, on right: 17 18 54
varsList (73)
    on left: 54, on right: 53
var (74)
    on left: 55 56, on right: 11 44 45 52 53
identifiers (75)
    on left: 57 58, on right: 7 8 59
identList (76)
    on left: 59, on right: 58
ident (77)
    on left: 60, on right: 4 16 48 55 56 57 58
number (78)
    on left: 61, on right: 8 42 43


State 0

    0 $accept: . prog_start $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 3 (functions)

    prog_start  go to state 2
    functions   go to state 3
    function    go to state 4


State 1

    4 function: FUNCTION . ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 5

    ident  go to state 6


State 2

    0 $accept: prog_start . $end

    $end  shift, and go to state 7


State 3

    1 prog_start: functions .

    $default  reduce using rule 1 (prog_start)


State 4

    2 functions: function . functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 3 (functions)

    functions  go to state 8
    function   go to state 4


State 5

   60 ident: IDENT .

    $default  reduce using rule 60 (ident)


State 6

    4 function: FUNCTION ident . SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    SEMICOLON  shift, and go to state 9


State 7

    0 $accept: prog_start $end .

    $default  accept


State 8

    2 functions: function functions .

    $default  reduce using rule 2 (functions)


State 9

    4 function: FUNCTION ident SEMICOLON . BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_PARAMS  shift, and go to state 10


State 10

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS . declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 5

    $default  reduce using rule 6 (declarations)

    declarations  go to state 11
    declaration   go to state 12
    identifiers   go to state 13
    ident         go to state 14


State 11

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations . END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    END_PARAMS  shift, and go to state 15


State 12

    5 declarations: declaration . SEMICOLON declarations

    SEMICOLON  shift, and go to state 16


State 13

    7 declaration: identifiers . COLON INTEGER
    8            | identifiers . COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER

    COLON  shift, and go to state 17


State 14

   57 identifiers: ident .
   58            | ident . identList

    COMMA  shift, and go to state 18

    $default  reduce using rule 57 (identifiers)

    identList  go to state 19


State 15

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS . BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 20


State 16

    5 declarations: declaration SEMICOLON . declarations

    IDENT  shift, and go to state 5

    $default  reduce using rule 6 (declarations)

    declarations  go to state 21
    declaration   go to state 12
    identifiers   go to state 13
    ident         go to state 14


State 17

    7 declaration: identifiers COLON . INTEGER
    8            | identifiers COLON . ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 22
    ARRAY    shift, and go to state 23


State 18

   59 identList: COMMA . identifiers

    IDENT  shift, and go to state 5

    identifiers  go to state 24
    ident        go to state 14


State 19

   58 identifiers: ident identList .

    $default  reduce using rule 58 (identifiers)


State 20

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS . declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 5

    $default  reduce using rule 6 (declarations)

    declarations  go to state 25
    declaration   go to state 12
    identifiers   go to state 13
    ident         go to state 14


State 21

    5 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 5 (declarations)


State 22

    7 declaration: identifiers COLON INTEGER .

    $default  reduce using rule 7 (declaration)


State 23

    8 declaration: identifiers COLON ARRAY . L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 26


State 24

   59 identList: COMMA identifiers .

    $default  reduce using rule 59 (identList)


State 25

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations . END_LOCALS BEGIN_BODY statements END_BODY

    END_LOCALS  shift, and go to state 27


State 26

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET . number R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 28

    number  go to state 29


State 27

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 30


State 28

   61 number: NUMBER .

    $default  reduce using rule 61 (number)


State 29

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET number . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 31


State 30

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY . statements END_BODY

    READ      shift, and go to state 32
    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    WRITE     shift, and go to state 37
    FOREACH   shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 5

    $default  reduce using rule 10 (statements)

    statements  go to state 40
    statement   go to state 41
    var         go to state 42
    ident       go to state 43


State 31

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 44


State 32

   17 statement: READ . vars

    IDENT  shift, and go to state 5

    vars   go to state 45
    var    go to state 46
    ident  go to state 43


State 33

   12 statement: IF . bool_exp THEN statements ENDIF
   13          | IF . bool_exp THEN statements ELSE statements ENDIF

    TRUE     shift, and go to state 47
    FALSE    shift, and go to state 48
    NUMBER   shift, and go to state 28
    L_PAREN  shift, and go to state 49
    SUB      shift, and go to state 50
    NOT      shift, and go to state 51
    IDENT    shift, and go to state 5

    bool_exp                   go to state 52
    relation_and_exp           go to state 53
    relation_exp               go to state 54
    expression                 go to state 55
    multiplicative_expression  go to state 56
    term                       go to state 57
    var                        go to state 58
    ident                      go to state 59
    number                     go to state 60


State 34

   14 statement: WHILE . bool_exp loop

    TRUE     shift, and go to state 47
    FALSE    shift, and go to state 48
    NUMBER   shift, and go to state 28
    L_PAREN  shift, and go to state 49
    SUB      shift, and go to state 50
    NOT      shift, and go to state 51
    IDENT    shift, and go to state 5

    bool_exp                   go to state 61
    relation_and_exp           go to state 53
    relation_exp               go to state 54
    expression                 go to state 55
    multiplicative_expression  go to state 56
    term                       go to state 57
    var                        go to state 58
    ident                      go to state 59
    number                     go to state 60


State 35

   15 statement: DO . loop WHILE bool_exp

    BEGINLOOP  shift, and go to state 62

    loop  go to state 63


State 36

   19 statement: CONTINUE .

    $default  reduce using rule 19 (statement)


State 37

   18 statement: WRITE . vars

    IDENT  shift, and go to state 5

    vars   go to state 64
    var    go to state 46
    ident  go to state 43


State 38

   16 statement: FOREACH . ident IN ident loop

    IDENT  shift, and go to state 5

    ident  go to state 65


State 39

   20 statement: RETURN . expression

    NUMBER   shift, and go to state 28
    L_PAREN  shift, and go to state 66
    SUB      shift, and go to state 50
    IDENT    shift, and go to state 5

    expression                 go to state 67
    multiplicative_expression  go to state 56
    term                       go to state 57
    var                        go to state 58
    ident                      go to state 59
    number                     go to state 60


State 40

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements . END_BODY

    END_BODY  shift, and go to state 68


State 41

    9 statements: statement . SEMICOLON statements

    SEMICOLON  shift, and go to state 69


State 42

   11 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 70


State 43

   55 var: ident .
   56    | ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 71

    $default  reduce using rule 55 (var)


State 44

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 72


State 45

   17 statement: READ vars .

    $default  reduce using rule 17 (statement)


State 46

   52 vars: var .
   53     | var . varsList

    COMMA  shift, and go to state 73

    $default  reduce using rule 52 (vars)

    varsList  go to state 74


State 47

   28 relation_exp: TRUE .

    $default  reduce using rule 28 (relation_exp)


State 48

   29 relation_exp: FALSE .

    $default  reduce using rule 29 (relation_exp)


State 49

   30 relation_exp: L_PAREN . bool_exp R_PAREN
   46 term: L_PAREN . expression R_PAREN

    TRUE     shift, and go to state 47
    FALSE    shift, and go to state 48
    NUMBER   shift, and go to state 28
    L_PAREN  shift, and go to state 49
    SUB      shift, and go to state 50
    NOT      shift, and go to state 51
    IDENT    shift, and go to state 5

    bool_exp                   go to state 75
    relation_and_exp           go to state 53
    relation_exp               go to state 54
    expression                 go to state 76
    multiplicative_expression  go to state 56
    term                       go to state 57
    var                        go to state 58
    ident                      go to state 59
    number                     go to state 60


State 50

   42 term: SUB . number
   45     | SUB . var
   47     | SUB . L_PAREN expression R_PAREN

    NUMBER   shift, and go to state 28
    L_PAREN  shift, and go to state 77
    IDENT    shift, and go to state 5

    var     go to state 78
    ident   go to state 43
    number  go to state 79


State 51

   26 relation_exp: NOT . relation_exp

    TRUE     shift, and go to state 47
    FALSE    shift, and go to state 48
    NUMBER   shift, and go to state 28
    L_PAREN  shift, and go to state 49
    SUB      shift, and go to state 50
    NOT      shift, and go to state 51
    IDENT    shift, and go to state 5

    relation_exp               go to state 80
    expression                 go to state 55
    multiplicative_expression  go to state 56
    term                       go to state 57
    var                        go to state 58
    ident                      go to state 59
    number                     go to state 60


State 52

   12 statement: IF bool_exp . THEN statements ENDIF
   13          | IF bool_exp . THEN statements ELSE statements ENDIF

    THEN  shift, and go to state 81


State 53

   22 bool_exp: relation_and_exp .
   23         | relation_and_exp . OR relation_and_exp

    OR  shift, and go to state 82

    $default  reduce using rule 22 (bool_exp)


State 54

   24 relation_and_exp: relation_exp .
   25                 | relation_exp . AND relation_and_exp

    AND  shift, and go to state 83

    $default  reduce using rule 24 (relation_and_exp)


State 55

   27 relation_exp: expression . comp expression

    EQ   shift, and go to state 84
    GT   shift, and go to state 85
    LTE  shift, and go to state 86
    GTE  shift, and go to state 87

    comp  go to state 88


State 56

   35 expression: multiplicative_expression .
   36           | multiplicative_expression . ADD expression
   37           | multiplicative_expression . SUB expression

    ADD  shift, and go to state 89
    SUB  shift, and go to state 90

    $default  reduce using rule 35 (expression)


State 57

   38 multiplicative_expression: term .
   39                          | term . MULT term
   40                          | term . DIV term
   41                          | term . MOD term

    MULT  shift, and go to state 91
    DIV   shift, and go to state 92
    MOD   shift, and go to state 93

    $default  reduce using rule 38 (multiplicative_expression)


State 58

   44 term: var .

    $default  reduce using rule 44 (term)


State 59

   48 term: ident . L_PAREN expressions R_PAREN
   55 var: ident .
   56    | ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_PAREN           shift, and go to state 94
    L_SQUARE_BRACKET  shift, and go to state 71

    $default  reduce using rule 55 (var)


State 60

   43 term: number .

    $default  reduce using rule 43 (term)


State 61

   14 statement: WHILE bool_exp . loop

    BEGINLOOP  shift, and go to state 62

    loop  go to state 95


State 62

   21 loop: BEGINLOOP . statements ENDLOOP

    READ      shift, and go to state 32
    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    WRITE     shift, and go to state 37
    FOREACH   shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 5

    $default  reduce using rule 10 (statements)

    statements  go to state 96
    statement   go to state 41
    var         go to state 42
    ident       go to state 43


State 63

   15 statement: DO loop . WHILE bool_exp

    WHILE  shift, and go to state 97


State 64

   18 statement: WRITE vars .

    $default  reduce using rule 18 (statement)


State 65

   16 statement: FOREACH ident . IN ident loop

    IN  shift, and go to state 98


State 66

   46 term: L_PAREN . expression R_PAREN

    NUMBER   shift, and go to state 28
    L_PAREN  shift, and go to state 66
    SUB      shift, and go to state 50
    IDENT    shift, and go to state 5

    expression                 go to state 99
    multiplicative_expression  go to state 56
    term                       go to state 57
    var                        go to state 58
    ident                      go to state 59
    number                     go to state 60


State 67

   20 statement: RETURN expression .

    $default  reduce using rule 20 (statement)


State 68

    4 function: FUNCTION ident SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY .

    $default  reduce using rule 4 (function)


State 69

    9 statements: statement SEMICOLON . statements

    READ      shift, and go to state 32
    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    WRITE     shift, and go to state 37
    FOREACH   shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 5

    $default  reduce using rule 10 (statements)

    statements  go to state 100
    statement   go to state 41
    var         go to state 42
    ident       go to state 43


State 70

   11 statement: var ASSIGN . expression

    NUMBER   shift, and go to state 28
    L_PAREN  shift, and go to state 66
    SUB      shift, and go to state 50
    IDENT    shift, and go to state 5

    expression                 go to state 101
    multiplicative_expression  go to state 56
    term                       go to state 57
    var                        go to state 58
    ident                      go to state 59
    number                     go to state 60


State 71

   56 var: ident L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    NUMBER   shift, and go to state 28
    L_PAREN  shift, and go to state 66
    SUB      shift, and go to state 50
    IDENT    shift, and go to state 5

    expression                 go to state 102
    multiplicative_expression  go to state 56
    term                       go to state 57
    var                        go to state 58
    ident                      go to state 59
    number                     go to state 60


State 72

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 8 (declaration)


State 73

   54 varsList: COMMA . vars

    IDENT  shift, and go to state 5

    vars   go to state 103
    var    go to state 46
    ident  go to state 43


State 74

   53 vars: var varsList .

    $default  reduce using rule 53 (vars)


State 75

   30 relation_exp: L_PAREN bool_exp . R_PAREN

    R_PAREN  shift, and go to state 104


State 76

   27 relation_exp: expression . comp expression
   46 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 105
    EQ       shift, and go to state 84
    GT       shift, and go to state 85
    LTE      shift, and go to state 86
    GTE      shift, and go to state 87

    comp  go to state 88


State 77

   47 term: SUB L_PAREN . expression R_PAREN

    NUMBER   shift, and go to state 28
    L_PAREN  shift, and go to state 66
    SUB      shift, and go to state 50
    IDENT    shift, and go to state 5

    expression                 go to state 106
    multiplicative_expression  go to state 56
    term                       go to state 57
    var                        go to state 58
    ident                      go to state 59
    number                     go to state 60


State 78

   45 term: SUB var .

    $default  reduce using rule 45 (term)


State 79

   42 term: SUB number .

    $default  reduce using rule 42 (term)


State 80

   26 relation_exp: NOT relation_exp .

    $default  reduce using rule 26 (relation_exp)


State 81

   12 statement: IF bool_exp THEN . statements ENDIF
   13          | IF bool_exp THEN . statements ELSE statements ENDIF

    READ      shift, and go to state 32
    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    WRITE     shift, and go to state 37
    FOREACH   shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 5

    $default  reduce using rule 10 (statements)

    statements  go to state 107
    statement   go to state 41
    var         go to state 42
    ident       go to state 43


State 82

   23 bool_exp: relation_and_exp OR . relation_and_exp

    TRUE     shift, and go to state 47
    FALSE    shift, and go to state 48
    NUMBER   shift, and go to state 28
    L_PAREN  shift, and go to state 49
    SUB      shift, and go to state 50
    NOT      shift, and go to state 51
    IDENT    shift, and go to state 5

    relation_and_exp           go to state 108
    relation_exp               go to state 54
    expression                 go to state 55
    multiplicative_expression  go to state 56
    term                       go to state 57
    var                        go to state 58
    ident                      go to state 59
    number                     go to state 60


State 83

   25 relation_and_exp: relation_exp AND . relation_and_exp

    TRUE     shift, and go to state 47
    FALSE    shift, and go to state 48
    NUMBER   shift, and go to state 28
    L_PAREN  shift, and go to state 49
    SUB      shift, and go to state 50
    NOT      shift, and go to state 51
    IDENT    shift, and go to state 5

    relation_and_exp           go to state 109
    relation_exp               go to state 54
    expression                 go to state 55
    multiplicative_expression  go to state 56
    term                       go to state 57
    var                        go to state 58
    ident                      go to state 59
    number                     go to state 60


State 84

   31 comp: EQ .

    $default  reduce using rule 31 (comp)


State 85

   32 comp: GT .

    $default  reduce using rule 32 (comp)


State 86

   33 comp: LTE .

    $default  reduce using rule 33 (comp)


State 87

   34 comp: GTE .

    $default  reduce using rule 34 (comp)


State 88

   27 relation_exp: expression comp . expression

    NUMBER   shift, and go to state 28
    L_PAREN  shift, and go to state 66
    SUB      shift, and go to state 50
    IDENT    shift, and go to state 5

    expression                 go to state 110
    multiplicative_expression  go to state 56
    term                       go to state 57
    var                        go to state 58
    ident                      go to state 59
    number                     go to state 60


State 89

   36 expression: multiplicative_expression ADD . expression

    NUMBER   shift, and go to state 28
    L_PAREN  shift, and go to state 66
    SUB      shift, and go to state 50
    IDENT    shift, and go to state 5

    expression                 go to state 111
    multiplicative_expression  go to state 56
    term                       go to state 57
    var                        go to state 58
    ident                      go to state 59
    number                     go to state 60


State 90

   37 expression: multiplicative_expression SUB . expression

    NUMBER   shift, and go to state 28
    L_PAREN  shift, and go to state 66
    SUB      shift, and go to state 50
    IDENT    shift, and go to state 5

    expression                 go to state 112
    multiplicative_expression  go to state 56
    term                       go to state 57
    var                        go to state 58
    ident                      go to state 59
    number                     go to state 60


State 91

   39 multiplicative_expression: term MULT . term

    NUMBER   shift, and go to state 28
    L_PAREN  shift, and go to state 66
    SUB      shift, and go to state 50
    IDENT    shift, and go to state 5

    term    go to state 113
    var     go to state 58
    ident   go to state 59
    number  go to state 60


State 92

   40 multiplicative_expression: term DIV . term

    NUMBER   shift, and go to state 28
    L_PAREN  shift, and go to state 66
    SUB      shift, and go to state 50
    IDENT    shift, and go to state 5

    term    go to state 114
    var     go to state 58
    ident   go to state 59
    number  go to state 60


State 93

   41 multiplicative_expression: term MOD . term

    NUMBER   shift, and go to state 28
    L_PAREN  shift, and go to state 66
    SUB      shift, and go to state 50
    IDENT    shift, and go to state 5

    term    go to state 115
    var     go to state 58
    ident   go to state 59
    number  go to state 60


State 94

   48 term: ident L_PAREN . expressions R_PAREN

    NUMBER   shift, and go to state 28
    L_PAREN  shift, and go to state 66
    SUB      shift, and go to state 50
    IDENT    shift, and go to state 5

    expression                 go to state 116
    multiplicative_expression  go to state 56
    term                       go to state 57
    expressions                go to state 117
    var                        go to state 58
    ident                      go to state 59
    number                     go to state 60


State 95

   14 statement: WHILE bool_exp loop .

    $default  reduce using rule 14 (statement)


State 96

   21 loop: BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 118


State 97

   15 statement: DO loop WHILE . bool_exp

    TRUE     shift, and go to state 47
    FALSE    shift, and go to state 48
    NUMBER   shift, and go to state 28
    L_PAREN  shift, and go to state 49
    SUB      shift, and go to state 50
    NOT      shift, and go to state 51
    IDENT    shift, and go to state 5

    bool_exp                   go to state 119
    relation_and_exp           go to state 53
    relation_exp               go to state 54
    expression                 go to state 55
    multiplicative_expression  go to state 56
    term                       go to state 57
    var                        go to state 58
    ident                      go to state 59
    number                     go to state 60


State 98

   16 statement: FOREACH ident IN . ident loop

    IDENT  shift, and go to state 5

    ident  go to state 120


State 99

   46 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 105


State 100

    9 statements: statement SEMICOLON statements .

    $default  reduce using rule 9 (statements)


State 101

   11 statement: var ASSIGN expression .

    $default  reduce using rule 11 (statement)


State 102

   56 var: ident L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 121


State 103

   54 varsList: COMMA vars .

    $default  reduce using rule 54 (varsList)


State 104

   30 relation_exp: L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 30 (relation_exp)


State 105

   46 term: L_PAREN expression R_PAREN .

    $default  reduce using rule 46 (term)


State 106

   47 term: SUB L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 122


State 107

   12 statement: IF bool_exp THEN statements . ENDIF
   13          | IF bool_exp THEN statements . ELSE statements ENDIF

    ENDIF  shift, and go to state 123
    ELSE   shift, and go to state 124


State 108

   23 bool_exp: relation_and_exp OR relation_and_exp .

    $default  reduce using rule 23 (bool_exp)


State 109

   25 relation_and_exp: relation_exp AND relation_and_exp .

    $default  reduce using rule 25 (relation_and_exp)


State 110

   27 relation_exp: expression comp expression .

    $default  reduce using rule 27 (relation_exp)


State 111

   36 expression: multiplicative_expression ADD expression .

    $default  reduce using rule 36 (expression)


State 112

   37 expression: multiplicative_expression SUB expression .

    $default  reduce using rule 37 (expression)


State 113

   39 multiplicative_expression: term MULT term .

    $default  reduce using rule 39 (multiplicative_expression)


State 114

   40 multiplicative_expression: term DIV term .

    $default  reduce using rule 40 (multiplicative_expression)


State 115

   41 multiplicative_expression: term MOD term .

    $default  reduce using rule 41 (multiplicative_expression)


State 116

   49 expressions: expression .
   50            | expression . expressionsList

    COMMA  shift, and go to state 125

    $default  reduce using rule 49 (expressions)

    expressionsList  go to state 126


State 117

   48 term: ident L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 127


State 118

   21 loop: BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 21 (loop)


State 119

   15 statement: DO loop WHILE bool_exp .

    $default  reduce using rule 15 (statement)


State 120

   16 statement: FOREACH ident IN ident . loop

    BEGINLOOP  shift, and go to state 62

    loop  go to state 128


State 121

   56 var: ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 56 (var)


State 122

   47 term: SUB L_PAREN expression R_PAREN .

    $default  reduce using rule 47 (term)


State 123

   12 statement: IF bool_exp THEN statements ENDIF .

    $default  reduce using rule 12 (statement)


State 124

   13 statement: IF bool_exp THEN statements ELSE . statements ENDIF

    READ      shift, and go to state 32
    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    WRITE     shift, and go to state 37
    FOREACH   shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 5

    $default  reduce using rule 10 (statements)

    statements  go to state 129
    statement   go to state 41
    var         go to state 42
    ident       go to state 43


State 125

   51 expressionsList: COMMA . expressions

    NUMBER   shift, and go to state 28
    L_PAREN  shift, and go to state 66
    SUB      shift, and go to state 50
    IDENT    shift, and go to state 5

    expression                 go to state 116
    multiplicative_expression  go to state 56
    term                       go to state 57
    expressions                go to state 130
    var                        go to state 58
    ident                      go to state 59
    number                     go to state 60


State 126

   50 expressions: expression expressionsList .

    $default  reduce using rule 50 (expressions)


State 127

   48 term: ident L_PAREN expressions R_PAREN .

    $default  reduce using rule 48 (term)


State 128

   16 statement: FOREACH ident IN ident loop .

    $default  reduce using rule 16 (statement)


State 129

   13 statement: IF bool_exp THEN statements ELSE statements . ENDIF

    ENDIF  shift, and go to state 131


State 130

   51 expressionsList: COMMA expressions .

    $default  reduce using rule 51 (expressionsList)


State 131

   13 statement: IF bool_exp THEN statements ELSE statements ENDIF .

    $default  reduce using rule 13 (statement)
