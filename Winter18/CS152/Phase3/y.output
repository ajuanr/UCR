Terminals unused in grammar

   FUNCTCALL


Grammar

    0 $accept: prog_start $end

    1 prog_start: functions

    2 functions: function functions
    3          | %empty

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    5 declarations: declaration SEMICOLON declarations
    6             | %empty

    7 declaration: identifiers COLON INTEGER
    8            | identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    9 statements: statement SEMICOLON statements
   10           | %empty

   11 statement: var ASSIGN expression
   12          | IF bool_exp THEN statements ENDIF
   13          | IF bool_exp THEN statements ELSE statements ENDIF
   14          | WHILE bool_exp BEGINLOOP statements ENDLOOP
   15          | DO BEGINLOOP statements ENDLOOP WHILE bool_exp
   16          | FOREACH IDENT IN IDENT BEGINLOOP statements ENDLOOP
   17          | READ vars
   18          | WRITE vars
   19          | CONTINUE
   20          | RETURN expression

   21 bool_exp: relation_and_exp
   22         | relation_and_exp OR relation_and_exp

   23 relation_and_exp: relation_exp
   24                 | relation_exp AND relation_and_exp

   25 relation_exp: NOT relation_exp
   26             | expression comp expression
   27             | TRUE
   28             | FALSE
   29             | L_PAREN bool_exp R_PAREN

   30 comp: EQ
   31     | NEQ
   32     | LT
   33     | GT
   34     | LTE
   35     | GTE

   36 expression: multiplicative_expression
   37           | multiplicative_expression ADD expression
   38           | multiplicative_expression SUB expression

   39 multiplicative_expression: term
   40                          | term MULT term
   41                          | term DIV term
   42                          | term MOD term

   43 term: SUB NUMBER
   44     | var
   45     | SUB var
   46     | L_PAREN expression R_PAREN
   47     | SUB L_PAREN expression R_PAREN
   48     | IDENT L_PAREN expressions R_PAREN

   49 expressions: expression
   50            | expression COMMA expressions

   51 vars: var
   52     | var COMMA vars

   53 var: IDENT
   54    | IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET

   55 identifiers: IDENT
   56            | IDENT COMMA identifiers


Terminals, with rules where they appear

$end (0) 0
error (256)
FUNCTION (258) 4
IDENT (259) 4 16 48 53 54 55 56
INTEGER (260) 7 8
OF (261) 8
ARRAY (262) 8
READ (263) 17
IF (264) 12 13
THEN (265) 12 13
ENDIF (266) 12 13
ELSE (267) 13
WHILE (268) 14 15
DO (269) 15
BEGIN_PARAMS (270) 4
BEGIN_LOCALS (271) 4
BEGIN_BODY (272) 4
IN (273) 16
BEGINLOOP (274) 14 15 16
ENDLOOP (275) 14 15 16
END_PARAMS (276) 4
END_LOCALS (277) 4
END_BODY (278) 4
CONTINUE (279) 19
WRITE (280) 18
TRUE (281) 27
FOREACH (282) 16
FALSE (283) 28
RETURN (284) 20
L_SQUARE_BRACKET (285) 8 54
R_SQUARE_BRACKET (286) 8 54
L_PAREN (287) 29 46 47 48
R_PAREN (288) 29 46 47 48
NUMBER (289) 8 43
SEMICOLON (290) 4 5 9
COLON (291) 7 8
COMMA (292) 50 52 56
ASSIGN (293) 11
OR (294) 22
AND (295) 24
NOT (296) 25
EQ (297) 30
NEQ (298) 31
LT (299) 32
GT (300) 33
LTE (301) 34
GTE (302) 35
ADD (303) 37
SUB (304) 38 43 45 47
MULT (305) 40
DIV (306) 41
MOD (307) 42
NEG (308)
FUNCTCALL (309)


Nonterminals, with rules where they appear

$accept (55)
    on left: 0
prog_start (56)
    on left: 1, on right: 0
functions (57)
    on left: 2 3, on right: 1 2
function (58)
    on left: 4, on right: 2
declarations (59)
    on left: 5 6, on right: 4 5
declaration (60)
    on left: 7 8, on right: 5
statements (61)
    on left: 9 10, on right: 4 9 12 13 14 15 16
statement (62)
    on left: 11 12 13 14 15 16 17 18 19 20, on right: 9
bool_exp (63)
    on left: 21 22, on right: 12 13 14 15 29
relation_and_exp (64)
    on left: 23 24, on right: 21 22 24
relation_exp (65)
    on left: 25 26 27 28 29, on right: 23 24 25
comp (66)
    on left: 30 31 32 33 34 35, on right: 26
expression (67)
    on left: 36 37 38, on right: 11 20 26 37 38 46 47 49 50 54
multiplicative_expression (68)
    on left: 39 40 41 42, on right: 36 37 38
term (69)
    on left: 43 44 45 46 47 48, on right: 39 40 41 42
expressions (70)
    on left: 49 50, on right: 48 50
vars (71)
    on left: 51 52, on right: 17 18 52
var (72)
    on left: 53 54, on right: 11 44 45 51 52
identifiers (73)
    on left: 55 56, on right: 7 8 56


State 0

    0 $accept: . prog_start $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 3 (functions)

    prog_start  go to state 2
    functions   go to state 3
    function    go to state 4


State 1

    4 function: FUNCTION . IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 5


State 2

    0 $accept: prog_start . $end

    $end  shift, and go to state 6


State 3

    1 prog_start: functions .

    $default  reduce using rule 1 (prog_start)


State 4

    2 functions: function . functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 3 (functions)

    functions  go to state 7
    function   go to state 4


State 5

    4 function: FUNCTION IDENT . SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    SEMICOLON  shift, and go to state 8


State 6

    0 $accept: prog_start $end .

    $default  accept


State 7

    2 functions: function functions .

    $default  reduce using rule 2 (functions)


State 8

    4 function: FUNCTION IDENT SEMICOLON . BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_PARAMS  shift, and go to state 9


State 9

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS . declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 10

    $default  reduce using rule 6 (declarations)

    declarations  go to state 11
    declaration   go to state 12
    identifiers   go to state 13


State 10

   55 identifiers: IDENT .
   56            | IDENT . COMMA identifiers

    COMMA  shift, and go to state 14

    $default  reduce using rule 55 (identifiers)


State 11

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations . END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    END_PARAMS  shift, and go to state 15


State 12

    5 declarations: declaration . SEMICOLON declarations

    SEMICOLON  shift, and go to state 16


State 13

    7 declaration: identifiers . COLON INTEGER
    8            | identifiers . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    COLON  shift, and go to state 17


State 14

   56 identifiers: IDENT COMMA . identifiers

    IDENT  shift, and go to state 10

    identifiers  go to state 18


State 15

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS . BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 19


State 16

    5 declarations: declaration SEMICOLON . declarations

    IDENT  shift, and go to state 10

    $default  reduce using rule 6 (declarations)

    declarations  go to state 20
    declaration   go to state 12
    identifiers   go to state 13


State 17

    7 declaration: identifiers COLON . INTEGER
    8            | identifiers COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 21
    ARRAY    shift, and go to state 22


State 18

   56 identifiers: IDENT COMMA identifiers .

    $default  reduce using rule 56 (identifiers)


State 19

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS . declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 10

    $default  reduce using rule 6 (declarations)

    declarations  go to state 23
    declaration   go to state 12
    identifiers   go to state 13


State 20

    5 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 5 (declarations)


State 21

    7 declaration: identifiers COLON INTEGER .

    $default  reduce using rule 7 (declaration)


State 22

    8 declaration: identifiers COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 24


State 23

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations . END_LOCALS BEGIN_BODY statements END_BODY

    END_LOCALS  shift, and go to state 25


State 24

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 26


State 25

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 27


State 26

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 28


State 27

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY . statements END_BODY

    IDENT     shift, and go to state 29
    READ      shift, and go to state 30
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    WRITE     shift, and go to state 35
    FOREACH   shift, and go to state 36
    RETURN    shift, and go to state 37

    $default  reduce using rule 10 (statements)

    statements  go to state 38
    statement   go to state 39
    var         go to state 40


State 28

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 41


State 29

   53 var: IDENT .
   54    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 42

    $default  reduce using rule 53 (var)


State 30

   17 statement: READ . vars

    IDENT  shift, and go to state 29

    vars  go to state 43
    var   go to state 44


State 31

   12 statement: IF . bool_exp THEN statements ENDIF
   13          | IF . bool_exp THEN statements ELSE statements ENDIF

    IDENT    shift, and go to state 45
    TRUE     shift, and go to state 46
    FALSE    shift, and go to state 47
    L_PAREN  shift, and go to state 48
    NOT      shift, and go to state 49
    SUB      shift, and go to state 50

    bool_exp                   go to state 51
    relation_and_exp           go to state 52
    relation_exp               go to state 53
    expression                 go to state 54
    multiplicative_expression  go to state 55
    term                       go to state 56
    var                        go to state 57


State 32

   14 statement: WHILE . bool_exp BEGINLOOP statements ENDLOOP

    IDENT    shift, and go to state 45
    TRUE     shift, and go to state 46
    FALSE    shift, and go to state 47
    L_PAREN  shift, and go to state 48
    NOT      shift, and go to state 49
    SUB      shift, and go to state 50

    bool_exp                   go to state 58
    relation_and_exp           go to state 52
    relation_exp               go to state 53
    expression                 go to state 54
    multiplicative_expression  go to state 55
    term                       go to state 56
    var                        go to state 57


State 33

   15 statement: DO . BEGINLOOP statements ENDLOOP WHILE bool_exp

    BEGINLOOP  shift, and go to state 59


State 34

   19 statement: CONTINUE .

    $default  reduce using rule 19 (statement)


State 35

   18 statement: WRITE . vars

    IDENT  shift, and go to state 29

    vars  go to state 60
    var   go to state 44


State 36

   16 statement: FOREACH . IDENT IN IDENT BEGINLOOP statements ENDLOOP

    IDENT  shift, and go to state 61


State 37

   20 statement: RETURN . expression

    IDENT    shift, and go to state 45
    L_PAREN  shift, and go to state 62
    SUB      shift, and go to state 50

    expression                 go to state 63
    multiplicative_expression  go to state 55
    term                       go to state 56
    var                        go to state 57


State 38

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements . END_BODY

    END_BODY  shift, and go to state 64


State 39

    9 statements: statement . SEMICOLON statements

    SEMICOLON  shift, and go to state 65


State 40

   11 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 66


State 41

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 67


State 42

   54 var: IDENT L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    IDENT    shift, and go to state 45
    L_PAREN  shift, and go to state 62
    SUB      shift, and go to state 50

    expression                 go to state 68
    multiplicative_expression  go to state 55
    term                       go to state 56
    var                        go to state 57


State 43

   17 statement: READ vars .

    $default  reduce using rule 17 (statement)


State 44

   51 vars: var .
   52     | var . COMMA vars

    COMMA  shift, and go to state 69

    $default  reduce using rule 51 (vars)


State 45

   48 term: IDENT . L_PAREN expressions R_PAREN
   53 var: IDENT .
   54    | IDENT . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 42
    L_PAREN           shift, and go to state 70

    $default  reduce using rule 53 (var)


State 46

   27 relation_exp: TRUE .

    $default  reduce using rule 27 (relation_exp)


State 47

   28 relation_exp: FALSE .

    $default  reduce using rule 28 (relation_exp)


State 48

   29 relation_exp: L_PAREN . bool_exp R_PAREN
   46 term: L_PAREN . expression R_PAREN

    IDENT    shift, and go to state 45
    TRUE     shift, and go to state 46
    FALSE    shift, and go to state 47
    L_PAREN  shift, and go to state 48
    NOT      shift, and go to state 49
    SUB      shift, and go to state 50

    bool_exp                   go to state 71
    relation_and_exp           go to state 52
    relation_exp               go to state 53
    expression                 go to state 72
    multiplicative_expression  go to state 55
    term                       go to state 56
    var                        go to state 57


State 49

   25 relation_exp: NOT . relation_exp

    IDENT    shift, and go to state 45
    TRUE     shift, and go to state 46
    FALSE    shift, and go to state 47
    L_PAREN  shift, and go to state 48
    NOT      shift, and go to state 49
    SUB      shift, and go to state 50

    relation_exp               go to state 73
    expression                 go to state 54
    multiplicative_expression  go to state 55
    term                       go to state 56
    var                        go to state 57


State 50

   43 term: SUB . NUMBER
   45     | SUB . var
   47     | SUB . L_PAREN expression R_PAREN

    IDENT    shift, and go to state 29
    L_PAREN  shift, and go to state 74
    NUMBER   shift, and go to state 75

    var  go to state 76


State 51

   12 statement: IF bool_exp . THEN statements ENDIF
   13          | IF bool_exp . THEN statements ELSE statements ENDIF

    THEN  shift, and go to state 77


State 52

   21 bool_exp: relation_and_exp .
   22         | relation_and_exp . OR relation_and_exp

    OR  shift, and go to state 78

    $default  reduce using rule 21 (bool_exp)


State 53

   23 relation_and_exp: relation_exp .
   24                 | relation_exp . AND relation_and_exp

    AND  shift, and go to state 79

    $default  reduce using rule 23 (relation_and_exp)


State 54

   26 relation_exp: expression . comp expression

    EQ   shift, and go to state 80
    NEQ  shift, and go to state 81
    LT   shift, and go to state 82
    GT   shift, and go to state 83
    LTE  shift, and go to state 84
    GTE  shift, and go to state 85

    comp  go to state 86


State 55

   36 expression: multiplicative_expression .
   37           | multiplicative_expression . ADD expression
   38           | multiplicative_expression . SUB expression

    ADD  shift, and go to state 87
    SUB  shift, and go to state 88

    $default  reduce using rule 36 (expression)


State 56

   39 multiplicative_expression: term .
   40                          | term . MULT term
   41                          | term . DIV term
   42                          | term . MOD term

    MULT  shift, and go to state 89
    DIV   shift, and go to state 90
    MOD   shift, and go to state 91

    $default  reduce using rule 39 (multiplicative_expression)


State 57

   44 term: var .

    $default  reduce using rule 44 (term)


State 58

   14 statement: WHILE bool_exp . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 92


State 59

   15 statement: DO BEGINLOOP . statements ENDLOOP WHILE bool_exp

    IDENT     shift, and go to state 29
    READ      shift, and go to state 30
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    WRITE     shift, and go to state 35
    FOREACH   shift, and go to state 36
    RETURN    shift, and go to state 37

    $default  reduce using rule 10 (statements)

    statements  go to state 93
    statement   go to state 39
    var         go to state 40


State 60

   18 statement: WRITE vars .

    $default  reduce using rule 18 (statement)


State 61

   16 statement: FOREACH IDENT . IN IDENT BEGINLOOP statements ENDLOOP

    IN  shift, and go to state 94


State 62

   46 term: L_PAREN . expression R_PAREN

    IDENT    shift, and go to state 45
    L_PAREN  shift, and go to state 62
    SUB      shift, and go to state 50

    expression                 go to state 95
    multiplicative_expression  go to state 55
    term                       go to state 56
    var                        go to state 57


State 63

   20 statement: RETURN expression .

    $default  reduce using rule 20 (statement)


State 64

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY .

    $default  reduce using rule 4 (function)


State 65

    9 statements: statement SEMICOLON . statements

    IDENT     shift, and go to state 29
    READ      shift, and go to state 30
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    WRITE     shift, and go to state 35
    FOREACH   shift, and go to state 36
    RETURN    shift, and go to state 37

    $default  reduce using rule 10 (statements)

    statements  go to state 96
    statement   go to state 39
    var         go to state 40


State 66

   11 statement: var ASSIGN . expression

    IDENT    shift, and go to state 45
    L_PAREN  shift, and go to state 62
    SUB      shift, and go to state 50

    expression                 go to state 97
    multiplicative_expression  go to state 55
    term                       go to state 56
    var                        go to state 57


State 67

    8 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 8 (declaration)


State 68

   54 var: IDENT L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 98


State 69

   52 vars: var COMMA . vars

    IDENT  shift, and go to state 29

    vars  go to state 99
    var   go to state 44


State 70

   48 term: IDENT L_PAREN . expressions R_PAREN

    IDENT    shift, and go to state 45
    L_PAREN  shift, and go to state 62
    SUB      shift, and go to state 50

    expression                 go to state 100
    multiplicative_expression  go to state 55
    term                       go to state 56
    expressions                go to state 101
    var                        go to state 57


State 71

   29 relation_exp: L_PAREN bool_exp . R_PAREN

    R_PAREN  shift, and go to state 102


State 72

   26 relation_exp: expression . comp expression
   46 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 103
    EQ       shift, and go to state 80
    NEQ      shift, and go to state 81
    LT       shift, and go to state 82
    GT       shift, and go to state 83
    LTE      shift, and go to state 84
    GTE      shift, and go to state 85

    comp  go to state 86


State 73

   25 relation_exp: NOT relation_exp .

    $default  reduce using rule 25 (relation_exp)


State 74

   47 term: SUB L_PAREN . expression R_PAREN

    IDENT    shift, and go to state 45
    L_PAREN  shift, and go to state 62
    SUB      shift, and go to state 50

    expression                 go to state 104
    multiplicative_expression  go to state 55
    term                       go to state 56
    var                        go to state 57


State 75

   43 term: SUB NUMBER .

    $default  reduce using rule 43 (term)


State 76

   45 term: SUB var .

    $default  reduce using rule 45 (term)


State 77

   12 statement: IF bool_exp THEN . statements ENDIF
   13          | IF bool_exp THEN . statements ELSE statements ENDIF

    IDENT     shift, and go to state 29
    READ      shift, and go to state 30
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    WRITE     shift, and go to state 35
    FOREACH   shift, and go to state 36
    RETURN    shift, and go to state 37

    $default  reduce using rule 10 (statements)

    statements  go to state 105
    statement   go to state 39
    var         go to state 40


State 78

   22 bool_exp: relation_and_exp OR . relation_and_exp

    IDENT    shift, and go to state 45
    TRUE     shift, and go to state 46
    FALSE    shift, and go to state 47
    L_PAREN  shift, and go to state 48
    NOT      shift, and go to state 49
    SUB      shift, and go to state 50

    relation_and_exp           go to state 106
    relation_exp               go to state 53
    expression                 go to state 54
    multiplicative_expression  go to state 55
    term                       go to state 56
    var                        go to state 57


State 79

   24 relation_and_exp: relation_exp AND . relation_and_exp

    IDENT    shift, and go to state 45
    TRUE     shift, and go to state 46
    FALSE    shift, and go to state 47
    L_PAREN  shift, and go to state 48
    NOT      shift, and go to state 49
    SUB      shift, and go to state 50

    relation_and_exp           go to state 107
    relation_exp               go to state 53
    expression                 go to state 54
    multiplicative_expression  go to state 55
    term                       go to state 56
    var                        go to state 57


State 80

   30 comp: EQ .

    $default  reduce using rule 30 (comp)


State 81

   31 comp: NEQ .

    $default  reduce using rule 31 (comp)


State 82

   32 comp: LT .

    $default  reduce using rule 32 (comp)


State 83

   33 comp: GT .

    $default  reduce using rule 33 (comp)


State 84

   34 comp: LTE .

    $default  reduce using rule 34 (comp)


State 85

   35 comp: GTE .

    $default  reduce using rule 35 (comp)


State 86

   26 relation_exp: expression comp . expression

    IDENT    shift, and go to state 45
    L_PAREN  shift, and go to state 62
    SUB      shift, and go to state 50

    expression                 go to state 108
    multiplicative_expression  go to state 55
    term                       go to state 56
    var                        go to state 57


State 87

   37 expression: multiplicative_expression ADD . expression

    IDENT    shift, and go to state 45
    L_PAREN  shift, and go to state 62
    SUB      shift, and go to state 50

    expression                 go to state 109
    multiplicative_expression  go to state 55
    term                       go to state 56
    var                        go to state 57


State 88

   38 expression: multiplicative_expression SUB . expression

    IDENT    shift, and go to state 45
    L_PAREN  shift, and go to state 62
    SUB      shift, and go to state 50

    expression                 go to state 110
    multiplicative_expression  go to state 55
    term                       go to state 56
    var                        go to state 57


State 89

   40 multiplicative_expression: term MULT . term

    IDENT    shift, and go to state 45
    L_PAREN  shift, and go to state 62
    SUB      shift, and go to state 50

    term  go to state 111
    var   go to state 57


State 90

   41 multiplicative_expression: term DIV . term

    IDENT    shift, and go to state 45
    L_PAREN  shift, and go to state 62
    SUB      shift, and go to state 50

    term  go to state 112
    var   go to state 57


State 91

   42 multiplicative_expression: term MOD . term

    IDENT    shift, and go to state 45
    L_PAREN  shift, and go to state 62
    SUB      shift, and go to state 50

    term  go to state 113
    var   go to state 57


State 92

   14 statement: WHILE bool_exp BEGINLOOP . statements ENDLOOP

    IDENT     shift, and go to state 29
    READ      shift, and go to state 30
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    WRITE     shift, and go to state 35
    FOREACH   shift, and go to state 36
    RETURN    shift, and go to state 37

    $default  reduce using rule 10 (statements)

    statements  go to state 114
    statement   go to state 39
    var         go to state 40


State 93

   15 statement: DO BEGINLOOP statements . ENDLOOP WHILE bool_exp

    ENDLOOP  shift, and go to state 115


State 94

   16 statement: FOREACH IDENT IN . IDENT BEGINLOOP statements ENDLOOP

    IDENT  shift, and go to state 116


State 95

   46 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 103


State 96

    9 statements: statement SEMICOLON statements .

    $default  reduce using rule 9 (statements)


State 97

   11 statement: var ASSIGN expression .

    $default  reduce using rule 11 (statement)


State 98

   54 var: IDENT L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 54 (var)


State 99

   52 vars: var COMMA vars .

    $default  reduce using rule 52 (vars)


State 100

   49 expressions: expression .
   50            | expression . COMMA expressions

    COMMA  shift, and go to state 117

    $default  reduce using rule 49 (expressions)


State 101

   48 term: IDENT L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 118


State 102

   29 relation_exp: L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 29 (relation_exp)


State 103

   46 term: L_PAREN expression R_PAREN .

    $default  reduce using rule 46 (term)


State 104

   47 term: SUB L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 119


State 105

   12 statement: IF bool_exp THEN statements . ENDIF
   13          | IF bool_exp THEN statements . ELSE statements ENDIF

    ENDIF  shift, and go to state 120
    ELSE   shift, and go to state 121


State 106

   22 bool_exp: relation_and_exp OR relation_and_exp .

    $default  reduce using rule 22 (bool_exp)


State 107

   24 relation_and_exp: relation_exp AND relation_and_exp .

    $default  reduce using rule 24 (relation_and_exp)


State 108

   26 relation_exp: expression comp expression .

    $default  reduce using rule 26 (relation_exp)


State 109

   37 expression: multiplicative_expression ADD expression .

    $default  reduce using rule 37 (expression)


State 110

   38 expression: multiplicative_expression SUB expression .

    $default  reduce using rule 38 (expression)


State 111

   40 multiplicative_expression: term MULT term .

    $default  reduce using rule 40 (multiplicative_expression)


State 112

   41 multiplicative_expression: term DIV term .

    $default  reduce using rule 41 (multiplicative_expression)


State 113

   42 multiplicative_expression: term MOD term .

    $default  reduce using rule 42 (multiplicative_expression)


State 114

   14 statement: WHILE bool_exp BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 122


State 115

   15 statement: DO BEGINLOOP statements ENDLOOP . WHILE bool_exp

    WHILE  shift, and go to state 123


State 116

   16 statement: FOREACH IDENT IN IDENT . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 124


State 117

   50 expressions: expression COMMA . expressions

    IDENT    shift, and go to state 45
    L_PAREN  shift, and go to state 62
    SUB      shift, and go to state 50

    expression                 go to state 100
    multiplicative_expression  go to state 55
    term                       go to state 56
    expressions                go to state 125
    var                        go to state 57


State 118

   48 term: IDENT L_PAREN expressions R_PAREN .

    $default  reduce using rule 48 (term)


State 119

   47 term: SUB L_PAREN expression R_PAREN .

    $default  reduce using rule 47 (term)


State 120

   12 statement: IF bool_exp THEN statements ENDIF .

    $default  reduce using rule 12 (statement)


State 121

   13 statement: IF bool_exp THEN statements ELSE . statements ENDIF

    IDENT     shift, and go to state 29
    READ      shift, and go to state 30
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    WRITE     shift, and go to state 35
    FOREACH   shift, and go to state 36
    RETURN    shift, and go to state 37

    $default  reduce using rule 10 (statements)

    statements  go to state 126
    statement   go to state 39
    var         go to state 40


State 122

   14 statement: WHILE bool_exp BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 14 (statement)


State 123

   15 statement: DO BEGINLOOP statements ENDLOOP WHILE . bool_exp

    IDENT    shift, and go to state 45
    TRUE     shift, and go to state 46
    FALSE    shift, and go to state 47
    L_PAREN  shift, and go to state 48
    NOT      shift, and go to state 49
    SUB      shift, and go to state 50

    bool_exp                   go to state 127
    relation_and_exp           go to state 52
    relation_exp               go to state 53
    expression                 go to state 54
    multiplicative_expression  go to state 55
    term                       go to state 56
    var                        go to state 57


State 124

   16 statement: FOREACH IDENT IN IDENT BEGINLOOP . statements ENDLOOP

    IDENT     shift, and go to state 29
    READ      shift, and go to state 30
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    WRITE     shift, and go to state 35
    FOREACH   shift, and go to state 36
    RETURN    shift, and go to state 37

    $default  reduce using rule 10 (statements)

    statements  go to state 128
    statement   go to state 39
    var         go to state 40


State 125

   50 expressions: expression COMMA expressions .

    $default  reduce using rule 50 (expressions)


State 126

   13 statement: IF bool_exp THEN statements ELSE statements . ENDIF

    ENDIF  shift, and go to state 129


State 127

   15 statement: DO BEGINLOOP statements ENDLOOP WHILE bool_exp .

    $default  reduce using rule 15 (statement)


State 128

   16 statement: FOREACH IDENT IN IDENT BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 130


State 129

   13 statement: IF bool_exp THEN statements ELSE statements ENDIF .

    $default  reduce using rule 13 (statement)


State 130

   16 statement: FOREACH IDENT IN IDENT BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 16 (statement)
