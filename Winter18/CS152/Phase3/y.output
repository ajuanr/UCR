Grammar

    0 $accept: prog_start $end

    1 prog_start: functions

    2 functions: function functions
    3          | %empty

    4 function: funcName SEMICOLON M1 BEGIN_PARAMS declarations END_PARAMS M2 BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    5 funcName: FUNCTION IDENT

    6 M1: %empty

    7 M2: %empty

    8 declarations: declaration SEMICOLON declarations
    9             | %empty

   10 declaration: identifiers COLON INTEGER
   11            | identifiers COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER

   12 statements: statement SEMICOLON statements
   13           | %empty

   14 statement: var ASSIGN expression
   15          | ifCond statements endif
   16          | ifCond statements else statements endif
   17          | M9 while BEGINLOOP statements ENDLOOP
   18          | do BEGINLOOP statements ENDLOOP M8 WHILE bool_exp
   19          | foreach IN ident M5 BEGINLOOP statements ENDLOOP
   20          | READ vars
   21          | WRITE vars
   22          | CONTINUE
   23          | RETURN expression

   24 foreach: FOREACH ident

   25 M9: %empty

   26 while: WHILE bool_exp

   27 ifCond: IF bool_exp THEN

   28 else: ELSE

   29 endif: ENDIF

   30 M5: %empty

   31 do: DO

   32 M8: %empty

   33 bool_exp: relation_and_exp
   34         | relation_and_exp OR relation_and_exp

   35 relation_and_exp: relation_exp
   36                 | relation_exp AND relation_and_exp

   37 relation_exp: NOT relation_exp
   38             | expression comp expression
   39             | TRUE
   40             | FALSE
   41             | L_PAREN bool_exp R_PAREN

   42 comp: EQ
   43     | NEQ
   44     | LT
   45     | GT
   46     | LTE
   47     | GTE

   48 expression: multiplicative_expression
   49           | expression ADD multiplicative_expression
   50           | expression SUB multiplicative_expression

   51 multiplicative_expression: term
   52                          | multiplicative_expression MULT term
   53                          | multiplicative_expression DIV term
   54                          | multiplicative_expression MOD term

   55 term: terms
   56     | SUB terms
   57     | IDENT parenExpression

   58 terms: number
   59      | var
   60      | L_PAREN expression R_PAREN

   61 parenExpression: L_PAREN expressions R_PAREN

   62 expressions: expression
   63            | expression COMMA expressions

   64 vars: var
   65     | var COMMA vars

   66 var: ident
   67    | ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET

   68 identifiers: ident
   69            | ident COMMA identifiers

   70 ident: IDENT

   71 number: NUMBER


Terminals, with rules where they appear

$end (0) 0
error (256)
FUNCTION (258) 5
INTEGER (259) 10 11
OF (260) 11
ARRAY (261) 11
READ (262) 20
IF (263) 27
THEN (264) 27
ENDIF (265) 29
ELSE (266) 28
WHILE (267) 18 26
DO (268) 31
BEGIN_PARAMS (269) 4
BEGIN_LOCALS (270) 4
BEGIN_BODY (271) 4
IN (272) 19
BEGINLOOP (273) 17 18 19
ENDLOOP (274) 17 18 19
RETURN (275) 23
END_PARAMS (276) 4
END_LOCALS (277) 4
END_BODY (278) 4
CONTINUE (279) 22
WRITE (280) 21
TRUE (281) 39
FALSE (282) 40
FOREACH (283) 24
SEMICOLON (284) 4 8 12
COLON (285) 10 11
COMMA (286) 63 65 69
L_PAREN (287) 41 60 61
R_PAREN (288) 41 60 61
L_SQUARE_BRACKET (289) 11 67
R_SQUARE_BRACKET (290) 11 67
NUMBER (291) 71
IDENT (292) 5 57 70
UMINUS (293)
MULT (294) 52
DIV (295) 53
MOD (296) 54
ADD (297) 49
SUB (298) 50 56
LT (299) 44
LTE (300) 46
GT (301) 45
GTE (302) 47
EQ (303) 42
NEQ (304) 43
NOT (305) 37
AND (306) 36
OR (307) 34
ASSIGN (308) 14


Nonterminals, with rules where they appear

$accept (54)
    on left: 0
prog_start (55)
    on left: 1, on right: 0
functions (56)
    on left: 2 3, on right: 1 2
function (57)
    on left: 4, on right: 2
funcName (58)
    on left: 5, on right: 4
M1 (59)
    on left: 6, on right: 4
M2 (60)
    on left: 7, on right: 4
declarations (61)
    on left: 8 9, on right: 4 8
declaration (62)
    on left: 10 11, on right: 8
statements (63)
    on left: 12 13, on right: 4 12 15 16 17 18 19
statement (64)
    on left: 14 15 16 17 18 19 20 21 22 23, on right: 12
foreach (65)
    on left: 24, on right: 19
M9 (66)
    on left: 25, on right: 17
while (67)
    on left: 26, on right: 17
ifCond (68)
    on left: 27, on right: 15 16
else (69)
    on left: 28, on right: 16
endif (70)
    on left: 29, on right: 15 16
M5 (71)
    on left: 30, on right: 19
do (72)
    on left: 31, on right: 18
M8 (73)
    on left: 32, on right: 18
bool_exp (74)
    on left: 33 34, on right: 18 26 27 41
relation_and_exp (75)
    on left: 35 36, on right: 33 34 36
relation_exp (76)
    on left: 37 38 39 40 41, on right: 35 36 37
comp (77)
    on left: 42 43 44 45 46 47, on right: 38
expression (78)
    on left: 48 49 50, on right: 14 23 38 49 50 60 62 63 67
multiplicative_expression (79)
    on left: 51 52 53 54, on right: 48 49 50 52 53 54
term (80)
    on left: 55 56 57, on right: 51 52 53 54
terms (81)
    on left: 58 59 60, on right: 55 56
parenExpression (82)
    on left: 61, on right: 57
expressions (83)
    on left: 62 63, on right: 61 63
vars (84)
    on left: 64 65, on right: 20 21 65
var (85)
    on left: 66 67, on right: 14 59 64 65
identifiers (86)
    on left: 68 69, on right: 10 11 69
ident (87)
    on left: 70, on right: 19 24 66 67 68 69
number (88)
    on left: 71, on right: 11 58


State 0

    0 $accept: . prog_start $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 3 (functions)

    prog_start  go to state 2
    functions   go to state 3
    function    go to state 4
    funcName    go to state 5


State 1

    5 funcName: FUNCTION . IDENT

    IDENT  shift, and go to state 6


State 2

    0 $accept: prog_start . $end

    $end  shift, and go to state 7


State 3

    1 prog_start: functions .

    $default  reduce using rule 1 (prog_start)


State 4

    2 functions: function . functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 3 (functions)

    functions  go to state 8
    function   go to state 4
    funcName   go to state 5


State 5

    4 function: funcName . SEMICOLON M1 BEGIN_PARAMS declarations END_PARAMS M2 BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    SEMICOLON  shift, and go to state 9


State 6

    5 funcName: FUNCTION IDENT .

    $default  reduce using rule 5 (funcName)


State 7

    0 $accept: prog_start $end .

    $default  accept


State 8

    2 functions: function functions .

    $default  reduce using rule 2 (functions)


State 9

    4 function: funcName SEMICOLON . M1 BEGIN_PARAMS declarations END_PARAMS M2 BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    $default  reduce using rule 6 (M1)

    M1  go to state 10


State 10

    4 function: funcName SEMICOLON M1 . BEGIN_PARAMS declarations END_PARAMS M2 BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_PARAMS  shift, and go to state 11


State 11

    4 function: funcName SEMICOLON M1 BEGIN_PARAMS . declarations END_PARAMS M2 BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 12

    $default  reduce using rule 9 (declarations)

    declarations  go to state 13
    declaration   go to state 14
    identifiers   go to state 15
    ident         go to state 16


State 12

   70 ident: IDENT .

    $default  reduce using rule 70 (ident)


State 13

    4 function: funcName SEMICOLON M1 BEGIN_PARAMS declarations . END_PARAMS M2 BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    END_PARAMS  shift, and go to state 17


State 14

    8 declarations: declaration . SEMICOLON declarations

    SEMICOLON  shift, and go to state 18


State 15

   10 declaration: identifiers . COLON INTEGER
   11            | identifiers . COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER

    COLON  shift, and go to state 19


State 16

   68 identifiers: ident .
   69            | ident . COMMA identifiers

    COMMA  shift, and go to state 20

    $default  reduce using rule 68 (identifiers)


State 17

    4 function: funcName SEMICOLON M1 BEGIN_PARAMS declarations END_PARAMS . M2 BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    $default  reduce using rule 7 (M2)

    M2  go to state 21


State 18

    8 declarations: declaration SEMICOLON . declarations

    IDENT  shift, and go to state 12

    $default  reduce using rule 9 (declarations)

    declarations  go to state 22
    declaration   go to state 14
    identifiers   go to state 15
    ident         go to state 16


State 19

   10 declaration: identifiers COLON . INTEGER
   11            | identifiers COLON . ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 23
    ARRAY    shift, and go to state 24


State 20

   69 identifiers: ident COMMA . identifiers

    IDENT  shift, and go to state 12

    identifiers  go to state 25
    ident        go to state 16


State 21

    4 function: funcName SEMICOLON M1 BEGIN_PARAMS declarations END_PARAMS M2 . BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 26


State 22

    8 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 8 (declarations)


State 23

   10 declaration: identifiers COLON INTEGER .

    $default  reduce using rule 10 (declaration)


State 24

   11 declaration: identifiers COLON ARRAY . L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 27


State 25

   69 identifiers: ident COMMA identifiers .

    $default  reduce using rule 69 (identifiers)


State 26

    4 function: funcName SEMICOLON M1 BEGIN_PARAMS declarations END_PARAMS M2 BEGIN_LOCALS . declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 12

    $default  reduce using rule 9 (declarations)

    declarations  go to state 28
    declaration   go to state 14
    identifiers   go to state 15
    ident         go to state 16


State 27

   11 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET . number R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 29

    number  go to state 30


State 28

    4 function: funcName SEMICOLON M1 BEGIN_PARAMS declarations END_PARAMS M2 BEGIN_LOCALS declarations . END_LOCALS BEGIN_BODY statements END_BODY

    END_LOCALS  shift, and go to state 31


State 29

   71 number: NUMBER .

    $default  reduce using rule 71 (number)


State 30

   11 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET number . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 32


State 31

    4 function: funcName SEMICOLON M1 BEGIN_PARAMS declarations END_PARAMS M2 BEGIN_LOCALS declarations END_LOCALS . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 33


State 32

   11 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 34


State 33

    4 function: funcName SEMICOLON M1 BEGIN_PARAMS declarations END_PARAMS M2 BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY . statements END_BODY

    READ      shift, and go to state 35
    IF        shift, and go to state 36
    DO        shift, and go to state 37
    RETURN    shift, and go to state 38
    CONTINUE  shift, and go to state 39
    WRITE     shift, and go to state 40
    FOREACH   shift, and go to state 41
    IDENT     shift, and go to state 12

    WHILE     reduce using rule 25 (M9)
    $default  reduce using rule 13 (statements)

    statements  go to state 42
    statement   go to state 43
    foreach     go to state 44
    M9          go to state 45
    ifCond      go to state 46
    do          go to state 47
    var         go to state 48
    ident       go to state 49


State 34

   11 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 50


State 35

   20 statement: READ . vars

    IDENT  shift, and go to state 12

    vars   go to state 51
    var    go to state 52
    ident  go to state 49


State 36

   27 ifCond: IF . bool_exp THEN

    TRUE     shift, and go to state 53
    FALSE    shift, and go to state 54
    L_PAREN  shift, and go to state 55
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 56
    SUB      shift, and go to state 57
    NOT      shift, and go to state 58

    bool_exp                   go to state 59
    relation_and_exp           go to state 60
    relation_exp               go to state 61
    expression                 go to state 62
    multiplicative_expression  go to state 63
    term                       go to state 64
    terms                      go to state 65
    var                        go to state 66
    ident                      go to state 49
    number                     go to state 67


State 37

   31 do: DO .

    $default  reduce using rule 31 (do)


State 38

   23 statement: RETURN . expression

    L_PAREN  shift, and go to state 68
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 56
    SUB      shift, and go to state 57

    expression                 go to state 69
    multiplicative_expression  go to state 63
    term                       go to state 64
    terms                      go to state 65
    var                        go to state 66
    ident                      go to state 49
    number                     go to state 67


State 39

   22 statement: CONTINUE .

    $default  reduce using rule 22 (statement)


State 40

   21 statement: WRITE . vars

    IDENT  shift, and go to state 12

    vars   go to state 70
    var    go to state 52
    ident  go to state 49


State 41

   24 foreach: FOREACH . ident

    IDENT  shift, and go to state 12

    ident  go to state 71


State 42

    4 function: funcName SEMICOLON M1 BEGIN_PARAMS declarations END_PARAMS M2 BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements . END_BODY

    END_BODY  shift, and go to state 72


State 43

   12 statements: statement . SEMICOLON statements

    SEMICOLON  shift, and go to state 73


State 44

   19 statement: foreach . IN ident M5 BEGINLOOP statements ENDLOOP

    IN  shift, and go to state 74


State 45

   17 statement: M9 . while BEGINLOOP statements ENDLOOP

    WHILE  shift, and go to state 75

    while  go to state 76


State 46

   15 statement: ifCond . statements endif
   16          | ifCond . statements else statements endif

    READ      shift, and go to state 35
    IF        shift, and go to state 36
    DO        shift, and go to state 37
    RETURN    shift, and go to state 38
    CONTINUE  shift, and go to state 39
    WRITE     shift, and go to state 40
    FOREACH   shift, and go to state 41
    IDENT     shift, and go to state 12

    WHILE     reduce using rule 25 (M9)
    $default  reduce using rule 13 (statements)

    statements  go to state 77
    statement   go to state 43
    foreach     go to state 44
    M9          go to state 45
    ifCond      go to state 46
    do          go to state 47
    var         go to state 48
    ident       go to state 49


State 47

   18 statement: do . BEGINLOOP statements ENDLOOP M8 WHILE bool_exp

    BEGINLOOP  shift, and go to state 78


State 48

   14 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 79


State 49

   66 var: ident .
   67    | ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 80

    $default  reduce using rule 66 (var)


State 50

   11 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 11 (declaration)


State 51

   20 statement: READ vars .

    $default  reduce using rule 20 (statement)


State 52

   64 vars: var .
   65     | var . COMMA vars

    COMMA  shift, and go to state 81

    $default  reduce using rule 64 (vars)


State 53

   39 relation_exp: TRUE .

    $default  reduce using rule 39 (relation_exp)


State 54

   40 relation_exp: FALSE .

    $default  reduce using rule 40 (relation_exp)


State 55

   41 relation_exp: L_PAREN . bool_exp R_PAREN
   60 terms: L_PAREN . expression R_PAREN

    TRUE     shift, and go to state 53
    FALSE    shift, and go to state 54
    L_PAREN  shift, and go to state 55
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 56
    SUB      shift, and go to state 57
    NOT      shift, and go to state 58

    bool_exp                   go to state 82
    relation_and_exp           go to state 60
    relation_exp               go to state 61
    expression                 go to state 83
    multiplicative_expression  go to state 63
    term                       go to state 64
    terms                      go to state 65
    var                        go to state 66
    ident                      go to state 49
    number                     go to state 67


State 56

   57 term: IDENT . parenExpression
   70 ident: IDENT .

    L_PAREN  shift, and go to state 84

    $default  reduce using rule 70 (ident)

    parenExpression  go to state 85


State 57

   56 term: SUB . terms

    L_PAREN  shift, and go to state 68
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 12

    terms   go to state 86
    var     go to state 66
    ident   go to state 49
    number  go to state 67


State 58

   37 relation_exp: NOT . relation_exp

    TRUE     shift, and go to state 53
    FALSE    shift, and go to state 54
    L_PAREN  shift, and go to state 55
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 56
    SUB      shift, and go to state 57
    NOT      shift, and go to state 58

    relation_exp               go to state 87
    expression                 go to state 62
    multiplicative_expression  go to state 63
    term                       go to state 64
    terms                      go to state 65
    var                        go to state 66
    ident                      go to state 49
    number                     go to state 67


State 59

   27 ifCond: IF bool_exp . THEN

    THEN  shift, and go to state 88


State 60

   33 bool_exp: relation_and_exp .
   34         | relation_and_exp . OR relation_and_exp

    OR  shift, and go to state 89

    $default  reduce using rule 33 (bool_exp)


State 61

   35 relation_and_exp: relation_exp .
   36                 | relation_exp . AND relation_and_exp

    AND  shift, and go to state 90

    $default  reduce using rule 35 (relation_and_exp)


State 62

   38 relation_exp: expression . comp expression
   49 expression: expression . ADD multiplicative_expression
   50           | expression . SUB multiplicative_expression

    ADD  shift, and go to state 91
    SUB  shift, and go to state 92
    LT   shift, and go to state 93
    LTE  shift, and go to state 94
    GT   shift, and go to state 95
    GTE  shift, and go to state 96
    EQ   shift, and go to state 97
    NEQ  shift, and go to state 98

    comp  go to state 99


State 63

   48 expression: multiplicative_expression .
   52 multiplicative_expression: multiplicative_expression . MULT term
   53                          | multiplicative_expression . DIV term
   54                          | multiplicative_expression . MOD term

    MULT  shift, and go to state 100
    DIV   shift, and go to state 101
    MOD   shift, and go to state 102

    $default  reduce using rule 48 (expression)


State 64

   51 multiplicative_expression: term .

    $default  reduce using rule 51 (multiplicative_expression)


State 65

   55 term: terms .

    $default  reduce using rule 55 (term)


State 66

   59 terms: var .

    $default  reduce using rule 59 (terms)


State 67

   58 terms: number .

    $default  reduce using rule 58 (terms)


State 68

   60 terms: L_PAREN . expression R_PAREN

    L_PAREN  shift, and go to state 68
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 56
    SUB      shift, and go to state 57

    expression                 go to state 103
    multiplicative_expression  go to state 63
    term                       go to state 64
    terms                      go to state 65
    var                        go to state 66
    ident                      go to state 49
    number                     go to state 67


State 69

   23 statement: RETURN expression .
   49 expression: expression . ADD multiplicative_expression
   50           | expression . SUB multiplicative_expression

    ADD  shift, and go to state 91
    SUB  shift, and go to state 92

    $default  reduce using rule 23 (statement)


State 70

   21 statement: WRITE vars .

    $default  reduce using rule 21 (statement)


State 71

   24 foreach: FOREACH ident .

    $default  reduce using rule 24 (foreach)


State 72

    4 function: funcName SEMICOLON M1 BEGIN_PARAMS declarations END_PARAMS M2 BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY .

    $default  reduce using rule 4 (function)


State 73

   12 statements: statement SEMICOLON . statements

    READ      shift, and go to state 35
    IF        shift, and go to state 36
    DO        shift, and go to state 37
    RETURN    shift, and go to state 38
    CONTINUE  shift, and go to state 39
    WRITE     shift, and go to state 40
    FOREACH   shift, and go to state 41
    IDENT     shift, and go to state 12

    WHILE     reduce using rule 25 (M9)
    $default  reduce using rule 13 (statements)

    statements  go to state 104
    statement   go to state 43
    foreach     go to state 44
    M9          go to state 45
    ifCond      go to state 46
    do          go to state 47
    var         go to state 48
    ident       go to state 49


State 74

   19 statement: foreach IN . ident M5 BEGINLOOP statements ENDLOOP

    IDENT  shift, and go to state 12

    ident  go to state 105


State 75

   26 while: WHILE . bool_exp

    TRUE     shift, and go to state 53
    FALSE    shift, and go to state 54
    L_PAREN  shift, and go to state 55
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 56
    SUB      shift, and go to state 57
    NOT      shift, and go to state 58

    bool_exp                   go to state 106
    relation_and_exp           go to state 60
    relation_exp               go to state 61
    expression                 go to state 62
    multiplicative_expression  go to state 63
    term                       go to state 64
    terms                      go to state 65
    var                        go to state 66
    ident                      go to state 49
    number                     go to state 67


State 76

   17 statement: M9 while . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 107


State 77

   15 statement: ifCond statements . endif
   16          | ifCond statements . else statements endif

    ENDIF  shift, and go to state 108
    ELSE   shift, and go to state 109

    else   go to state 110
    endif  go to state 111


State 78

   18 statement: do BEGINLOOP . statements ENDLOOP M8 WHILE bool_exp

    READ      shift, and go to state 35
    IF        shift, and go to state 36
    DO        shift, and go to state 37
    RETURN    shift, and go to state 38
    CONTINUE  shift, and go to state 39
    WRITE     shift, and go to state 40
    FOREACH   shift, and go to state 41
    IDENT     shift, and go to state 12

    WHILE     reduce using rule 25 (M9)
    $default  reduce using rule 13 (statements)

    statements  go to state 112
    statement   go to state 43
    foreach     go to state 44
    M9          go to state 45
    ifCond      go to state 46
    do          go to state 47
    var         go to state 48
    ident       go to state 49


State 79

   14 statement: var ASSIGN . expression

    L_PAREN  shift, and go to state 68
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 56
    SUB      shift, and go to state 57

    expression                 go to state 113
    multiplicative_expression  go to state 63
    term                       go to state 64
    terms                      go to state 65
    var                        go to state 66
    ident                      go to state 49
    number                     go to state 67


State 80

   67 var: ident L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    L_PAREN  shift, and go to state 68
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 56
    SUB      shift, and go to state 57

    expression                 go to state 114
    multiplicative_expression  go to state 63
    term                       go to state 64
    terms                      go to state 65
    var                        go to state 66
    ident                      go to state 49
    number                     go to state 67


State 81

   65 vars: var COMMA . vars

    IDENT  shift, and go to state 12

    vars   go to state 115
    var    go to state 52
    ident  go to state 49


State 82

   41 relation_exp: L_PAREN bool_exp . R_PAREN

    R_PAREN  shift, and go to state 116


State 83

   38 relation_exp: expression . comp expression
   49 expression: expression . ADD multiplicative_expression
   50           | expression . SUB multiplicative_expression
   60 terms: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 117
    ADD      shift, and go to state 91
    SUB      shift, and go to state 92
    LT       shift, and go to state 93
    LTE      shift, and go to state 94
    GT       shift, and go to state 95
    GTE      shift, and go to state 96
    EQ       shift, and go to state 97
    NEQ      shift, and go to state 98

    comp  go to state 99


State 84

   61 parenExpression: L_PAREN . expressions R_PAREN

    L_PAREN  shift, and go to state 68
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 56
    SUB      shift, and go to state 57

    expression                 go to state 118
    multiplicative_expression  go to state 63
    term                       go to state 64
    terms                      go to state 65
    expressions                go to state 119
    var                        go to state 66
    ident                      go to state 49
    number                     go to state 67


State 85

   57 term: IDENT parenExpression .

    $default  reduce using rule 57 (term)


State 86

   56 term: SUB terms .

    $default  reduce using rule 56 (term)


State 87

   37 relation_exp: NOT relation_exp .

    $default  reduce using rule 37 (relation_exp)


State 88

   27 ifCond: IF bool_exp THEN .

    $default  reduce using rule 27 (ifCond)


State 89

   34 bool_exp: relation_and_exp OR . relation_and_exp

    TRUE     shift, and go to state 53
    FALSE    shift, and go to state 54
    L_PAREN  shift, and go to state 55
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 56
    SUB      shift, and go to state 57
    NOT      shift, and go to state 58

    relation_and_exp           go to state 120
    relation_exp               go to state 61
    expression                 go to state 62
    multiplicative_expression  go to state 63
    term                       go to state 64
    terms                      go to state 65
    var                        go to state 66
    ident                      go to state 49
    number                     go to state 67


State 90

   36 relation_and_exp: relation_exp AND . relation_and_exp

    TRUE     shift, and go to state 53
    FALSE    shift, and go to state 54
    L_PAREN  shift, and go to state 55
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 56
    SUB      shift, and go to state 57
    NOT      shift, and go to state 58

    relation_and_exp           go to state 121
    relation_exp               go to state 61
    expression                 go to state 62
    multiplicative_expression  go to state 63
    term                       go to state 64
    terms                      go to state 65
    var                        go to state 66
    ident                      go to state 49
    number                     go to state 67


State 91

   49 expression: expression ADD . multiplicative_expression

    L_PAREN  shift, and go to state 68
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 56
    SUB      shift, and go to state 57

    multiplicative_expression  go to state 122
    term                       go to state 64
    terms                      go to state 65
    var                        go to state 66
    ident                      go to state 49
    number                     go to state 67


State 92

   50 expression: expression SUB . multiplicative_expression

    L_PAREN  shift, and go to state 68
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 56
    SUB      shift, and go to state 57

    multiplicative_expression  go to state 123
    term                       go to state 64
    terms                      go to state 65
    var                        go to state 66
    ident                      go to state 49
    number                     go to state 67


State 93

   44 comp: LT .

    $default  reduce using rule 44 (comp)


State 94

   46 comp: LTE .

    $default  reduce using rule 46 (comp)


State 95

   45 comp: GT .

    $default  reduce using rule 45 (comp)


State 96

   47 comp: GTE .

    $default  reduce using rule 47 (comp)


State 97

   42 comp: EQ .

    $default  reduce using rule 42 (comp)


State 98

   43 comp: NEQ .

    $default  reduce using rule 43 (comp)


State 99

   38 relation_exp: expression comp . expression

    L_PAREN  shift, and go to state 68
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 56
    SUB      shift, and go to state 57

    expression                 go to state 124
    multiplicative_expression  go to state 63
    term                       go to state 64
    terms                      go to state 65
    var                        go to state 66
    ident                      go to state 49
    number                     go to state 67


State 100

   52 multiplicative_expression: multiplicative_expression MULT . term

    L_PAREN  shift, and go to state 68
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 56
    SUB      shift, and go to state 57

    term    go to state 125
    terms   go to state 65
    var     go to state 66
    ident   go to state 49
    number  go to state 67


State 101

   53 multiplicative_expression: multiplicative_expression DIV . term

    L_PAREN  shift, and go to state 68
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 56
    SUB      shift, and go to state 57

    term    go to state 126
    terms   go to state 65
    var     go to state 66
    ident   go to state 49
    number  go to state 67


State 102

   54 multiplicative_expression: multiplicative_expression MOD . term

    L_PAREN  shift, and go to state 68
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 56
    SUB      shift, and go to state 57

    term    go to state 127
    terms   go to state 65
    var     go to state 66
    ident   go to state 49
    number  go to state 67


State 103

   49 expression: expression . ADD multiplicative_expression
   50           | expression . SUB multiplicative_expression
   60 terms: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 117
    ADD      shift, and go to state 91
    SUB      shift, and go to state 92


State 104

   12 statements: statement SEMICOLON statements .

    $default  reduce using rule 12 (statements)


State 105

   19 statement: foreach IN ident . M5 BEGINLOOP statements ENDLOOP

    $default  reduce using rule 30 (M5)

    M5  go to state 128


State 106

   26 while: WHILE bool_exp .

    $default  reduce using rule 26 (while)


State 107

   17 statement: M9 while BEGINLOOP . statements ENDLOOP

    READ      shift, and go to state 35
    IF        shift, and go to state 36
    DO        shift, and go to state 37
    RETURN    shift, and go to state 38
    CONTINUE  shift, and go to state 39
    WRITE     shift, and go to state 40
    FOREACH   shift, and go to state 41
    IDENT     shift, and go to state 12

    WHILE     reduce using rule 25 (M9)
    $default  reduce using rule 13 (statements)

    statements  go to state 129
    statement   go to state 43
    foreach     go to state 44
    M9          go to state 45
    ifCond      go to state 46
    do          go to state 47
    var         go to state 48
    ident       go to state 49


State 108

   29 endif: ENDIF .

    $default  reduce using rule 29 (endif)


State 109

   28 else: ELSE .

    $default  reduce using rule 28 (else)


State 110

   16 statement: ifCond statements else . statements endif

    READ      shift, and go to state 35
    IF        shift, and go to state 36
    DO        shift, and go to state 37
    RETURN    shift, and go to state 38
    CONTINUE  shift, and go to state 39
    WRITE     shift, and go to state 40
    FOREACH   shift, and go to state 41
    IDENT     shift, and go to state 12

    WHILE     reduce using rule 25 (M9)
    $default  reduce using rule 13 (statements)

    statements  go to state 130
    statement   go to state 43
    foreach     go to state 44
    M9          go to state 45
    ifCond      go to state 46
    do          go to state 47
    var         go to state 48
    ident       go to state 49


State 111

   15 statement: ifCond statements endif .

    $default  reduce using rule 15 (statement)


State 112

   18 statement: do BEGINLOOP statements . ENDLOOP M8 WHILE bool_exp

    ENDLOOP  shift, and go to state 131


State 113

   14 statement: var ASSIGN expression .
   49 expression: expression . ADD multiplicative_expression
   50           | expression . SUB multiplicative_expression

    ADD  shift, and go to state 91
    SUB  shift, and go to state 92

    $default  reduce using rule 14 (statement)


State 114

   49 expression: expression . ADD multiplicative_expression
   50           | expression . SUB multiplicative_expression
   67 var: ident L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 132
    ADD               shift, and go to state 91
    SUB               shift, and go to state 92


State 115

   65 vars: var COMMA vars .

    $default  reduce using rule 65 (vars)


State 116

   41 relation_exp: L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 41 (relation_exp)


State 117

   60 terms: L_PAREN expression R_PAREN .

    $default  reduce using rule 60 (terms)


State 118

   49 expression: expression . ADD multiplicative_expression
   50           | expression . SUB multiplicative_expression
   62 expressions: expression .
   63            | expression . COMMA expressions

    COMMA  shift, and go to state 133
    ADD    shift, and go to state 91
    SUB    shift, and go to state 92

    $default  reduce using rule 62 (expressions)


State 119

   61 parenExpression: L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 134


State 120

   34 bool_exp: relation_and_exp OR relation_and_exp .

    $default  reduce using rule 34 (bool_exp)


State 121

   36 relation_and_exp: relation_exp AND relation_and_exp .

    $default  reduce using rule 36 (relation_and_exp)


State 122

   49 expression: expression ADD multiplicative_expression .
   52 multiplicative_expression: multiplicative_expression . MULT term
   53                          | multiplicative_expression . DIV term
   54                          | multiplicative_expression . MOD term

    MULT  shift, and go to state 100
    DIV   shift, and go to state 101
    MOD   shift, and go to state 102

    $default  reduce using rule 49 (expression)


State 123

   50 expression: expression SUB multiplicative_expression .
   52 multiplicative_expression: multiplicative_expression . MULT term
   53                          | multiplicative_expression . DIV term
   54                          | multiplicative_expression . MOD term

    MULT  shift, and go to state 100
    DIV   shift, and go to state 101
    MOD   shift, and go to state 102

    $default  reduce using rule 50 (expression)


State 124

   38 relation_exp: expression comp expression .
   49 expression: expression . ADD multiplicative_expression
   50           | expression . SUB multiplicative_expression

    ADD  shift, and go to state 91
    SUB  shift, and go to state 92

    $default  reduce using rule 38 (relation_exp)


State 125

   52 multiplicative_expression: multiplicative_expression MULT term .

    $default  reduce using rule 52 (multiplicative_expression)


State 126

   53 multiplicative_expression: multiplicative_expression DIV term .

    $default  reduce using rule 53 (multiplicative_expression)


State 127

   54 multiplicative_expression: multiplicative_expression MOD term .

    $default  reduce using rule 54 (multiplicative_expression)


State 128

   19 statement: foreach IN ident M5 . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 135


State 129

   17 statement: M9 while BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 136


State 130

   16 statement: ifCond statements else statements . endif

    ENDIF  shift, and go to state 108

    endif  go to state 137


State 131

   18 statement: do BEGINLOOP statements ENDLOOP . M8 WHILE bool_exp

    $default  reduce using rule 32 (M8)

    M8  go to state 138


State 132

   67 var: ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 67 (var)


State 133

   63 expressions: expression COMMA . expressions

    L_PAREN  shift, and go to state 68
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 56
    SUB      shift, and go to state 57

    expression                 go to state 118
    multiplicative_expression  go to state 63
    term                       go to state 64
    terms                      go to state 65
    expressions                go to state 139
    var                        go to state 66
    ident                      go to state 49
    number                     go to state 67


State 134

   61 parenExpression: L_PAREN expressions R_PAREN .

    $default  reduce using rule 61 (parenExpression)


State 135

   19 statement: foreach IN ident M5 BEGINLOOP . statements ENDLOOP

    READ      shift, and go to state 35
    IF        shift, and go to state 36
    DO        shift, and go to state 37
    RETURN    shift, and go to state 38
    CONTINUE  shift, and go to state 39
    WRITE     shift, and go to state 40
    FOREACH   shift, and go to state 41
    IDENT     shift, and go to state 12

    WHILE     reduce using rule 25 (M9)
    $default  reduce using rule 13 (statements)

    statements  go to state 140
    statement   go to state 43
    foreach     go to state 44
    M9          go to state 45
    ifCond      go to state 46
    do          go to state 47
    var         go to state 48
    ident       go to state 49


State 136

   17 statement: M9 while BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 17 (statement)


State 137

   16 statement: ifCond statements else statements endif .

    $default  reduce using rule 16 (statement)


State 138

   18 statement: do BEGINLOOP statements ENDLOOP M8 . WHILE bool_exp

    WHILE  shift, and go to state 141


State 139

   63 expressions: expression COMMA expressions .

    $default  reduce using rule 63 (expressions)


State 140

   19 statement: foreach IN ident M5 BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 142


State 141

   18 statement: do BEGINLOOP statements ENDLOOP M8 WHILE . bool_exp

    TRUE     shift, and go to state 53
    FALSE    shift, and go to state 54
    L_PAREN  shift, and go to state 55
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 56
    SUB      shift, and go to state 57
    NOT      shift, and go to state 58

    bool_exp                   go to state 143
    relation_and_exp           go to state 60
    relation_exp               go to state 61
    expression                 go to state 62
    multiplicative_expression  go to state 63
    term                       go to state 64
    terms                      go to state 65
    var                        go to state 66
    ident                      go to state 49
    number                     go to state 67


State 142

   19 statement: foreach IN ident M5 BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 19 (statement)


State 143

   18 statement: do BEGINLOOP statements ENDLOOP M8 WHILE bool_exp .

    $default  reduce using rule 18 (statement)
