Grammar

    0 $accept: prog_start $end

    1 prog_start: functions

    2 functions: function functions
    3          | %empty

    4 function: funcName SEMICOLON M1 BEGIN_PARAMS declarations END_PARAMS M2 BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    5 funcName: FUNCTION IDENT

    6 M1: %empty

    7 M2: %empty

    8 declarations: declaration SEMICOLON declarations
    9             | %empty

   10 declaration: identifiers COLON INTEGER
   11            | identifiers COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER

   12 statements: statement SEMICOLON statements
   13           | %empty

   14 statement: var ASSIGN expression
   15          | ifCond statements M4 ENDIF
   16          | ifCond statements M3 ELSE statements M4 ENDIF
   17          | while BEGINLOOP statements M6 ENDLOOP
   18          | DO M10 BEGINLOOP statements ENDLOOP WHILE bool_exp
   19          | FOREACH ident IN IDENT BEGINLOOP statements ENDLOOP
   20          | READ vars
   21          | WRITE vars
   22          | CONTINUE
   23          | RETURN expression

   24 while: WHILE bool_exp

   25 ifCond: IF bool_exp THEN

   26 M3: %empty

   27 M4: %empty

   28 M6: %empty

   29 M10: %empty

   30 bool_exp: relation_and_exp
   31         | relation_and_exp OR relation_and_exp

   32 relation_and_exp: relation_exp
   33                 | relation_exp AND relation_and_exp

   34 relation_exp: NOT relation_exp
   35             | expression comp expression
   36             | TRUE
   37             | FALSE
   38             | L_PAREN bool_exp R_PAREN

   39 comp: EQ
   40     | NEQ
   41     | LT
   42     | GT
   43     | LTE
   44     | GTE

   45 expression: multiplicative_expression
   46           | expression ADD multiplicative_expression
   47           | expression SUB multiplicative_expression

   48 multiplicative_expression: term
   49                          | multiplicative_expression MULT term
   50                          | multiplicative_expression DIV term
   51                          | multiplicative_expression MOD term

   52 term: terms
   53     | SUB terms
   54     | IDENT parenExpression

   55 terms: number
   56      | var
   57      | L_PAREN expression R_PAREN

   58 parenExpression: L_PAREN expressions R_PAREN

   59 expressions: expression
   60            | expression COMMA expressions

   61 vars: var
   62     | var COMMA vars

   63 var: ident
   64    | ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET

   65 identifiers: ident
   66            | ident COMMA identifiers

   67 ident: IDENT

   68 number: NUMBER


Terminals, with rules where they appear

$end (0) 0
error (256)
FUNCTION (258) 5
INTEGER (259) 10 11
OF (260) 11
ARRAY (261) 11
READ (262) 20
IF (263) 25
THEN (264) 25
ENDIF (265) 15 16
ELSE (266) 16
WHILE (267) 18 24
DO (268) 18
BEGIN_PARAMS (269) 4
BEGIN_LOCALS (270) 4
BEGIN_BODY (271) 4
IN (272) 19
BEGINLOOP (273) 17 18 19
ENDLOOP (274) 17 18 19
RETURN (275) 23
END_PARAMS (276) 4
END_LOCALS (277) 4
END_BODY (278) 4
CONTINUE (279) 22
WRITE (280) 21
TRUE (281) 36
FALSE (282) 37
FOREACH (283) 19
SEMICOLON (284) 4 8 12
COLON (285) 10 11
COMMA (286) 60 62 66
L_PAREN (287) 38 57 58
R_PAREN (288) 38 57 58
L_SQUARE_BRACKET (289) 11 64
R_SQUARE_BRACKET (290) 11 64
NUMBER (291) 68
IDENT (292) 5 19 54 67
UMINUS (293)
MULT (294) 49
DIV (295) 50
MOD (296) 51
ADD (297) 46
SUB (298) 47 53
LT (299) 41
LTE (300) 43
GT (301) 42
GTE (302) 44
EQ (303) 39
NEQ (304) 40
NOT (305) 34
AND (306) 33
OR (307) 31
ASSIGN (308) 14


Nonterminals, with rules where they appear

$accept (54)
    on left: 0
prog_start (55)
    on left: 1, on right: 0
functions (56)
    on left: 2 3, on right: 1 2
function (57)
    on left: 4, on right: 2
funcName (58)
    on left: 5, on right: 4
M1 (59)
    on left: 6, on right: 4
M2 (60)
    on left: 7, on right: 4
declarations (61)
    on left: 8 9, on right: 4 8
declaration (62)
    on left: 10 11, on right: 8
statements (63)
    on left: 12 13, on right: 4 12 15 16 17 18 19
statement (64)
    on left: 14 15 16 17 18 19 20 21 22 23, on right: 12
while (65)
    on left: 24, on right: 17
ifCond (66)
    on left: 25, on right: 15 16
M3 (67)
    on left: 26, on right: 16
M4 (68)
    on left: 27, on right: 15 16
M6 (69)
    on left: 28, on right: 17
M10 (70)
    on left: 29, on right: 18
bool_exp (71)
    on left: 30 31, on right: 18 24 25 38
relation_and_exp (72)
    on left: 32 33, on right: 30 31 33
relation_exp (73)
    on left: 34 35 36 37 38, on right: 32 33 34
comp (74)
    on left: 39 40 41 42 43 44, on right: 35
expression (75)
    on left: 45 46 47, on right: 14 23 35 46 47 57 59 60 64
multiplicative_expression (76)
    on left: 48 49 50 51, on right: 45 46 47 49 50 51
term (77)
    on left: 52 53 54, on right: 48 49 50 51
terms (78)
    on left: 55 56 57, on right: 52 53
parenExpression (79)
    on left: 58, on right: 54
expressions (80)
    on left: 59 60, on right: 58 60
vars (81)
    on left: 61 62, on right: 20 21 62
var (82)
    on left: 63 64, on right: 14 56 61 62
identifiers (83)
    on left: 65 66, on right: 10 11 66
ident (84)
    on left: 67, on right: 19 63 64 65 66
number (85)
    on left: 68, on right: 11 55


State 0

    0 $accept: . prog_start $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 3 (functions)

    prog_start  go to state 2
    functions   go to state 3
    function    go to state 4
    funcName    go to state 5


State 1

    5 funcName: FUNCTION . IDENT

    IDENT  shift, and go to state 6


State 2

    0 $accept: prog_start . $end

    $end  shift, and go to state 7


State 3

    1 prog_start: functions .

    $default  reduce using rule 1 (prog_start)


State 4

    2 functions: function . functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 3 (functions)

    functions  go to state 8
    function   go to state 4
    funcName   go to state 5


State 5

    4 function: funcName . SEMICOLON M1 BEGIN_PARAMS declarations END_PARAMS M2 BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    SEMICOLON  shift, and go to state 9


State 6

    5 funcName: FUNCTION IDENT .

    $default  reduce using rule 5 (funcName)


State 7

    0 $accept: prog_start $end .

    $default  accept


State 8

    2 functions: function functions .

    $default  reduce using rule 2 (functions)


State 9

    4 function: funcName SEMICOLON . M1 BEGIN_PARAMS declarations END_PARAMS M2 BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    $default  reduce using rule 6 (M1)

    M1  go to state 10


State 10

    4 function: funcName SEMICOLON M1 . BEGIN_PARAMS declarations END_PARAMS M2 BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_PARAMS  shift, and go to state 11


State 11

    4 function: funcName SEMICOLON M1 BEGIN_PARAMS . declarations END_PARAMS M2 BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 12

    $default  reduce using rule 9 (declarations)

    declarations  go to state 13
    declaration   go to state 14
    identifiers   go to state 15
    ident         go to state 16


State 12

   67 ident: IDENT .

    $default  reduce using rule 67 (ident)


State 13

    4 function: funcName SEMICOLON M1 BEGIN_PARAMS declarations . END_PARAMS M2 BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    END_PARAMS  shift, and go to state 17


State 14

    8 declarations: declaration . SEMICOLON declarations

    SEMICOLON  shift, and go to state 18


State 15

   10 declaration: identifiers . COLON INTEGER
   11            | identifiers . COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER

    COLON  shift, and go to state 19


State 16

   65 identifiers: ident .
   66            | ident . COMMA identifiers

    COMMA  shift, and go to state 20

    $default  reduce using rule 65 (identifiers)


State 17

    4 function: funcName SEMICOLON M1 BEGIN_PARAMS declarations END_PARAMS . M2 BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    $default  reduce using rule 7 (M2)

    M2  go to state 21


State 18

    8 declarations: declaration SEMICOLON . declarations

    IDENT  shift, and go to state 12

    $default  reduce using rule 9 (declarations)

    declarations  go to state 22
    declaration   go to state 14
    identifiers   go to state 15
    ident         go to state 16


State 19

   10 declaration: identifiers COLON . INTEGER
   11            | identifiers COLON . ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 23
    ARRAY    shift, and go to state 24


State 20

   66 identifiers: ident COMMA . identifiers

    IDENT  shift, and go to state 12

    identifiers  go to state 25
    ident        go to state 16


State 21

    4 function: funcName SEMICOLON M1 BEGIN_PARAMS declarations END_PARAMS M2 . BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 26


State 22

    8 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 8 (declarations)


State 23

   10 declaration: identifiers COLON INTEGER .

    $default  reduce using rule 10 (declaration)


State 24

   11 declaration: identifiers COLON ARRAY . L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 27


State 25

   66 identifiers: ident COMMA identifiers .

    $default  reduce using rule 66 (identifiers)


State 26

    4 function: funcName SEMICOLON M1 BEGIN_PARAMS declarations END_PARAMS M2 BEGIN_LOCALS . declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 12

    $default  reduce using rule 9 (declarations)

    declarations  go to state 28
    declaration   go to state 14
    identifiers   go to state 15
    ident         go to state 16


State 27

   11 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET . number R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 29

    number  go to state 30


State 28

    4 function: funcName SEMICOLON M1 BEGIN_PARAMS declarations END_PARAMS M2 BEGIN_LOCALS declarations . END_LOCALS BEGIN_BODY statements END_BODY

    END_LOCALS  shift, and go to state 31


State 29

   68 number: NUMBER .

    $default  reduce using rule 68 (number)


State 30

   11 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET number . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 32


State 31

    4 function: funcName SEMICOLON M1 BEGIN_PARAMS declarations END_PARAMS M2 BEGIN_LOCALS declarations END_LOCALS . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 33


State 32

   11 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 34


State 33

    4 function: funcName SEMICOLON M1 BEGIN_PARAMS declarations END_PARAMS M2 BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY . statements END_BODY

    READ      shift, and go to state 35
    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    RETURN    shift, and go to state 39
    CONTINUE  shift, and go to state 40
    WRITE     shift, and go to state 41
    FOREACH   shift, and go to state 42
    IDENT     shift, and go to state 12

    $default  reduce using rule 13 (statements)

    statements  go to state 43
    statement   go to state 44
    while       go to state 45
    ifCond      go to state 46
    var         go to state 47
    ident       go to state 48


State 34

   11 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 49


State 35

   20 statement: READ . vars

    IDENT  shift, and go to state 12

    vars   go to state 50
    var    go to state 51
    ident  go to state 48


State 36

   25 ifCond: IF . bool_exp THEN

    TRUE     shift, and go to state 52
    FALSE    shift, and go to state 53
    L_PAREN  shift, and go to state 54
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 55
    SUB      shift, and go to state 56
    NOT      shift, and go to state 57

    bool_exp                   go to state 58
    relation_and_exp           go to state 59
    relation_exp               go to state 60
    expression                 go to state 61
    multiplicative_expression  go to state 62
    term                       go to state 63
    terms                      go to state 64
    var                        go to state 65
    ident                      go to state 48
    number                     go to state 66


State 37

   24 while: WHILE . bool_exp

    TRUE     shift, and go to state 52
    FALSE    shift, and go to state 53
    L_PAREN  shift, and go to state 54
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 55
    SUB      shift, and go to state 56
    NOT      shift, and go to state 57

    bool_exp                   go to state 67
    relation_and_exp           go to state 59
    relation_exp               go to state 60
    expression                 go to state 61
    multiplicative_expression  go to state 62
    term                       go to state 63
    terms                      go to state 64
    var                        go to state 65
    ident                      go to state 48
    number                     go to state 66


State 38

   18 statement: DO . M10 BEGINLOOP statements ENDLOOP WHILE bool_exp

    $default  reduce using rule 29 (M10)

    M10  go to state 68


State 39

   23 statement: RETURN . expression

    L_PAREN  shift, and go to state 69
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 55
    SUB      shift, and go to state 56

    expression                 go to state 70
    multiplicative_expression  go to state 62
    term                       go to state 63
    terms                      go to state 64
    var                        go to state 65
    ident                      go to state 48
    number                     go to state 66


State 40

   22 statement: CONTINUE .

    $default  reduce using rule 22 (statement)


State 41

   21 statement: WRITE . vars

    IDENT  shift, and go to state 12

    vars   go to state 71
    var    go to state 51
    ident  go to state 48


State 42

   19 statement: FOREACH . ident IN IDENT BEGINLOOP statements ENDLOOP

    IDENT  shift, and go to state 12

    ident  go to state 72


State 43

    4 function: funcName SEMICOLON M1 BEGIN_PARAMS declarations END_PARAMS M2 BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements . END_BODY

    END_BODY  shift, and go to state 73


State 44

   12 statements: statement . SEMICOLON statements

    SEMICOLON  shift, and go to state 74


State 45

   17 statement: while . BEGINLOOP statements M6 ENDLOOP

    BEGINLOOP  shift, and go to state 75


State 46

   15 statement: ifCond . statements M4 ENDIF
   16          | ifCond . statements M3 ELSE statements M4 ENDIF

    READ      shift, and go to state 35
    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    RETURN    shift, and go to state 39
    CONTINUE  shift, and go to state 40
    WRITE     shift, and go to state 41
    FOREACH   shift, and go to state 42
    IDENT     shift, and go to state 12

    $default  reduce using rule 13 (statements)

    statements  go to state 76
    statement   go to state 44
    while       go to state 45
    ifCond      go to state 46
    var         go to state 47
    ident       go to state 48


State 47

   14 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 77


State 48

   63 var: ident .
   64    | ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 78

    $default  reduce using rule 63 (var)


State 49

   11 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 11 (declaration)


State 50

   20 statement: READ vars .

    $default  reduce using rule 20 (statement)


State 51

   61 vars: var .
   62     | var . COMMA vars

    COMMA  shift, and go to state 79

    $default  reduce using rule 61 (vars)


State 52

   36 relation_exp: TRUE .

    $default  reduce using rule 36 (relation_exp)


State 53

   37 relation_exp: FALSE .

    $default  reduce using rule 37 (relation_exp)


State 54

   38 relation_exp: L_PAREN . bool_exp R_PAREN
   57 terms: L_PAREN . expression R_PAREN

    TRUE     shift, and go to state 52
    FALSE    shift, and go to state 53
    L_PAREN  shift, and go to state 54
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 55
    SUB      shift, and go to state 56
    NOT      shift, and go to state 57

    bool_exp                   go to state 80
    relation_and_exp           go to state 59
    relation_exp               go to state 60
    expression                 go to state 81
    multiplicative_expression  go to state 62
    term                       go to state 63
    terms                      go to state 64
    var                        go to state 65
    ident                      go to state 48
    number                     go to state 66


State 55

   54 term: IDENT . parenExpression
   67 ident: IDENT .

    L_PAREN  shift, and go to state 82

    $default  reduce using rule 67 (ident)

    parenExpression  go to state 83


State 56

   53 term: SUB . terms

    L_PAREN  shift, and go to state 69
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 12

    terms   go to state 84
    var     go to state 65
    ident   go to state 48
    number  go to state 66


State 57

   34 relation_exp: NOT . relation_exp

    TRUE     shift, and go to state 52
    FALSE    shift, and go to state 53
    L_PAREN  shift, and go to state 54
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 55
    SUB      shift, and go to state 56
    NOT      shift, and go to state 57

    relation_exp               go to state 85
    expression                 go to state 61
    multiplicative_expression  go to state 62
    term                       go to state 63
    terms                      go to state 64
    var                        go to state 65
    ident                      go to state 48
    number                     go to state 66


State 58

   25 ifCond: IF bool_exp . THEN

    THEN  shift, and go to state 86


State 59

   30 bool_exp: relation_and_exp .
   31         | relation_and_exp . OR relation_and_exp

    OR  shift, and go to state 87

    $default  reduce using rule 30 (bool_exp)


State 60

   32 relation_and_exp: relation_exp .
   33                 | relation_exp . AND relation_and_exp

    AND  shift, and go to state 88

    $default  reduce using rule 32 (relation_and_exp)


State 61

   35 relation_exp: expression . comp expression
   46 expression: expression . ADD multiplicative_expression
   47           | expression . SUB multiplicative_expression

    ADD  shift, and go to state 89
    SUB  shift, and go to state 90
    LT   shift, and go to state 91
    LTE  shift, and go to state 92
    GT   shift, and go to state 93
    GTE  shift, and go to state 94
    EQ   shift, and go to state 95
    NEQ  shift, and go to state 96

    comp  go to state 97


State 62

   45 expression: multiplicative_expression .
   49 multiplicative_expression: multiplicative_expression . MULT term
   50                          | multiplicative_expression . DIV term
   51                          | multiplicative_expression . MOD term

    MULT  shift, and go to state 98
    DIV   shift, and go to state 99
    MOD   shift, and go to state 100

    $default  reduce using rule 45 (expression)


State 63

   48 multiplicative_expression: term .

    $default  reduce using rule 48 (multiplicative_expression)


State 64

   52 term: terms .

    $default  reduce using rule 52 (term)


State 65

   56 terms: var .

    $default  reduce using rule 56 (terms)


State 66

   55 terms: number .

    $default  reduce using rule 55 (terms)


State 67

   24 while: WHILE bool_exp .

    $default  reduce using rule 24 (while)


State 68

   18 statement: DO M10 . BEGINLOOP statements ENDLOOP WHILE bool_exp

    BEGINLOOP  shift, and go to state 101


State 69

   57 terms: L_PAREN . expression R_PAREN

    L_PAREN  shift, and go to state 69
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 55
    SUB      shift, and go to state 56

    expression                 go to state 102
    multiplicative_expression  go to state 62
    term                       go to state 63
    terms                      go to state 64
    var                        go to state 65
    ident                      go to state 48
    number                     go to state 66


State 70

   23 statement: RETURN expression .
   46 expression: expression . ADD multiplicative_expression
   47           | expression . SUB multiplicative_expression

    ADD  shift, and go to state 89
    SUB  shift, and go to state 90

    $default  reduce using rule 23 (statement)


State 71

   21 statement: WRITE vars .

    $default  reduce using rule 21 (statement)


State 72

   19 statement: FOREACH ident . IN IDENT BEGINLOOP statements ENDLOOP

    IN  shift, and go to state 103


State 73

    4 function: funcName SEMICOLON M1 BEGIN_PARAMS declarations END_PARAMS M2 BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY .

    $default  reduce using rule 4 (function)


State 74

   12 statements: statement SEMICOLON . statements

    READ      shift, and go to state 35
    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    RETURN    shift, and go to state 39
    CONTINUE  shift, and go to state 40
    WRITE     shift, and go to state 41
    FOREACH   shift, and go to state 42
    IDENT     shift, and go to state 12

    $default  reduce using rule 13 (statements)

    statements  go to state 104
    statement   go to state 44
    while       go to state 45
    ifCond      go to state 46
    var         go to state 47
    ident       go to state 48


State 75

   17 statement: while BEGINLOOP . statements M6 ENDLOOP

    READ      shift, and go to state 35
    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    RETURN    shift, and go to state 39
    CONTINUE  shift, and go to state 40
    WRITE     shift, and go to state 41
    FOREACH   shift, and go to state 42
    IDENT     shift, and go to state 12

    $default  reduce using rule 13 (statements)

    statements  go to state 105
    statement   go to state 44
    while       go to state 45
    ifCond      go to state 46
    var         go to state 47
    ident       go to state 48


State 76

   15 statement: ifCond statements . M4 ENDIF
   16          | ifCond statements . M3 ELSE statements M4 ENDIF

    ENDIF     reduce using rule 27 (M4)
    $default  reduce using rule 26 (M3)

    M3  go to state 106
    M4  go to state 107


State 77

   14 statement: var ASSIGN . expression

    L_PAREN  shift, and go to state 69
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 55
    SUB      shift, and go to state 56

    expression                 go to state 108
    multiplicative_expression  go to state 62
    term                       go to state 63
    terms                      go to state 64
    var                        go to state 65
    ident                      go to state 48
    number                     go to state 66


State 78

   64 var: ident L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    L_PAREN  shift, and go to state 69
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 55
    SUB      shift, and go to state 56

    expression                 go to state 109
    multiplicative_expression  go to state 62
    term                       go to state 63
    terms                      go to state 64
    var                        go to state 65
    ident                      go to state 48
    number                     go to state 66


State 79

   62 vars: var COMMA . vars

    IDENT  shift, and go to state 12

    vars   go to state 110
    var    go to state 51
    ident  go to state 48


State 80

   38 relation_exp: L_PAREN bool_exp . R_PAREN

    R_PAREN  shift, and go to state 111


State 81

   35 relation_exp: expression . comp expression
   46 expression: expression . ADD multiplicative_expression
   47           | expression . SUB multiplicative_expression
   57 terms: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 112
    ADD      shift, and go to state 89
    SUB      shift, and go to state 90
    LT       shift, and go to state 91
    LTE      shift, and go to state 92
    GT       shift, and go to state 93
    GTE      shift, and go to state 94
    EQ       shift, and go to state 95
    NEQ      shift, and go to state 96

    comp  go to state 97


State 82

   58 parenExpression: L_PAREN . expressions R_PAREN

    L_PAREN  shift, and go to state 69
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 55
    SUB      shift, and go to state 56

    expression                 go to state 113
    multiplicative_expression  go to state 62
    term                       go to state 63
    terms                      go to state 64
    expressions                go to state 114
    var                        go to state 65
    ident                      go to state 48
    number                     go to state 66


State 83

   54 term: IDENT parenExpression .

    $default  reduce using rule 54 (term)


State 84

   53 term: SUB terms .

    $default  reduce using rule 53 (term)


State 85

   34 relation_exp: NOT relation_exp .

    $default  reduce using rule 34 (relation_exp)


State 86

   25 ifCond: IF bool_exp THEN .

    $default  reduce using rule 25 (ifCond)


State 87

   31 bool_exp: relation_and_exp OR . relation_and_exp

    TRUE     shift, and go to state 52
    FALSE    shift, and go to state 53
    L_PAREN  shift, and go to state 54
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 55
    SUB      shift, and go to state 56
    NOT      shift, and go to state 57

    relation_and_exp           go to state 115
    relation_exp               go to state 60
    expression                 go to state 61
    multiplicative_expression  go to state 62
    term                       go to state 63
    terms                      go to state 64
    var                        go to state 65
    ident                      go to state 48
    number                     go to state 66


State 88

   33 relation_and_exp: relation_exp AND . relation_and_exp

    TRUE     shift, and go to state 52
    FALSE    shift, and go to state 53
    L_PAREN  shift, and go to state 54
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 55
    SUB      shift, and go to state 56
    NOT      shift, and go to state 57

    relation_and_exp           go to state 116
    relation_exp               go to state 60
    expression                 go to state 61
    multiplicative_expression  go to state 62
    term                       go to state 63
    terms                      go to state 64
    var                        go to state 65
    ident                      go to state 48
    number                     go to state 66


State 89

   46 expression: expression ADD . multiplicative_expression

    L_PAREN  shift, and go to state 69
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 55
    SUB      shift, and go to state 56

    multiplicative_expression  go to state 117
    term                       go to state 63
    terms                      go to state 64
    var                        go to state 65
    ident                      go to state 48
    number                     go to state 66


State 90

   47 expression: expression SUB . multiplicative_expression

    L_PAREN  shift, and go to state 69
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 55
    SUB      shift, and go to state 56

    multiplicative_expression  go to state 118
    term                       go to state 63
    terms                      go to state 64
    var                        go to state 65
    ident                      go to state 48
    number                     go to state 66


State 91

   41 comp: LT .

    $default  reduce using rule 41 (comp)


State 92

   43 comp: LTE .

    $default  reduce using rule 43 (comp)


State 93

   42 comp: GT .

    $default  reduce using rule 42 (comp)


State 94

   44 comp: GTE .

    $default  reduce using rule 44 (comp)


State 95

   39 comp: EQ .

    $default  reduce using rule 39 (comp)


State 96

   40 comp: NEQ .

    $default  reduce using rule 40 (comp)


State 97

   35 relation_exp: expression comp . expression

    L_PAREN  shift, and go to state 69
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 55
    SUB      shift, and go to state 56

    expression                 go to state 119
    multiplicative_expression  go to state 62
    term                       go to state 63
    terms                      go to state 64
    var                        go to state 65
    ident                      go to state 48
    number                     go to state 66


State 98

   49 multiplicative_expression: multiplicative_expression MULT . term

    L_PAREN  shift, and go to state 69
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 55
    SUB      shift, and go to state 56

    term    go to state 120
    terms   go to state 64
    var     go to state 65
    ident   go to state 48
    number  go to state 66


State 99

   50 multiplicative_expression: multiplicative_expression DIV . term

    L_PAREN  shift, and go to state 69
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 55
    SUB      shift, and go to state 56

    term    go to state 121
    terms   go to state 64
    var     go to state 65
    ident   go to state 48
    number  go to state 66


State 100

   51 multiplicative_expression: multiplicative_expression MOD . term

    L_PAREN  shift, and go to state 69
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 55
    SUB      shift, and go to state 56

    term    go to state 122
    terms   go to state 64
    var     go to state 65
    ident   go to state 48
    number  go to state 66


State 101

   18 statement: DO M10 BEGINLOOP . statements ENDLOOP WHILE bool_exp

    READ      shift, and go to state 35
    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    RETURN    shift, and go to state 39
    CONTINUE  shift, and go to state 40
    WRITE     shift, and go to state 41
    FOREACH   shift, and go to state 42
    IDENT     shift, and go to state 12

    $default  reduce using rule 13 (statements)

    statements  go to state 123
    statement   go to state 44
    while       go to state 45
    ifCond      go to state 46
    var         go to state 47
    ident       go to state 48


State 102

   46 expression: expression . ADD multiplicative_expression
   47           | expression . SUB multiplicative_expression
   57 terms: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 112
    ADD      shift, and go to state 89
    SUB      shift, and go to state 90


State 103

   19 statement: FOREACH ident IN . IDENT BEGINLOOP statements ENDLOOP

    IDENT  shift, and go to state 124


State 104

   12 statements: statement SEMICOLON statements .

    $default  reduce using rule 12 (statements)


State 105

   17 statement: while BEGINLOOP statements . M6 ENDLOOP

    $default  reduce using rule 28 (M6)

    M6  go to state 125


State 106

   16 statement: ifCond statements M3 . ELSE statements M4 ENDIF

    ELSE  shift, and go to state 126


State 107

   15 statement: ifCond statements M4 . ENDIF

    ENDIF  shift, and go to state 127


State 108

   14 statement: var ASSIGN expression .
   46 expression: expression . ADD multiplicative_expression
   47           | expression . SUB multiplicative_expression

    ADD  shift, and go to state 89
    SUB  shift, and go to state 90

    $default  reduce using rule 14 (statement)


State 109

   46 expression: expression . ADD multiplicative_expression
   47           | expression . SUB multiplicative_expression
   64 var: ident L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 128
    ADD               shift, and go to state 89
    SUB               shift, and go to state 90


State 110

   62 vars: var COMMA vars .

    $default  reduce using rule 62 (vars)


State 111

   38 relation_exp: L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 38 (relation_exp)


State 112

   57 terms: L_PAREN expression R_PAREN .

    $default  reduce using rule 57 (terms)


State 113

   46 expression: expression . ADD multiplicative_expression
   47           | expression . SUB multiplicative_expression
   59 expressions: expression .
   60            | expression . COMMA expressions

    COMMA  shift, and go to state 129
    ADD    shift, and go to state 89
    SUB    shift, and go to state 90

    $default  reduce using rule 59 (expressions)


State 114

   58 parenExpression: L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 130


State 115

   31 bool_exp: relation_and_exp OR relation_and_exp .

    $default  reduce using rule 31 (bool_exp)


State 116

   33 relation_and_exp: relation_exp AND relation_and_exp .

    $default  reduce using rule 33 (relation_and_exp)


State 117

   46 expression: expression ADD multiplicative_expression .
   49 multiplicative_expression: multiplicative_expression . MULT term
   50                          | multiplicative_expression . DIV term
   51                          | multiplicative_expression . MOD term

    MULT  shift, and go to state 98
    DIV   shift, and go to state 99
    MOD   shift, and go to state 100

    $default  reduce using rule 46 (expression)


State 118

   47 expression: expression SUB multiplicative_expression .
   49 multiplicative_expression: multiplicative_expression . MULT term
   50                          | multiplicative_expression . DIV term
   51                          | multiplicative_expression . MOD term

    MULT  shift, and go to state 98
    DIV   shift, and go to state 99
    MOD   shift, and go to state 100

    $default  reduce using rule 47 (expression)


State 119

   35 relation_exp: expression comp expression .
   46 expression: expression . ADD multiplicative_expression
   47           | expression . SUB multiplicative_expression

    ADD  shift, and go to state 89
    SUB  shift, and go to state 90

    $default  reduce using rule 35 (relation_exp)


State 120

   49 multiplicative_expression: multiplicative_expression MULT term .

    $default  reduce using rule 49 (multiplicative_expression)


State 121

   50 multiplicative_expression: multiplicative_expression DIV term .

    $default  reduce using rule 50 (multiplicative_expression)


State 122

   51 multiplicative_expression: multiplicative_expression MOD term .

    $default  reduce using rule 51 (multiplicative_expression)


State 123

   18 statement: DO M10 BEGINLOOP statements . ENDLOOP WHILE bool_exp

    ENDLOOP  shift, and go to state 131


State 124

   19 statement: FOREACH ident IN IDENT . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 132


State 125

   17 statement: while BEGINLOOP statements M6 . ENDLOOP

    ENDLOOP  shift, and go to state 133


State 126

   16 statement: ifCond statements M3 ELSE . statements M4 ENDIF

    READ      shift, and go to state 35
    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    RETURN    shift, and go to state 39
    CONTINUE  shift, and go to state 40
    WRITE     shift, and go to state 41
    FOREACH   shift, and go to state 42
    IDENT     shift, and go to state 12

    $default  reduce using rule 13 (statements)

    statements  go to state 134
    statement   go to state 44
    while       go to state 45
    ifCond      go to state 46
    var         go to state 47
    ident       go to state 48


State 127

   15 statement: ifCond statements M4 ENDIF .

    $default  reduce using rule 15 (statement)


State 128

   64 var: ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 64 (var)


State 129

   60 expressions: expression COMMA . expressions

    L_PAREN  shift, and go to state 69
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 55
    SUB      shift, and go to state 56

    expression                 go to state 113
    multiplicative_expression  go to state 62
    term                       go to state 63
    terms                      go to state 64
    expressions                go to state 135
    var                        go to state 65
    ident                      go to state 48
    number                     go to state 66


State 130

   58 parenExpression: L_PAREN expressions R_PAREN .

    $default  reduce using rule 58 (parenExpression)


State 131

   18 statement: DO M10 BEGINLOOP statements ENDLOOP . WHILE bool_exp

    WHILE  shift, and go to state 136


State 132

   19 statement: FOREACH ident IN IDENT BEGINLOOP . statements ENDLOOP

    READ      shift, and go to state 35
    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    RETURN    shift, and go to state 39
    CONTINUE  shift, and go to state 40
    WRITE     shift, and go to state 41
    FOREACH   shift, and go to state 42
    IDENT     shift, and go to state 12

    $default  reduce using rule 13 (statements)

    statements  go to state 137
    statement   go to state 44
    while       go to state 45
    ifCond      go to state 46
    var         go to state 47
    ident       go to state 48


State 133

   17 statement: while BEGINLOOP statements M6 ENDLOOP .

    $default  reduce using rule 17 (statement)


State 134

   16 statement: ifCond statements M3 ELSE statements . M4 ENDIF

    $default  reduce using rule 27 (M4)

    M4  go to state 138


State 135

   60 expressions: expression COMMA expressions .

    $default  reduce using rule 60 (expressions)


State 136

   18 statement: DO M10 BEGINLOOP statements ENDLOOP WHILE . bool_exp

    TRUE     shift, and go to state 52
    FALSE    shift, and go to state 53
    L_PAREN  shift, and go to state 54
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 55
    SUB      shift, and go to state 56
    NOT      shift, and go to state 57

    bool_exp                   go to state 139
    relation_and_exp           go to state 59
    relation_exp               go to state 60
    expression                 go to state 61
    multiplicative_expression  go to state 62
    term                       go to state 63
    terms                      go to state 64
    var                        go to state 65
    ident                      go to state 48
    number                     go to state 66


State 137

   19 statement: FOREACH ident IN IDENT BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 140


State 138

   16 statement: ifCond statements M3 ELSE statements M4 . ENDIF

    ENDIF  shift, and go to state 141


State 139

   18 statement: DO M10 BEGINLOOP statements ENDLOOP WHILE bool_exp .

    $default  reduce using rule 18 (statement)


State 140

   19 statement: FOREACH ident IN IDENT BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 19 (statement)


State 141

   16 statement: ifCond statements M3 ELSE statements M4 ENDIF .

    $default  reduce using rule 16 (statement)
