Grammar

    0 $accept: prog_start $end

    1 prog_start: functions

    2 functions: function functions
    3          | %empty

    4 function: funcName SEMICOLON M1 BEGIN_PARAMS declarations END_PARAMS M2 BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    5 funcName: FUNCTION IDENT

    6 M1: %empty

    7 M2: %empty

    8 declarations: declaration SEMICOLON declarations
    9             | %empty

   10 declaration: identifiers COLON INTEGER
   11            | identifiers COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER

   12 statements: statement SEMICOLON statements
   13           | %empty

   14 statement: var ASSIGN expression
   15          | ifCond statements M4 ENDIF
   16          | ifCond statements M3 ELSE statements M4 ENDIF
   17          | WHILE M6 bool_exp loop M7
   18          | DO M10 BEGINLOOP statements ENDLOOP M11 WHILE bool_exp
   19          | FOREACH ident IN IDENT loop
   20          | READ vars
   21          | WRITE vars
   22          | CONTINUE
   23          | RETURN expression

   24 ifCond: IF bool_exp THEN

   25 loop: BEGINLOOP statements ENDLOOP

   26 M3: %empty

   27 M4: %empty

   28 M6: %empty

   29 M7: %empty

   30 M10: %empty

   31 M11: %empty

   32 bool_exp: relation_and_exp
   33         | relation_and_exp OR relation_and_exp

   34 relation_and_exp: relation_exp
   35                 | relation_exp AND relation_and_exp

   36 relation_exp: NOT relation_exp
   37             | expression comp expression
   38             | TRUE
   39             | FALSE
   40             | L_PAREN bool_exp R_PAREN

   41 comp: EQ
   42     | NEQ
   43     | LT
   44     | GT
   45     | LTE
   46     | GTE

   47 expression: multiplicative_expression
   48           | expression ADD multiplicative_expression
   49           | expression SUB multiplicative_expression

   50 multiplicative_expression: term
   51                          | multiplicative_expression MULT term
   52                          | multiplicative_expression DIV term
   53                          | multiplicative_expression MOD term

   54 term: terms
   55     | SUB terms
   56     | IDENT parenExpression

   57 terms: number
   58      | var
   59      | L_PAREN expression R_PAREN

   60 parenExpression: L_PAREN expressions R_PAREN

   61 expressions: expression
   62            | expression COMMA expressions

   63 vars: var
   64     | var COMMA vars

   65 var: ident
   66    | ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET

   67 identifiers: ident
   68            | ident COMMA identifiers

   69 ident: IDENT

   70 number: NUMBER


Terminals, with rules where they appear

$end (0) 0
error (256)
FUNCTION (258) 5
INTEGER (259) 10 11
OF (260) 11
ARRAY (261) 11
READ (262) 20
IF (263) 24
THEN (264) 24
ENDIF (265) 15 16
ELSE (266) 16
WHILE (267) 17 18
DO (268) 18
BEGIN_PARAMS (269) 4
BEGIN_LOCALS (270) 4
BEGIN_BODY (271) 4
IN (272) 19
BEGINLOOP (273) 18 25
ENDLOOP (274) 18 25
RETURN (275) 23
END_PARAMS (276) 4
END_LOCALS (277) 4
END_BODY (278) 4
CONTINUE (279) 22
WRITE (280) 21
TRUE (281) 38
FALSE (282) 39
FOREACH (283) 19
SEMICOLON (284) 4 8 12
COLON (285) 10 11
COMMA (286) 62 64 68
L_PAREN (287) 40 59 60
R_PAREN (288) 40 59 60
L_SQUARE_BRACKET (289) 11 66
R_SQUARE_BRACKET (290) 11 66
NUMBER (291) 70
IDENT (292) 5 19 56 69
UMINUS (293)
MULT (294) 51
DIV (295) 52
MOD (296) 53
ADD (297) 48
SUB (298) 49 55
LT (299) 43
LTE (300) 45
GT (301) 44
GTE (302) 46
EQ (303) 41
NEQ (304) 42
NOT (305) 36
AND (306) 35
OR (307) 33
ASSIGN (308) 14


Nonterminals, with rules where they appear

$accept (54)
    on left: 0
prog_start (55)
    on left: 1, on right: 0
functions (56)
    on left: 2 3, on right: 1 2
function (57)
    on left: 4, on right: 2
funcName (58)
    on left: 5, on right: 4
M1 (59)
    on left: 6, on right: 4
M2 (60)
    on left: 7, on right: 4
declarations (61)
    on left: 8 9, on right: 4 8
declaration (62)
    on left: 10 11, on right: 8
statements (63)
    on left: 12 13, on right: 4 12 15 16 18 25
statement (64)
    on left: 14 15 16 17 18 19 20 21 22 23, on right: 12
ifCond (65)
    on left: 24, on right: 15 16
loop (66)
    on left: 25, on right: 17 19
M3 (67)
    on left: 26, on right: 16
M4 (68)
    on left: 27, on right: 15 16
M6 (69)
    on left: 28, on right: 17
M7 (70)
    on left: 29, on right: 17
M10 (71)
    on left: 30, on right: 18
M11 (72)
    on left: 31, on right: 18
bool_exp (73)
    on left: 32 33, on right: 17 18 24 40
relation_and_exp (74)
    on left: 34 35, on right: 32 33 35
relation_exp (75)
    on left: 36 37 38 39 40, on right: 34 35 36
comp (76)
    on left: 41 42 43 44 45 46, on right: 37
expression (77)
    on left: 47 48 49, on right: 14 23 37 48 49 59 61 62 66
multiplicative_expression (78)
    on left: 50 51 52 53, on right: 47 48 49 51 52 53
term (79)
    on left: 54 55 56, on right: 50 51 52 53
terms (80)
    on left: 57 58 59, on right: 54 55
parenExpression (81)
    on left: 60, on right: 56
expressions (82)
    on left: 61 62, on right: 60 62
vars (83)
    on left: 63 64, on right: 20 21 64
var (84)
    on left: 65 66, on right: 14 58 63 64
identifiers (85)
    on left: 67 68, on right: 10 11 68
ident (86)
    on left: 69, on right: 19 65 66 67 68
number (87)
    on left: 70, on right: 11 57


State 0

    0 $accept: . prog_start $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 3 (functions)

    prog_start  go to state 2
    functions   go to state 3
    function    go to state 4
    funcName    go to state 5


State 1

    5 funcName: FUNCTION . IDENT

    IDENT  shift, and go to state 6


State 2

    0 $accept: prog_start . $end

    $end  shift, and go to state 7


State 3

    1 prog_start: functions .

    $default  reduce using rule 1 (prog_start)


State 4

    2 functions: function . functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 3 (functions)

    functions  go to state 8
    function   go to state 4
    funcName   go to state 5


State 5

    4 function: funcName . SEMICOLON M1 BEGIN_PARAMS declarations END_PARAMS M2 BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    SEMICOLON  shift, and go to state 9


State 6

    5 funcName: FUNCTION IDENT .

    $default  reduce using rule 5 (funcName)


State 7

    0 $accept: prog_start $end .

    $default  accept


State 8

    2 functions: function functions .

    $default  reduce using rule 2 (functions)


State 9

    4 function: funcName SEMICOLON . M1 BEGIN_PARAMS declarations END_PARAMS M2 BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    $default  reduce using rule 6 (M1)

    M1  go to state 10


State 10

    4 function: funcName SEMICOLON M1 . BEGIN_PARAMS declarations END_PARAMS M2 BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_PARAMS  shift, and go to state 11


State 11

    4 function: funcName SEMICOLON M1 BEGIN_PARAMS . declarations END_PARAMS M2 BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 12

    $default  reduce using rule 9 (declarations)

    declarations  go to state 13
    declaration   go to state 14
    identifiers   go to state 15
    ident         go to state 16


State 12

   69 ident: IDENT .

    $default  reduce using rule 69 (ident)


State 13

    4 function: funcName SEMICOLON M1 BEGIN_PARAMS declarations . END_PARAMS M2 BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    END_PARAMS  shift, and go to state 17


State 14

    8 declarations: declaration . SEMICOLON declarations

    SEMICOLON  shift, and go to state 18


State 15

   10 declaration: identifiers . COLON INTEGER
   11            | identifiers . COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER

    COLON  shift, and go to state 19


State 16

   67 identifiers: ident .
   68            | ident . COMMA identifiers

    COMMA  shift, and go to state 20

    $default  reduce using rule 67 (identifiers)


State 17

    4 function: funcName SEMICOLON M1 BEGIN_PARAMS declarations END_PARAMS . M2 BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    $default  reduce using rule 7 (M2)

    M2  go to state 21


State 18

    8 declarations: declaration SEMICOLON . declarations

    IDENT  shift, and go to state 12

    $default  reduce using rule 9 (declarations)

    declarations  go to state 22
    declaration   go to state 14
    identifiers   go to state 15
    ident         go to state 16


State 19

   10 declaration: identifiers COLON . INTEGER
   11            | identifiers COLON . ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 23
    ARRAY    shift, and go to state 24


State 20

   68 identifiers: ident COMMA . identifiers

    IDENT  shift, and go to state 12

    identifiers  go to state 25
    ident        go to state 16


State 21

    4 function: funcName SEMICOLON M1 BEGIN_PARAMS declarations END_PARAMS M2 . BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 26


State 22

    8 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 8 (declarations)


State 23

   10 declaration: identifiers COLON INTEGER .

    $default  reduce using rule 10 (declaration)


State 24

   11 declaration: identifiers COLON ARRAY . L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 27


State 25

   68 identifiers: ident COMMA identifiers .

    $default  reduce using rule 68 (identifiers)


State 26

    4 function: funcName SEMICOLON M1 BEGIN_PARAMS declarations END_PARAMS M2 BEGIN_LOCALS . declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 12

    $default  reduce using rule 9 (declarations)

    declarations  go to state 28
    declaration   go to state 14
    identifiers   go to state 15
    ident         go to state 16


State 27

   11 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET . number R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 29

    number  go to state 30


State 28

    4 function: funcName SEMICOLON M1 BEGIN_PARAMS declarations END_PARAMS M2 BEGIN_LOCALS declarations . END_LOCALS BEGIN_BODY statements END_BODY

    END_LOCALS  shift, and go to state 31


State 29

   70 number: NUMBER .

    $default  reduce using rule 70 (number)


State 30

   11 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET number . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 32


State 31

    4 function: funcName SEMICOLON M1 BEGIN_PARAMS declarations END_PARAMS M2 BEGIN_LOCALS declarations END_LOCALS . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 33


State 32

   11 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 34


State 33

    4 function: funcName SEMICOLON M1 BEGIN_PARAMS declarations END_PARAMS M2 BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY . statements END_BODY

    READ      shift, and go to state 35
    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    RETURN    shift, and go to state 39
    CONTINUE  shift, and go to state 40
    WRITE     shift, and go to state 41
    FOREACH   shift, and go to state 42
    IDENT     shift, and go to state 12

    $default  reduce using rule 13 (statements)

    statements  go to state 43
    statement   go to state 44
    ifCond      go to state 45
    var         go to state 46
    ident       go to state 47


State 34

   11 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 48


State 35

   20 statement: READ . vars

    IDENT  shift, and go to state 12

    vars   go to state 49
    var    go to state 50
    ident  go to state 47


State 36

   24 ifCond: IF . bool_exp THEN

    TRUE     shift, and go to state 51
    FALSE    shift, and go to state 52
    L_PAREN  shift, and go to state 53
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 54
    SUB      shift, and go to state 55
    NOT      shift, and go to state 56

    bool_exp                   go to state 57
    relation_and_exp           go to state 58
    relation_exp               go to state 59
    expression                 go to state 60
    multiplicative_expression  go to state 61
    term                       go to state 62
    terms                      go to state 63
    var                        go to state 64
    ident                      go to state 47
    number                     go to state 65


State 37

   17 statement: WHILE . M6 bool_exp loop M7

    $default  reduce using rule 28 (M6)

    M6  go to state 66


State 38

   18 statement: DO . M10 BEGINLOOP statements ENDLOOP M11 WHILE bool_exp

    $default  reduce using rule 30 (M10)

    M10  go to state 67


State 39

   23 statement: RETURN . expression

    L_PAREN  shift, and go to state 68
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 54
    SUB      shift, and go to state 55

    expression                 go to state 69
    multiplicative_expression  go to state 61
    term                       go to state 62
    terms                      go to state 63
    var                        go to state 64
    ident                      go to state 47
    number                     go to state 65


State 40

   22 statement: CONTINUE .

    $default  reduce using rule 22 (statement)


State 41

   21 statement: WRITE . vars

    IDENT  shift, and go to state 12

    vars   go to state 70
    var    go to state 50
    ident  go to state 47


State 42

   19 statement: FOREACH . ident IN IDENT loop

    IDENT  shift, and go to state 12

    ident  go to state 71


State 43

    4 function: funcName SEMICOLON M1 BEGIN_PARAMS declarations END_PARAMS M2 BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements . END_BODY

    END_BODY  shift, and go to state 72


State 44

   12 statements: statement . SEMICOLON statements

    SEMICOLON  shift, and go to state 73


State 45

   15 statement: ifCond . statements M4 ENDIF
   16          | ifCond . statements M3 ELSE statements M4 ENDIF

    READ      shift, and go to state 35
    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    RETURN    shift, and go to state 39
    CONTINUE  shift, and go to state 40
    WRITE     shift, and go to state 41
    FOREACH   shift, and go to state 42
    IDENT     shift, and go to state 12

    $default  reduce using rule 13 (statements)

    statements  go to state 74
    statement   go to state 44
    ifCond      go to state 45
    var         go to state 46
    ident       go to state 47


State 46

   14 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 75


State 47

   65 var: ident .
   66    | ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 76

    $default  reduce using rule 65 (var)


State 48

   11 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 11 (declaration)


State 49

   20 statement: READ vars .

    $default  reduce using rule 20 (statement)


State 50

   63 vars: var .
   64     | var . COMMA vars

    COMMA  shift, and go to state 77

    $default  reduce using rule 63 (vars)


State 51

   38 relation_exp: TRUE .

    $default  reduce using rule 38 (relation_exp)


State 52

   39 relation_exp: FALSE .

    $default  reduce using rule 39 (relation_exp)


State 53

   40 relation_exp: L_PAREN . bool_exp R_PAREN
   59 terms: L_PAREN . expression R_PAREN

    TRUE     shift, and go to state 51
    FALSE    shift, and go to state 52
    L_PAREN  shift, and go to state 53
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 54
    SUB      shift, and go to state 55
    NOT      shift, and go to state 56

    bool_exp                   go to state 78
    relation_and_exp           go to state 58
    relation_exp               go to state 59
    expression                 go to state 79
    multiplicative_expression  go to state 61
    term                       go to state 62
    terms                      go to state 63
    var                        go to state 64
    ident                      go to state 47
    number                     go to state 65


State 54

   56 term: IDENT . parenExpression
   69 ident: IDENT .

    L_PAREN  shift, and go to state 80

    $default  reduce using rule 69 (ident)

    parenExpression  go to state 81


State 55

   55 term: SUB . terms

    L_PAREN  shift, and go to state 68
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 12

    terms   go to state 82
    var     go to state 64
    ident   go to state 47
    number  go to state 65


State 56

   36 relation_exp: NOT . relation_exp

    TRUE     shift, and go to state 51
    FALSE    shift, and go to state 52
    L_PAREN  shift, and go to state 53
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 54
    SUB      shift, and go to state 55
    NOT      shift, and go to state 56

    relation_exp               go to state 83
    expression                 go to state 60
    multiplicative_expression  go to state 61
    term                       go to state 62
    terms                      go to state 63
    var                        go to state 64
    ident                      go to state 47
    number                     go to state 65


State 57

   24 ifCond: IF bool_exp . THEN

    THEN  shift, and go to state 84


State 58

   32 bool_exp: relation_and_exp .
   33         | relation_and_exp . OR relation_and_exp

    OR  shift, and go to state 85

    $default  reduce using rule 32 (bool_exp)


State 59

   34 relation_and_exp: relation_exp .
   35                 | relation_exp . AND relation_and_exp

    AND  shift, and go to state 86

    $default  reduce using rule 34 (relation_and_exp)


State 60

   37 relation_exp: expression . comp expression
   48 expression: expression . ADD multiplicative_expression
   49           | expression . SUB multiplicative_expression

    ADD  shift, and go to state 87
    SUB  shift, and go to state 88
    LT   shift, and go to state 89
    LTE  shift, and go to state 90
    GT   shift, and go to state 91
    GTE  shift, and go to state 92
    EQ   shift, and go to state 93
    NEQ  shift, and go to state 94

    comp  go to state 95


State 61

   47 expression: multiplicative_expression .
   51 multiplicative_expression: multiplicative_expression . MULT term
   52                          | multiplicative_expression . DIV term
   53                          | multiplicative_expression . MOD term

    MULT  shift, and go to state 96
    DIV   shift, and go to state 97
    MOD   shift, and go to state 98

    $default  reduce using rule 47 (expression)


State 62

   50 multiplicative_expression: term .

    $default  reduce using rule 50 (multiplicative_expression)


State 63

   54 term: terms .

    $default  reduce using rule 54 (term)


State 64

   58 terms: var .

    $default  reduce using rule 58 (terms)


State 65

   57 terms: number .

    $default  reduce using rule 57 (terms)


State 66

   17 statement: WHILE M6 . bool_exp loop M7

    TRUE     shift, and go to state 51
    FALSE    shift, and go to state 52
    L_PAREN  shift, and go to state 53
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 54
    SUB      shift, and go to state 55
    NOT      shift, and go to state 56

    bool_exp                   go to state 99
    relation_and_exp           go to state 58
    relation_exp               go to state 59
    expression                 go to state 60
    multiplicative_expression  go to state 61
    term                       go to state 62
    terms                      go to state 63
    var                        go to state 64
    ident                      go to state 47
    number                     go to state 65


State 67

   18 statement: DO M10 . BEGINLOOP statements ENDLOOP M11 WHILE bool_exp

    BEGINLOOP  shift, and go to state 100


State 68

   59 terms: L_PAREN . expression R_PAREN

    L_PAREN  shift, and go to state 68
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 54
    SUB      shift, and go to state 55

    expression                 go to state 101
    multiplicative_expression  go to state 61
    term                       go to state 62
    terms                      go to state 63
    var                        go to state 64
    ident                      go to state 47
    number                     go to state 65


State 69

   23 statement: RETURN expression .
   48 expression: expression . ADD multiplicative_expression
   49           | expression . SUB multiplicative_expression

    ADD  shift, and go to state 87
    SUB  shift, and go to state 88

    $default  reduce using rule 23 (statement)


State 70

   21 statement: WRITE vars .

    $default  reduce using rule 21 (statement)


State 71

   19 statement: FOREACH ident . IN IDENT loop

    IN  shift, and go to state 102


State 72

    4 function: funcName SEMICOLON M1 BEGIN_PARAMS declarations END_PARAMS M2 BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY .

    $default  reduce using rule 4 (function)


State 73

   12 statements: statement SEMICOLON . statements

    READ      shift, and go to state 35
    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    RETURN    shift, and go to state 39
    CONTINUE  shift, and go to state 40
    WRITE     shift, and go to state 41
    FOREACH   shift, and go to state 42
    IDENT     shift, and go to state 12

    $default  reduce using rule 13 (statements)

    statements  go to state 103
    statement   go to state 44
    ifCond      go to state 45
    var         go to state 46
    ident       go to state 47


State 74

   15 statement: ifCond statements . M4 ENDIF
   16          | ifCond statements . M3 ELSE statements M4 ENDIF

    ENDIF     reduce using rule 27 (M4)
    $default  reduce using rule 26 (M3)

    M3  go to state 104
    M4  go to state 105


State 75

   14 statement: var ASSIGN . expression

    L_PAREN  shift, and go to state 68
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 54
    SUB      shift, and go to state 55

    expression                 go to state 106
    multiplicative_expression  go to state 61
    term                       go to state 62
    terms                      go to state 63
    var                        go to state 64
    ident                      go to state 47
    number                     go to state 65


State 76

   66 var: ident L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    L_PAREN  shift, and go to state 68
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 54
    SUB      shift, and go to state 55

    expression                 go to state 107
    multiplicative_expression  go to state 61
    term                       go to state 62
    terms                      go to state 63
    var                        go to state 64
    ident                      go to state 47
    number                     go to state 65


State 77

   64 vars: var COMMA . vars

    IDENT  shift, and go to state 12

    vars   go to state 108
    var    go to state 50
    ident  go to state 47


State 78

   40 relation_exp: L_PAREN bool_exp . R_PAREN

    R_PAREN  shift, and go to state 109


State 79

   37 relation_exp: expression . comp expression
   48 expression: expression . ADD multiplicative_expression
   49           | expression . SUB multiplicative_expression
   59 terms: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 110
    ADD      shift, and go to state 87
    SUB      shift, and go to state 88
    LT       shift, and go to state 89
    LTE      shift, and go to state 90
    GT       shift, and go to state 91
    GTE      shift, and go to state 92
    EQ       shift, and go to state 93
    NEQ      shift, and go to state 94

    comp  go to state 95


State 80

   60 parenExpression: L_PAREN . expressions R_PAREN

    L_PAREN  shift, and go to state 68
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 54
    SUB      shift, and go to state 55

    expression                 go to state 111
    multiplicative_expression  go to state 61
    term                       go to state 62
    terms                      go to state 63
    expressions                go to state 112
    var                        go to state 64
    ident                      go to state 47
    number                     go to state 65


State 81

   56 term: IDENT parenExpression .

    $default  reduce using rule 56 (term)


State 82

   55 term: SUB terms .

    $default  reduce using rule 55 (term)


State 83

   36 relation_exp: NOT relation_exp .

    $default  reduce using rule 36 (relation_exp)


State 84

   24 ifCond: IF bool_exp THEN .

    $default  reduce using rule 24 (ifCond)


State 85

   33 bool_exp: relation_and_exp OR . relation_and_exp

    TRUE     shift, and go to state 51
    FALSE    shift, and go to state 52
    L_PAREN  shift, and go to state 53
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 54
    SUB      shift, and go to state 55
    NOT      shift, and go to state 56

    relation_and_exp           go to state 113
    relation_exp               go to state 59
    expression                 go to state 60
    multiplicative_expression  go to state 61
    term                       go to state 62
    terms                      go to state 63
    var                        go to state 64
    ident                      go to state 47
    number                     go to state 65


State 86

   35 relation_and_exp: relation_exp AND . relation_and_exp

    TRUE     shift, and go to state 51
    FALSE    shift, and go to state 52
    L_PAREN  shift, and go to state 53
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 54
    SUB      shift, and go to state 55
    NOT      shift, and go to state 56

    relation_and_exp           go to state 114
    relation_exp               go to state 59
    expression                 go to state 60
    multiplicative_expression  go to state 61
    term                       go to state 62
    terms                      go to state 63
    var                        go to state 64
    ident                      go to state 47
    number                     go to state 65


State 87

   48 expression: expression ADD . multiplicative_expression

    L_PAREN  shift, and go to state 68
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 54
    SUB      shift, and go to state 55

    multiplicative_expression  go to state 115
    term                       go to state 62
    terms                      go to state 63
    var                        go to state 64
    ident                      go to state 47
    number                     go to state 65


State 88

   49 expression: expression SUB . multiplicative_expression

    L_PAREN  shift, and go to state 68
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 54
    SUB      shift, and go to state 55

    multiplicative_expression  go to state 116
    term                       go to state 62
    terms                      go to state 63
    var                        go to state 64
    ident                      go to state 47
    number                     go to state 65


State 89

   43 comp: LT .

    $default  reduce using rule 43 (comp)


State 90

   45 comp: LTE .

    $default  reduce using rule 45 (comp)


State 91

   44 comp: GT .

    $default  reduce using rule 44 (comp)


State 92

   46 comp: GTE .

    $default  reduce using rule 46 (comp)


State 93

   41 comp: EQ .

    $default  reduce using rule 41 (comp)


State 94

   42 comp: NEQ .

    $default  reduce using rule 42 (comp)


State 95

   37 relation_exp: expression comp . expression

    L_PAREN  shift, and go to state 68
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 54
    SUB      shift, and go to state 55

    expression                 go to state 117
    multiplicative_expression  go to state 61
    term                       go to state 62
    terms                      go to state 63
    var                        go to state 64
    ident                      go to state 47
    number                     go to state 65


State 96

   51 multiplicative_expression: multiplicative_expression MULT . term

    L_PAREN  shift, and go to state 68
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 54
    SUB      shift, and go to state 55

    term    go to state 118
    terms   go to state 63
    var     go to state 64
    ident   go to state 47
    number  go to state 65


State 97

   52 multiplicative_expression: multiplicative_expression DIV . term

    L_PAREN  shift, and go to state 68
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 54
    SUB      shift, and go to state 55

    term    go to state 119
    terms   go to state 63
    var     go to state 64
    ident   go to state 47
    number  go to state 65


State 98

   53 multiplicative_expression: multiplicative_expression MOD . term

    L_PAREN  shift, and go to state 68
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 54
    SUB      shift, and go to state 55

    term    go to state 120
    terms   go to state 63
    var     go to state 64
    ident   go to state 47
    number  go to state 65


State 99

   17 statement: WHILE M6 bool_exp . loop M7

    BEGINLOOP  shift, and go to state 121

    loop  go to state 122


State 100

   18 statement: DO M10 BEGINLOOP . statements ENDLOOP M11 WHILE bool_exp

    READ      shift, and go to state 35
    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    RETURN    shift, and go to state 39
    CONTINUE  shift, and go to state 40
    WRITE     shift, and go to state 41
    FOREACH   shift, and go to state 42
    IDENT     shift, and go to state 12

    $default  reduce using rule 13 (statements)

    statements  go to state 123
    statement   go to state 44
    ifCond      go to state 45
    var         go to state 46
    ident       go to state 47


State 101

   48 expression: expression . ADD multiplicative_expression
   49           | expression . SUB multiplicative_expression
   59 terms: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 110
    ADD      shift, and go to state 87
    SUB      shift, and go to state 88


State 102

   19 statement: FOREACH ident IN . IDENT loop

    IDENT  shift, and go to state 124


State 103

   12 statements: statement SEMICOLON statements .

    $default  reduce using rule 12 (statements)


State 104

   16 statement: ifCond statements M3 . ELSE statements M4 ENDIF

    ELSE  shift, and go to state 125


State 105

   15 statement: ifCond statements M4 . ENDIF

    ENDIF  shift, and go to state 126


State 106

   14 statement: var ASSIGN expression .
   48 expression: expression . ADD multiplicative_expression
   49           | expression . SUB multiplicative_expression

    ADD  shift, and go to state 87
    SUB  shift, and go to state 88

    $default  reduce using rule 14 (statement)


State 107

   48 expression: expression . ADD multiplicative_expression
   49           | expression . SUB multiplicative_expression
   66 var: ident L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 127
    ADD               shift, and go to state 87
    SUB               shift, and go to state 88


State 108

   64 vars: var COMMA vars .

    $default  reduce using rule 64 (vars)


State 109

   40 relation_exp: L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 40 (relation_exp)


State 110

   59 terms: L_PAREN expression R_PAREN .

    $default  reduce using rule 59 (terms)


State 111

   48 expression: expression . ADD multiplicative_expression
   49           | expression . SUB multiplicative_expression
   61 expressions: expression .
   62            | expression . COMMA expressions

    COMMA  shift, and go to state 128
    ADD    shift, and go to state 87
    SUB    shift, and go to state 88

    $default  reduce using rule 61 (expressions)


State 112

   60 parenExpression: L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 129


State 113

   33 bool_exp: relation_and_exp OR relation_and_exp .

    $default  reduce using rule 33 (bool_exp)


State 114

   35 relation_and_exp: relation_exp AND relation_and_exp .

    $default  reduce using rule 35 (relation_and_exp)


State 115

   48 expression: expression ADD multiplicative_expression .
   51 multiplicative_expression: multiplicative_expression . MULT term
   52                          | multiplicative_expression . DIV term
   53                          | multiplicative_expression . MOD term

    MULT  shift, and go to state 96
    DIV   shift, and go to state 97
    MOD   shift, and go to state 98

    $default  reduce using rule 48 (expression)


State 116

   49 expression: expression SUB multiplicative_expression .
   51 multiplicative_expression: multiplicative_expression . MULT term
   52                          | multiplicative_expression . DIV term
   53                          | multiplicative_expression . MOD term

    MULT  shift, and go to state 96
    DIV   shift, and go to state 97
    MOD   shift, and go to state 98

    $default  reduce using rule 49 (expression)


State 117

   37 relation_exp: expression comp expression .
   48 expression: expression . ADD multiplicative_expression
   49           | expression . SUB multiplicative_expression

    ADD  shift, and go to state 87
    SUB  shift, and go to state 88

    $default  reduce using rule 37 (relation_exp)


State 118

   51 multiplicative_expression: multiplicative_expression MULT term .

    $default  reduce using rule 51 (multiplicative_expression)


State 119

   52 multiplicative_expression: multiplicative_expression DIV term .

    $default  reduce using rule 52 (multiplicative_expression)


State 120

   53 multiplicative_expression: multiplicative_expression MOD term .

    $default  reduce using rule 53 (multiplicative_expression)


State 121

   25 loop: BEGINLOOP . statements ENDLOOP

    READ      shift, and go to state 35
    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    RETURN    shift, and go to state 39
    CONTINUE  shift, and go to state 40
    WRITE     shift, and go to state 41
    FOREACH   shift, and go to state 42
    IDENT     shift, and go to state 12

    $default  reduce using rule 13 (statements)

    statements  go to state 130
    statement   go to state 44
    ifCond      go to state 45
    var         go to state 46
    ident       go to state 47


State 122

   17 statement: WHILE M6 bool_exp loop . M7

    $default  reduce using rule 29 (M7)

    M7  go to state 131


State 123

   18 statement: DO M10 BEGINLOOP statements . ENDLOOP M11 WHILE bool_exp

    ENDLOOP  shift, and go to state 132


State 124

   19 statement: FOREACH ident IN IDENT . loop

    BEGINLOOP  shift, and go to state 121

    loop  go to state 133


State 125

   16 statement: ifCond statements M3 ELSE . statements M4 ENDIF

    READ      shift, and go to state 35
    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    RETURN    shift, and go to state 39
    CONTINUE  shift, and go to state 40
    WRITE     shift, and go to state 41
    FOREACH   shift, and go to state 42
    IDENT     shift, and go to state 12

    $default  reduce using rule 13 (statements)

    statements  go to state 134
    statement   go to state 44
    ifCond      go to state 45
    var         go to state 46
    ident       go to state 47


State 126

   15 statement: ifCond statements M4 ENDIF .

    $default  reduce using rule 15 (statement)


State 127

   66 var: ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 66 (var)


State 128

   62 expressions: expression COMMA . expressions

    L_PAREN  shift, and go to state 68
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 54
    SUB      shift, and go to state 55

    expression                 go to state 111
    multiplicative_expression  go to state 61
    term                       go to state 62
    terms                      go to state 63
    expressions                go to state 135
    var                        go to state 64
    ident                      go to state 47
    number                     go to state 65


State 129

   60 parenExpression: L_PAREN expressions R_PAREN .

    $default  reduce using rule 60 (parenExpression)


State 130

   25 loop: BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 136


State 131

   17 statement: WHILE M6 bool_exp loop M7 .

    $default  reduce using rule 17 (statement)


State 132

   18 statement: DO M10 BEGINLOOP statements ENDLOOP . M11 WHILE bool_exp

    $default  reduce using rule 31 (M11)

    M11  go to state 137


State 133

   19 statement: FOREACH ident IN IDENT loop .

    $default  reduce using rule 19 (statement)


State 134

   16 statement: ifCond statements M3 ELSE statements . M4 ENDIF

    $default  reduce using rule 27 (M4)

    M4  go to state 138


State 135

   62 expressions: expression COMMA expressions .

    $default  reduce using rule 62 (expressions)


State 136

   25 loop: BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 25 (loop)


State 137

   18 statement: DO M10 BEGINLOOP statements ENDLOOP M11 . WHILE bool_exp

    WHILE  shift, and go to state 139


State 138

   16 statement: ifCond statements M3 ELSE statements M4 . ENDIF

    ENDIF  shift, and go to state 140


State 139

   18 statement: DO M10 BEGINLOOP statements ENDLOOP M11 WHILE . bool_exp

    TRUE     shift, and go to state 51
    FALSE    shift, and go to state 52
    L_PAREN  shift, and go to state 53
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 54
    SUB      shift, and go to state 55
    NOT      shift, and go to state 56

    bool_exp                   go to state 141
    relation_and_exp           go to state 58
    relation_exp               go to state 59
    expression                 go to state 60
    multiplicative_expression  go to state 61
    term                       go to state 62
    terms                      go to state 63
    var                        go to state 64
    ident                      go to state 47
    number                     go to state 65


State 140

   16 statement: ifCond statements M3 ELSE statements M4 ENDIF .

    $default  reduce using rule 16 (statement)


State 141

   18 statement: DO M10 BEGINLOOP statements ENDLOOP M11 WHILE bool_exp .

    $default  reduce using rule 18 (statement)
