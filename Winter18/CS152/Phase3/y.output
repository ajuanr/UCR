Grammar

    0 $accept: prog_start $end

    1 prog_start: functions

    2 functions: function functions
    3          | %empty

    4 function: funcName SEMICOLON begin_params declarations end_params BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    5 funcName: FUNCTION IDENT

    6 begin_params: BEGIN_PARAMS

    7 end_params: END_PARAMS

    8 declarations: declaration SEMICOLON declarations
    9             | %empty

   10 declaration: identifiers COLON INTEGER
   11            | identifiers COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER
   12            | identifiers COLON ARRAY L_SQUARE_BRACKET error R_SQUARE_BRACKET OF INTEGER
   13            | identifiers COLON error

   14 statements: statement SEMICOLON statements
   15           | %empty

   16 statement: var ASSIGN expression
   17          | ifCond statements endif
   18          | ifCond statements else statements endif
   19          | while BEGINLOOP statements ENDLOOP
   20          | do BEGINLOOP statements ENDLOOP M8 WHILE bool_exp
   21          | foreach IN ident M5 BEGINLOOP statements ENDLOOP
   22          | READ vars
   23          | WRITE vars
   24          | CONTINUE
   25          | error
   26          | RETURN expression

   27 foreach: FOREACH ident

   28 while: WHILE bool_exp

   29 ifCond: IF bool_exp THEN

   30 else: ELSE

   31 endif: ENDIF

   32 M5: %empty

   33 do: DO

   34 M8: %empty

   35 bool_exp: relation_and_exp
   36         | relation_and_exp OR relation_and_exp

   37 relation_and_exp: relation_exp
   38                 | relation_exp AND relation_and_exp

   39 relation_exp: NOT relation_exp
   40             | expression comp expression
   41             | TRUE
   42             | FALSE
   43             | L_PAREN bool_exp R_PAREN

   44 comp: EQ
   45     | NEQ
   46     | LT
   47     | GT
   48     | LTE
   49     | GTE

   50 expression: multiplicative_expression
   51           | expression ADD multiplicative_expression
   52           | expression SUB multiplicative_expression

   53 multiplicative_expression: term
   54                          | multiplicative_expression MULT term
   55                          | multiplicative_expression DIV term
   56                          | multiplicative_expression MOD term

   57 term: terms
   58     | SUB terms
   59     | IDENT parenExpression
   60     | IDENT error

   61 terms: number
   62      | var
   63      | L_PAREN expression R_PAREN

   64 parenExpression: L_PAREN expressions R_PAREN

   65 expressions: expression
   66            | expression COMMA expressions

   67 vars: var
   68     | var COMMA vars

   69 var: ident
   70    | ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   71    | error
   72    | error L_SQUARE_BRACKET expression R_SQUARE_BRACKET

   73 identifiers: ident
   74            | ident COMMA identifiers

   75 ident: IDENT

   76 number: NUMBER


Terminals, with rules where they appear

$end (0) 0
error (256) 12 13 25 60 71 72
FUNCTION (258) 5
INTEGER (259) 10 11 12
OF (260) 11 12
ARRAY (261) 11 12
READ (262) 22
IF (263) 29
THEN (264) 29
ENDIF (265) 31
ELSE (266) 30
WHILE (267) 20 28
DO (268) 33
BEGIN_PARAMS (269) 6
BEGIN_LOCALS (270) 4
BEGIN_BODY (271) 4
IN (272) 21
BEGINLOOP (273) 19 20 21
ENDLOOP (274) 19 20 21
RETURN (275) 26
END_PARAMS (276) 7
END_LOCALS (277) 4
END_BODY (278) 4
CONTINUE (279) 24
WRITE (280) 23
TRUE (281) 41
FALSE (282) 42
FOREACH (283) 27
SEMICOLON (284) 4 8 14
COLON (285) 10 11 12 13
COMMA (286) 66 68 74
L_PAREN (287) 43 63 64
R_PAREN (288) 43 63 64
L_SQUARE_BRACKET (289) 11 12 70 72
R_SQUARE_BRACKET (290) 11 12 70 72
NUMBER (291) 76
IDENT (292) 5 59 60 75
UMINUS (293)
MULT (294) 54
DIV (295) 55
MOD (296) 56
ADD (297) 51
SUB (298) 52 58
LT (299) 46
LTE (300) 48
GT (301) 47
GTE (302) 49
EQ (303) 44
NEQ (304) 45
NOT (305) 39
AND (306) 38
OR (307) 36
ASSIGN (308) 16


Nonterminals, with rules where they appear

$accept (54)
    on left: 0
prog_start (55)
    on left: 1, on right: 0
functions (56)
    on left: 2 3, on right: 1 2
function (57)
    on left: 4, on right: 2
funcName (58)
    on left: 5, on right: 4
begin_params (59)
    on left: 6, on right: 4
end_params (60)
    on left: 7, on right: 4
declarations (61)
    on left: 8 9, on right: 4 8
declaration (62)
    on left: 10 11 12 13, on right: 8
statements (63)
    on left: 14 15, on right: 4 14 17 18 19 20 21
statement (64)
    on left: 16 17 18 19 20 21 22 23 24 25 26, on right: 14
foreach (65)
    on left: 27, on right: 21
while (66)
    on left: 28, on right: 19
ifCond (67)
    on left: 29, on right: 17 18
else (68)
    on left: 30, on right: 18
endif (69)
    on left: 31, on right: 17 18
M5 (70)
    on left: 32, on right: 21
do (71)
    on left: 33, on right: 20
M8 (72)
    on left: 34, on right: 20
bool_exp (73)
    on left: 35 36, on right: 20 28 29 43
relation_and_exp (74)
    on left: 37 38, on right: 35 36 38
relation_exp (75)
    on left: 39 40 41 42 43, on right: 37 38 39
comp (76)
    on left: 44 45 46 47 48 49, on right: 40
expression (77)
    on left: 50 51 52, on right: 16 26 40 51 52 63 65 66 70 72
multiplicative_expression (78)
    on left: 53 54 55 56, on right: 50 51 52 54 55 56
term (79)
    on left: 57 58 59 60, on right: 53 54 55 56
terms (80)
    on left: 61 62 63, on right: 57 58
parenExpression (81)
    on left: 64, on right: 59
expressions (82)
    on left: 65 66, on right: 64 66
vars (83)
    on left: 67 68, on right: 22 23 68
var (84)
    on left: 69 70 71 72, on right: 16 62 67 68
identifiers (85)
    on left: 73 74, on right: 10 11 12 13 74
ident (86)
    on left: 75, on right: 21 27 69 70 73 74
number (87)
    on left: 76, on right: 11 61


State 0

    0 $accept: . prog_start $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 3 (functions)

    prog_start  go to state 2
    functions   go to state 3
    function    go to state 4
    funcName    go to state 5


State 1

    5 funcName: FUNCTION . IDENT

    IDENT  shift, and go to state 6


State 2

    0 $accept: prog_start . $end

    $end  shift, and go to state 7


State 3

    1 prog_start: functions .

    $default  reduce using rule 1 (prog_start)


State 4

    2 functions: function . functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 3 (functions)

    functions  go to state 8
    function   go to state 4
    funcName   go to state 5


State 5

    4 function: funcName . SEMICOLON begin_params declarations end_params BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    SEMICOLON  shift, and go to state 9


State 6

    5 funcName: FUNCTION IDENT .

    $default  reduce using rule 5 (funcName)


State 7

    0 $accept: prog_start $end .

    $default  accept


State 8

    2 functions: function functions .

    $default  reduce using rule 2 (functions)


State 9

    4 function: funcName SEMICOLON . begin_params declarations end_params BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_PARAMS  shift, and go to state 10

    begin_params  go to state 11


State 10

    6 begin_params: BEGIN_PARAMS .

    $default  reduce using rule 6 (begin_params)


State 11

    4 function: funcName SEMICOLON begin_params . declarations end_params BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 12

    $default  reduce using rule 9 (declarations)

    declarations  go to state 13
    declaration   go to state 14
    identifiers   go to state 15
    ident         go to state 16


State 12

   75 ident: IDENT .

    $default  reduce using rule 75 (ident)


State 13

    4 function: funcName SEMICOLON begin_params declarations . end_params BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    END_PARAMS  shift, and go to state 17

    end_params  go to state 18


State 14

    8 declarations: declaration . SEMICOLON declarations

    SEMICOLON  shift, and go to state 19


State 15

   10 declaration: identifiers . COLON INTEGER
   11            | identifiers . COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER
   12            | identifiers . COLON ARRAY L_SQUARE_BRACKET error R_SQUARE_BRACKET OF INTEGER
   13            | identifiers . COLON error

    COLON  shift, and go to state 20


State 16

   73 identifiers: ident .
   74            | ident . COMMA identifiers

    COMMA  shift, and go to state 21

    $default  reduce using rule 73 (identifiers)


State 17

    7 end_params: END_PARAMS .

    $default  reduce using rule 7 (end_params)


State 18

    4 function: funcName SEMICOLON begin_params declarations end_params . BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 22


State 19

    8 declarations: declaration SEMICOLON . declarations

    IDENT  shift, and go to state 12

    $default  reduce using rule 9 (declarations)

    declarations  go to state 23
    declaration   go to state 14
    identifiers   go to state 15
    ident         go to state 16


State 20

   10 declaration: identifiers COLON . INTEGER
   11            | identifiers COLON . ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER
   12            | identifiers COLON . ARRAY L_SQUARE_BRACKET error R_SQUARE_BRACKET OF INTEGER
   13            | identifiers COLON . error

    error    shift, and go to state 24
    INTEGER  shift, and go to state 25
    ARRAY    shift, and go to state 26


State 21

   74 identifiers: ident COMMA . identifiers

    IDENT  shift, and go to state 12

    identifiers  go to state 27
    ident        go to state 16


State 22

    4 function: funcName SEMICOLON begin_params declarations end_params BEGIN_LOCALS . declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 12

    $default  reduce using rule 9 (declarations)

    declarations  go to state 28
    declaration   go to state 14
    identifiers   go to state 15
    ident         go to state 16


State 23

    8 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 8 (declarations)


State 24

   13 declaration: identifiers COLON error .

    $default  reduce using rule 13 (declaration)


State 25

   10 declaration: identifiers COLON INTEGER .

    $default  reduce using rule 10 (declaration)


State 26

   11 declaration: identifiers COLON ARRAY . L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER
   12            | identifiers COLON ARRAY . L_SQUARE_BRACKET error R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 29


State 27

   74 identifiers: ident COMMA identifiers .

    $default  reduce using rule 74 (identifiers)


State 28

    4 function: funcName SEMICOLON begin_params declarations end_params BEGIN_LOCALS declarations . END_LOCALS BEGIN_BODY statements END_BODY

    END_LOCALS  shift, and go to state 30


State 29

   11 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET . number R_SQUARE_BRACKET OF INTEGER
   12            | identifiers COLON ARRAY L_SQUARE_BRACKET . error R_SQUARE_BRACKET OF INTEGER

    error   shift, and go to state 31
    NUMBER  shift, and go to state 32

    number  go to state 33


State 30

    4 function: funcName SEMICOLON begin_params declarations end_params BEGIN_LOCALS declarations END_LOCALS . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 34


State 31

   12 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET error . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 35


State 32

   76 number: NUMBER .

    $default  reduce using rule 76 (number)


State 33

   11 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET number . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 36


State 34

    4 function: funcName SEMICOLON begin_params declarations end_params BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY . statements END_BODY

    error     shift, and go to state 37
    READ      shift, and go to state 38
    IF        shift, and go to state 39
    WHILE     shift, and go to state 40
    DO        shift, and go to state 41
    RETURN    shift, and go to state 42
    CONTINUE  shift, and go to state 43
    WRITE     shift, and go to state 44
    FOREACH   shift, and go to state 45
    IDENT     shift, and go to state 12

    END_BODY  reduce using rule 15 (statements)

    statements  go to state 46
    statement   go to state 47
    foreach     go to state 48
    while       go to state 49
    ifCond      go to state 50
    do          go to state 51
    var         go to state 52
    ident       go to state 53


State 35

   12 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET error R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 54


State 36

   11 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 55


State 37

   25 statement: error .
   71 var: error .
   72    | error . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 56

    ASSIGN    reduce using rule 71 (var)
    $default  reduce using rule 25 (statement)


State 38

   22 statement: READ . vars

    error  shift, and go to state 57
    IDENT  shift, and go to state 12

    vars   go to state 58
    var    go to state 59
    ident  go to state 53


State 39

   29 ifCond: IF . bool_exp THEN

    error    shift, and go to state 57
    TRUE     shift, and go to state 60
    FALSE    shift, and go to state 61
    L_PAREN  shift, and go to state 62
    NUMBER   shift, and go to state 32
    IDENT    shift, and go to state 63
    SUB      shift, and go to state 64
    NOT      shift, and go to state 65

    bool_exp                   go to state 66
    relation_and_exp           go to state 67
    relation_exp               go to state 68
    expression                 go to state 69
    multiplicative_expression  go to state 70
    term                       go to state 71
    terms                      go to state 72
    var                        go to state 73
    ident                      go to state 53
    number                     go to state 74


State 40

   28 while: WHILE . bool_exp

    error    shift, and go to state 57
    TRUE     shift, and go to state 60
    FALSE    shift, and go to state 61
    L_PAREN  shift, and go to state 62
    NUMBER   shift, and go to state 32
    IDENT    shift, and go to state 63
    SUB      shift, and go to state 64
    NOT      shift, and go to state 65

    bool_exp                   go to state 75
    relation_and_exp           go to state 67
    relation_exp               go to state 68
    expression                 go to state 69
    multiplicative_expression  go to state 70
    term                       go to state 71
    terms                      go to state 72
    var                        go to state 73
    ident                      go to state 53
    number                     go to state 74


State 41

   33 do: DO .

    $default  reduce using rule 33 (do)


State 42

   26 statement: RETURN . expression

    error    shift, and go to state 57
    L_PAREN  shift, and go to state 76
    NUMBER   shift, and go to state 32
    IDENT    shift, and go to state 63
    SUB      shift, and go to state 64

    expression                 go to state 77
    multiplicative_expression  go to state 70
    term                       go to state 71
    terms                      go to state 72
    var                        go to state 73
    ident                      go to state 53
    number                     go to state 74


State 43

   24 statement: CONTINUE .

    $default  reduce using rule 24 (statement)


State 44

   23 statement: WRITE . vars

    error  shift, and go to state 57
    IDENT  shift, and go to state 12

    vars   go to state 78
    var    go to state 59
    ident  go to state 53


State 45

   27 foreach: FOREACH . ident

    IDENT  shift, and go to state 12

    ident  go to state 79


State 46

    4 function: funcName SEMICOLON begin_params declarations end_params BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements . END_BODY

    END_BODY  shift, and go to state 80


State 47

   14 statements: statement . SEMICOLON statements

    SEMICOLON  shift, and go to state 81


State 48

   21 statement: foreach . IN ident M5 BEGINLOOP statements ENDLOOP

    IN  shift, and go to state 82


State 49

   19 statement: while . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 83


State 50

   17 statement: ifCond . statements endif
   18          | ifCond . statements else statements endif

    error     shift, and go to state 37
    READ      shift, and go to state 38
    IF        shift, and go to state 39
    WHILE     shift, and go to state 40
    DO        shift, and go to state 41
    RETURN    shift, and go to state 42
    CONTINUE  shift, and go to state 43
    WRITE     shift, and go to state 44
    FOREACH   shift, and go to state 45
    IDENT     shift, and go to state 12

    ENDIF  reduce using rule 15 (statements)
    ELSE   reduce using rule 15 (statements)

    statements  go to state 84
    statement   go to state 47
    foreach     go to state 48
    while       go to state 49
    ifCond      go to state 50
    do          go to state 51
    var         go to state 52
    ident       go to state 53


State 51

   20 statement: do . BEGINLOOP statements ENDLOOP M8 WHILE bool_exp

    BEGINLOOP  shift, and go to state 85


State 52

   16 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 86


State 53

   69 var: ident .
   70    | ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 87

    $default  reduce using rule 69 (var)


State 54

   12 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET error R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 88


State 55

   11 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 89


State 56

   72 var: error L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    error    shift, and go to state 57
    L_PAREN  shift, and go to state 76
    NUMBER   shift, and go to state 32
    IDENT    shift, and go to state 63
    SUB      shift, and go to state 64

    expression                 go to state 90
    multiplicative_expression  go to state 70
    term                       go to state 71
    terms                      go to state 72
    var                        go to state 73
    ident                      go to state 53
    number                     go to state 74


State 57

   71 var: error .
   72    | error . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 56

    $default  reduce using rule 71 (var)


State 58

   22 statement: READ vars .

    $default  reduce using rule 22 (statement)


State 59

   67 vars: var .
   68     | var . COMMA vars

    COMMA  shift, and go to state 91

    $default  reduce using rule 67 (vars)


State 60

   41 relation_exp: TRUE .

    $default  reduce using rule 41 (relation_exp)


State 61

   42 relation_exp: FALSE .

    $default  reduce using rule 42 (relation_exp)


State 62

   43 relation_exp: L_PAREN . bool_exp R_PAREN
   63 terms: L_PAREN . expression R_PAREN

    error    shift, and go to state 57
    TRUE     shift, and go to state 60
    FALSE    shift, and go to state 61
    L_PAREN  shift, and go to state 62
    NUMBER   shift, and go to state 32
    IDENT    shift, and go to state 63
    SUB      shift, and go to state 64
    NOT      shift, and go to state 65

    bool_exp                   go to state 92
    relation_and_exp           go to state 67
    relation_exp               go to state 68
    expression                 go to state 93
    multiplicative_expression  go to state 70
    term                       go to state 71
    terms                      go to state 72
    var                        go to state 73
    ident                      go to state 53
    number                     go to state 74


State 63

   59 term: IDENT . parenExpression
   60     | IDENT . error
   75 ident: IDENT .

    error    shift, and go to state 94
    L_PAREN  shift, and go to state 95

    THEN              reduce using rule 75 (ident)
    BEGINLOOP         reduce using rule 75 (ident)
    SEMICOLON         reduce using rule 75 (ident)
    COMMA             reduce using rule 75 (ident)
    R_PAREN           reduce using rule 75 (ident)
    L_SQUARE_BRACKET  reduce using rule 75 (ident)
    R_SQUARE_BRACKET  reduce using rule 75 (ident)
    MULT              reduce using rule 75 (ident)
    DIV               reduce using rule 75 (ident)
    MOD               reduce using rule 75 (ident)
    ADD               reduce using rule 75 (ident)
    SUB               reduce using rule 75 (ident)
    LT                reduce using rule 75 (ident)
    LTE               reduce using rule 75 (ident)
    GT                reduce using rule 75 (ident)
    GTE               reduce using rule 75 (ident)
    EQ                reduce using rule 75 (ident)
    NEQ               reduce using rule 75 (ident)
    AND               reduce using rule 75 (ident)
    OR                reduce using rule 75 (ident)

    parenExpression  go to state 96


State 64

   58 term: SUB . terms

    error    shift, and go to state 57
    L_PAREN  shift, and go to state 76
    NUMBER   shift, and go to state 32
    IDENT    shift, and go to state 12

    terms   go to state 97
    var     go to state 73
    ident   go to state 53
    number  go to state 74


State 65

   39 relation_exp: NOT . relation_exp

    error    shift, and go to state 57
    TRUE     shift, and go to state 60
    FALSE    shift, and go to state 61
    L_PAREN  shift, and go to state 62
    NUMBER   shift, and go to state 32
    IDENT    shift, and go to state 63
    SUB      shift, and go to state 64
    NOT      shift, and go to state 65

    relation_exp               go to state 98
    expression                 go to state 69
    multiplicative_expression  go to state 70
    term                       go to state 71
    terms                      go to state 72
    var                        go to state 73
    ident                      go to state 53
    number                     go to state 74


State 66

   29 ifCond: IF bool_exp . THEN

    THEN  shift, and go to state 99


State 67

   35 bool_exp: relation_and_exp .
   36         | relation_and_exp . OR relation_and_exp

    OR  shift, and go to state 100

    $default  reduce using rule 35 (bool_exp)


State 68

   37 relation_and_exp: relation_exp .
   38                 | relation_exp . AND relation_and_exp

    AND  shift, and go to state 101

    $default  reduce using rule 37 (relation_and_exp)


State 69

   40 relation_exp: expression . comp expression
   51 expression: expression . ADD multiplicative_expression
   52           | expression . SUB multiplicative_expression

    ADD  shift, and go to state 102
    SUB  shift, and go to state 103
    LT   shift, and go to state 104
    LTE  shift, and go to state 105
    GT   shift, and go to state 106
    GTE  shift, and go to state 107
    EQ   shift, and go to state 108
    NEQ  shift, and go to state 109

    comp  go to state 110


State 70

   50 expression: multiplicative_expression .
   54 multiplicative_expression: multiplicative_expression . MULT term
   55                          | multiplicative_expression . DIV term
   56                          | multiplicative_expression . MOD term

    MULT  shift, and go to state 111
    DIV   shift, and go to state 112
    MOD   shift, and go to state 113

    $default  reduce using rule 50 (expression)


State 71

   53 multiplicative_expression: term .

    $default  reduce using rule 53 (multiplicative_expression)


State 72

   57 term: terms .

    $default  reduce using rule 57 (term)


State 73

   62 terms: var .

    $default  reduce using rule 62 (terms)


State 74

   61 terms: number .

    $default  reduce using rule 61 (terms)


State 75

   28 while: WHILE bool_exp .

    $default  reduce using rule 28 (while)


State 76

   63 terms: L_PAREN . expression R_PAREN

    error    shift, and go to state 57
    L_PAREN  shift, and go to state 76
    NUMBER   shift, and go to state 32
    IDENT    shift, and go to state 63
    SUB      shift, and go to state 64

    expression                 go to state 114
    multiplicative_expression  go to state 70
    term                       go to state 71
    terms                      go to state 72
    var                        go to state 73
    ident                      go to state 53
    number                     go to state 74


State 77

   26 statement: RETURN expression .
   51 expression: expression . ADD multiplicative_expression
   52           | expression . SUB multiplicative_expression

    ADD  shift, and go to state 102
    SUB  shift, and go to state 103

    $default  reduce using rule 26 (statement)


State 78

   23 statement: WRITE vars .

    $default  reduce using rule 23 (statement)


State 79

   27 foreach: FOREACH ident .

    $default  reduce using rule 27 (foreach)


State 80

    4 function: funcName SEMICOLON begin_params declarations end_params BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY .

    $default  reduce using rule 4 (function)


State 81

   14 statements: statement SEMICOLON . statements

    error     shift, and go to state 37
    READ      shift, and go to state 38
    IF        shift, and go to state 39
    WHILE     shift, and go to state 40
    DO        shift, and go to state 41
    RETURN    shift, and go to state 42
    CONTINUE  shift, and go to state 43
    WRITE     shift, and go to state 44
    FOREACH   shift, and go to state 45
    IDENT     shift, and go to state 12

    ENDIF     reduce using rule 15 (statements)
    ELSE      reduce using rule 15 (statements)
    ENDLOOP   reduce using rule 15 (statements)
    END_BODY  reduce using rule 15 (statements)

    statements  go to state 115
    statement   go to state 47
    foreach     go to state 48
    while       go to state 49
    ifCond      go to state 50
    do          go to state 51
    var         go to state 52
    ident       go to state 53


State 82

   21 statement: foreach IN . ident M5 BEGINLOOP statements ENDLOOP

    IDENT  shift, and go to state 12

    ident  go to state 116


State 83

   19 statement: while BEGINLOOP . statements ENDLOOP

    error     shift, and go to state 37
    READ      shift, and go to state 38
    IF        shift, and go to state 39
    WHILE     shift, and go to state 40
    DO        shift, and go to state 41
    RETURN    shift, and go to state 42
    CONTINUE  shift, and go to state 43
    WRITE     shift, and go to state 44
    FOREACH   shift, and go to state 45
    IDENT     shift, and go to state 12

    ENDLOOP  reduce using rule 15 (statements)

    statements  go to state 117
    statement   go to state 47
    foreach     go to state 48
    while       go to state 49
    ifCond      go to state 50
    do          go to state 51
    var         go to state 52
    ident       go to state 53


State 84

   17 statement: ifCond statements . endif
   18          | ifCond statements . else statements endif

    ENDIF  shift, and go to state 118
    ELSE   shift, and go to state 119

    else   go to state 120
    endif  go to state 121


State 85

   20 statement: do BEGINLOOP . statements ENDLOOP M8 WHILE bool_exp

    error     shift, and go to state 37
    READ      shift, and go to state 38
    IF        shift, and go to state 39
    WHILE     shift, and go to state 40
    DO        shift, and go to state 41
    RETURN    shift, and go to state 42
    CONTINUE  shift, and go to state 43
    WRITE     shift, and go to state 44
    FOREACH   shift, and go to state 45
    IDENT     shift, and go to state 12

    ENDLOOP  reduce using rule 15 (statements)

    statements  go to state 122
    statement   go to state 47
    foreach     go to state 48
    while       go to state 49
    ifCond      go to state 50
    do          go to state 51
    var         go to state 52
    ident       go to state 53


State 86

   16 statement: var ASSIGN . expression

    error    shift, and go to state 57
    L_PAREN  shift, and go to state 76
    NUMBER   shift, and go to state 32
    IDENT    shift, and go to state 63
    SUB      shift, and go to state 64

    expression                 go to state 123
    multiplicative_expression  go to state 70
    term                       go to state 71
    terms                      go to state 72
    var                        go to state 73
    ident                      go to state 53
    number                     go to state 74


State 87

   70 var: ident L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    error    shift, and go to state 57
    L_PAREN  shift, and go to state 76
    NUMBER   shift, and go to state 32
    IDENT    shift, and go to state 63
    SUB      shift, and go to state 64

    expression                 go to state 124
    multiplicative_expression  go to state 70
    term                       go to state 71
    terms                      go to state 72
    var                        go to state 73
    ident                      go to state 53
    number                     go to state 74


State 88

   12 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET error R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 12 (declaration)


State 89

   11 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 11 (declaration)


State 90

   51 expression: expression . ADD multiplicative_expression
   52           | expression . SUB multiplicative_expression
   72 var: error L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 125
    ADD               shift, and go to state 102
    SUB               shift, and go to state 103


State 91

   68 vars: var COMMA . vars

    error  shift, and go to state 57
    IDENT  shift, and go to state 12

    vars   go to state 126
    var    go to state 59
    ident  go to state 53


State 92

   43 relation_exp: L_PAREN bool_exp . R_PAREN

    R_PAREN  shift, and go to state 127


State 93

   40 relation_exp: expression . comp expression
   51 expression: expression . ADD multiplicative_expression
   52           | expression . SUB multiplicative_expression
   63 terms: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 128
    ADD      shift, and go to state 102
    SUB      shift, and go to state 103
    LT       shift, and go to state 104
    LTE      shift, and go to state 105
    GT       shift, and go to state 106
    GTE      shift, and go to state 107
    EQ       shift, and go to state 108
    NEQ      shift, and go to state 109

    comp  go to state 110


State 94

   60 term: IDENT error .

    $default  reduce using rule 60 (term)


State 95

   64 parenExpression: L_PAREN . expressions R_PAREN

    error    shift, and go to state 57
    L_PAREN  shift, and go to state 76
    NUMBER   shift, and go to state 32
    IDENT    shift, and go to state 63
    SUB      shift, and go to state 64

    expression                 go to state 129
    multiplicative_expression  go to state 70
    term                       go to state 71
    terms                      go to state 72
    expressions                go to state 130
    var                        go to state 73
    ident                      go to state 53
    number                     go to state 74


State 96

   59 term: IDENT parenExpression .

    $default  reduce using rule 59 (term)


State 97

   58 term: SUB terms .

    $default  reduce using rule 58 (term)


State 98

   39 relation_exp: NOT relation_exp .

    $default  reduce using rule 39 (relation_exp)


State 99

   29 ifCond: IF bool_exp THEN .

    $default  reduce using rule 29 (ifCond)


State 100

   36 bool_exp: relation_and_exp OR . relation_and_exp

    error    shift, and go to state 57
    TRUE     shift, and go to state 60
    FALSE    shift, and go to state 61
    L_PAREN  shift, and go to state 62
    NUMBER   shift, and go to state 32
    IDENT    shift, and go to state 63
    SUB      shift, and go to state 64
    NOT      shift, and go to state 65

    relation_and_exp           go to state 131
    relation_exp               go to state 68
    expression                 go to state 69
    multiplicative_expression  go to state 70
    term                       go to state 71
    terms                      go to state 72
    var                        go to state 73
    ident                      go to state 53
    number                     go to state 74


State 101

   38 relation_and_exp: relation_exp AND . relation_and_exp

    error    shift, and go to state 57
    TRUE     shift, and go to state 60
    FALSE    shift, and go to state 61
    L_PAREN  shift, and go to state 62
    NUMBER   shift, and go to state 32
    IDENT    shift, and go to state 63
    SUB      shift, and go to state 64
    NOT      shift, and go to state 65

    relation_and_exp           go to state 132
    relation_exp               go to state 68
    expression                 go to state 69
    multiplicative_expression  go to state 70
    term                       go to state 71
    terms                      go to state 72
    var                        go to state 73
    ident                      go to state 53
    number                     go to state 74


State 102

   51 expression: expression ADD . multiplicative_expression

    error    shift, and go to state 57
    L_PAREN  shift, and go to state 76
    NUMBER   shift, and go to state 32
    IDENT    shift, and go to state 63
    SUB      shift, and go to state 64

    multiplicative_expression  go to state 133
    term                       go to state 71
    terms                      go to state 72
    var                        go to state 73
    ident                      go to state 53
    number                     go to state 74


State 103

   52 expression: expression SUB . multiplicative_expression

    error    shift, and go to state 57
    L_PAREN  shift, and go to state 76
    NUMBER   shift, and go to state 32
    IDENT    shift, and go to state 63
    SUB      shift, and go to state 64

    multiplicative_expression  go to state 134
    term                       go to state 71
    terms                      go to state 72
    var                        go to state 73
    ident                      go to state 53
    number                     go to state 74


State 104

   46 comp: LT .

    $default  reduce using rule 46 (comp)


State 105

   48 comp: LTE .

    $default  reduce using rule 48 (comp)


State 106

   47 comp: GT .

    $default  reduce using rule 47 (comp)


State 107

   49 comp: GTE .

    $default  reduce using rule 49 (comp)


State 108

   44 comp: EQ .

    $default  reduce using rule 44 (comp)


State 109

   45 comp: NEQ .

    $default  reduce using rule 45 (comp)


State 110

   40 relation_exp: expression comp . expression

    error    shift, and go to state 57
    L_PAREN  shift, and go to state 76
    NUMBER   shift, and go to state 32
    IDENT    shift, and go to state 63
    SUB      shift, and go to state 64

    expression                 go to state 135
    multiplicative_expression  go to state 70
    term                       go to state 71
    terms                      go to state 72
    var                        go to state 73
    ident                      go to state 53
    number                     go to state 74


State 111

   54 multiplicative_expression: multiplicative_expression MULT . term

    error    shift, and go to state 57
    L_PAREN  shift, and go to state 76
    NUMBER   shift, and go to state 32
    IDENT    shift, and go to state 63
    SUB      shift, and go to state 64

    term    go to state 136
    terms   go to state 72
    var     go to state 73
    ident   go to state 53
    number  go to state 74


State 112

   55 multiplicative_expression: multiplicative_expression DIV . term

    error    shift, and go to state 57
    L_PAREN  shift, and go to state 76
    NUMBER   shift, and go to state 32
    IDENT    shift, and go to state 63
    SUB      shift, and go to state 64

    term    go to state 137
    terms   go to state 72
    var     go to state 73
    ident   go to state 53
    number  go to state 74


State 113

   56 multiplicative_expression: multiplicative_expression MOD . term

    error    shift, and go to state 57
    L_PAREN  shift, and go to state 76
    NUMBER   shift, and go to state 32
    IDENT    shift, and go to state 63
    SUB      shift, and go to state 64

    term    go to state 138
    terms   go to state 72
    var     go to state 73
    ident   go to state 53
    number  go to state 74


State 114

   51 expression: expression . ADD multiplicative_expression
   52           | expression . SUB multiplicative_expression
   63 terms: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 128
    ADD      shift, and go to state 102
    SUB      shift, and go to state 103


State 115

   14 statements: statement SEMICOLON statements .

    $default  reduce using rule 14 (statements)


State 116

   21 statement: foreach IN ident . M5 BEGINLOOP statements ENDLOOP

    $default  reduce using rule 32 (M5)

    M5  go to state 139


State 117

   19 statement: while BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 140


State 118

   31 endif: ENDIF .

    $default  reduce using rule 31 (endif)


State 119

   30 else: ELSE .

    $default  reduce using rule 30 (else)


State 120

   18 statement: ifCond statements else . statements endif

    error     shift, and go to state 37
    READ      shift, and go to state 38
    IF        shift, and go to state 39
    WHILE     shift, and go to state 40
    DO        shift, and go to state 41
    RETURN    shift, and go to state 42
    CONTINUE  shift, and go to state 43
    WRITE     shift, and go to state 44
    FOREACH   shift, and go to state 45
    IDENT     shift, and go to state 12

    ENDIF  reduce using rule 15 (statements)

    statements  go to state 141
    statement   go to state 47
    foreach     go to state 48
    while       go to state 49
    ifCond      go to state 50
    do          go to state 51
    var         go to state 52
    ident       go to state 53


State 121

   17 statement: ifCond statements endif .

    $default  reduce using rule 17 (statement)


State 122

   20 statement: do BEGINLOOP statements . ENDLOOP M8 WHILE bool_exp

    ENDLOOP  shift, and go to state 142


State 123

   16 statement: var ASSIGN expression .
   51 expression: expression . ADD multiplicative_expression
   52           | expression . SUB multiplicative_expression

    ADD  shift, and go to state 102
    SUB  shift, and go to state 103

    $default  reduce using rule 16 (statement)


State 124

   51 expression: expression . ADD multiplicative_expression
   52           | expression . SUB multiplicative_expression
   70 var: ident L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 143
    ADD               shift, and go to state 102
    SUB               shift, and go to state 103


State 125

   72 var: error L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 72 (var)


State 126

   68 vars: var COMMA vars .

    $default  reduce using rule 68 (vars)


State 127

   43 relation_exp: L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 43 (relation_exp)


State 128

   63 terms: L_PAREN expression R_PAREN .

    $default  reduce using rule 63 (terms)


State 129

   51 expression: expression . ADD multiplicative_expression
   52           | expression . SUB multiplicative_expression
   65 expressions: expression .
   66            | expression . COMMA expressions

    COMMA  shift, and go to state 144
    ADD    shift, and go to state 102
    SUB    shift, and go to state 103

    $default  reduce using rule 65 (expressions)


State 130

   64 parenExpression: L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 145


State 131

   36 bool_exp: relation_and_exp OR relation_and_exp .

    $default  reduce using rule 36 (bool_exp)


State 132

   38 relation_and_exp: relation_exp AND relation_and_exp .

    $default  reduce using rule 38 (relation_and_exp)


State 133

   51 expression: expression ADD multiplicative_expression .
   54 multiplicative_expression: multiplicative_expression . MULT term
   55                          | multiplicative_expression . DIV term
   56                          | multiplicative_expression . MOD term

    MULT  shift, and go to state 111
    DIV   shift, and go to state 112
    MOD   shift, and go to state 113

    $default  reduce using rule 51 (expression)


State 134

   52 expression: expression SUB multiplicative_expression .
   54 multiplicative_expression: multiplicative_expression . MULT term
   55                          | multiplicative_expression . DIV term
   56                          | multiplicative_expression . MOD term

    MULT  shift, and go to state 111
    DIV   shift, and go to state 112
    MOD   shift, and go to state 113

    $default  reduce using rule 52 (expression)


State 135

   40 relation_exp: expression comp expression .
   51 expression: expression . ADD multiplicative_expression
   52           | expression . SUB multiplicative_expression

    ADD  shift, and go to state 102
    SUB  shift, and go to state 103

    $default  reduce using rule 40 (relation_exp)


State 136

   54 multiplicative_expression: multiplicative_expression MULT term .

    $default  reduce using rule 54 (multiplicative_expression)


State 137

   55 multiplicative_expression: multiplicative_expression DIV term .

    $default  reduce using rule 55 (multiplicative_expression)


State 138

   56 multiplicative_expression: multiplicative_expression MOD term .

    $default  reduce using rule 56 (multiplicative_expression)


State 139

   21 statement: foreach IN ident M5 . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 146


State 140

   19 statement: while BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 19 (statement)


State 141

   18 statement: ifCond statements else statements . endif

    ENDIF  shift, and go to state 118

    endif  go to state 147


State 142

   20 statement: do BEGINLOOP statements ENDLOOP . M8 WHILE bool_exp

    $default  reduce using rule 34 (M8)

    M8  go to state 148


State 143

   70 var: ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 70 (var)


State 144

   66 expressions: expression COMMA . expressions

    error    shift, and go to state 57
    L_PAREN  shift, and go to state 76
    NUMBER   shift, and go to state 32
    IDENT    shift, and go to state 63
    SUB      shift, and go to state 64

    expression                 go to state 129
    multiplicative_expression  go to state 70
    term                       go to state 71
    terms                      go to state 72
    expressions                go to state 149
    var                        go to state 73
    ident                      go to state 53
    number                     go to state 74


State 145

   64 parenExpression: L_PAREN expressions R_PAREN .

    $default  reduce using rule 64 (parenExpression)


State 146

   21 statement: foreach IN ident M5 BEGINLOOP . statements ENDLOOP

    error     shift, and go to state 37
    READ      shift, and go to state 38
    IF        shift, and go to state 39
    WHILE     shift, and go to state 40
    DO        shift, and go to state 41
    RETURN    shift, and go to state 42
    CONTINUE  shift, and go to state 43
    WRITE     shift, and go to state 44
    FOREACH   shift, and go to state 45
    IDENT     shift, and go to state 12

    ENDLOOP  reduce using rule 15 (statements)

    statements  go to state 150
    statement   go to state 47
    foreach     go to state 48
    while       go to state 49
    ifCond      go to state 50
    do          go to state 51
    var         go to state 52
    ident       go to state 53


State 147

   18 statement: ifCond statements else statements endif .

    $default  reduce using rule 18 (statement)


State 148

   20 statement: do BEGINLOOP statements ENDLOOP M8 . WHILE bool_exp

    WHILE  shift, and go to state 151


State 149

   66 expressions: expression COMMA expressions .

    $default  reduce using rule 66 (expressions)


State 150

   21 statement: foreach IN ident M5 BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 152


State 151

   20 statement: do BEGINLOOP statements ENDLOOP M8 WHILE . bool_exp

    error    shift, and go to state 57
    TRUE     shift, and go to state 60
    FALSE    shift, and go to state 61
    L_PAREN  shift, and go to state 62
    NUMBER   shift, and go to state 32
    IDENT    shift, and go to state 63
    SUB      shift, and go to state 64
    NOT      shift, and go to state 65

    bool_exp                   go to state 153
    relation_and_exp           go to state 67
    relation_exp               go to state 68
    expression                 go to state 69
    multiplicative_expression  go to state 70
    term                       go to state 71
    terms                      go to state 72
    var                        go to state 73
    ident                      go to state 53
    number                     go to state 74


State 152

   21 statement: foreach IN ident M5 BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 21 (statement)


State 153

   20 statement: do BEGINLOOP statements ENDLOOP M8 WHILE bool_exp .

    $default  reduce using rule 20 (statement)
