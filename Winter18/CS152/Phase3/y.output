Grammar

    0 $accept: prog_start $end

    1 prog_start: functions

    2 functions: function functions
    3          | %empty

    4 function: funcName SEMICOLON BEGIN_PARAMS M1 declarations END_PARAMS M2 BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY M

    5 funcName: FUNCTION IDENT

    6 M: %empty

    7 M1: %empty

    8 M2: %empty

    9 declarations: declaration SEMICOLON declarations
   10             | %empty

   11 declaration: identifiers COLON INTEGER
   12            | identifiers COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER

   13 statements: statement SEMICOLON statements
   14           | %empty

   15 statement: var ASSIGN expression
   16          | IF ifCond ENDIF
   17          | IF ifCond ELSE statements ENDIF
   18          | WHILE bool_exp loop
   19          | DO loop WHILE bool_exp
   20          | FOREACH IDENT IN IDENT loop
   21          | READ M8 vars
   22          | WRITE M9 vars
   23          | CONTINUE
   24          | RETURN expression

   25 M8: %empty

   26 M9: %empty

   27 ifCond: bool_exp THEN statements

   28 loop: BEGINLOOP statements ENDLOOP

   29 bool_exp: relation_and_exp
   30         | relation_and_exp OR relation_and_exp

   31 relation_and_exp: relation_exp
   32                 | relation_exp AND relation_and_exp

   33 relation_exp: NOT relation_exp
   34             | expression comp expression
   35             | TRUE
   36             | FALSE
   37             | L_PAREN bool_exp R_PAREN

   38 comp: EQ
   39     | NEQ
   40     | LT
   41     | GT
   42     | LTE
   43     | GTE

   44 expression: multiplicative_expression
   45           | expression ADD multiplicative_expression
   46           | expression SUB multiplicative_expression

   47 multiplicative_expression: term
   48                          | multiplicative_expression MULT term
   49                          | multiplicative_expression DIV term
   50                          | multiplicative_expression MOD term

   51 term: terms
   52     | SUB terms
   53     | IDENT parenExpression

   54 terms: number
   55      | var
   56      | L_PAREN expression R_PAREN

   57 parenExpression: L_PAREN expressions R_PAREN

   58 expressions: expression
   59            | expression COMMA expressions

   60 vars: var
   61     | var COMMA vars

   62 var: ident
   63    | ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET

   64 identifiers: ident
   65            | ident COMMA identifiers

   66 ident: IDENT

   67 number: NUMBER


Terminals, with rules where they appear

$end (0) 0
error (256)
FUNCTION (258) 5
INTEGER (259) 11 12
OF (260) 12
ARRAY (261) 12
READ (262) 21
IF (263) 16 17
THEN (264) 27
ENDIF (265) 16 17
ELSE (266) 17
WHILE (267) 18 19
DO (268) 19
BEGIN_PARAMS (269) 4
BEGIN_LOCALS (270) 4
BEGIN_BODY (271) 4
IN (272) 20
BEGINLOOP (273) 28
ENDLOOP (274) 28
RETURN (275) 24
END_PARAMS (276) 4
END_LOCALS (277) 4
END_BODY (278) 4
CONTINUE (279) 23
WRITE (280) 22
TRUE (281) 35
FALSE (282) 36
FOREACH (283) 20
SEMICOLON (284) 4 9 13
COLON (285) 11 12
COMMA (286) 59 61 65
L_PAREN (287) 37 56 57
R_PAREN (288) 37 56 57
L_SQUARE_BRACKET (289) 12 63
R_SQUARE_BRACKET (290) 12 63
NUMBER (291) 67
IDENT (292) 5 20 53 66
UMINUS (293)
MULT (294) 48
DIV (295) 49
MOD (296) 50
ADD (297) 45
SUB (298) 46 52
LT (299) 40
LTE (300) 42
GT (301) 41
GTE (302) 43
EQ (303) 38
NEQ (304) 39
NOT (305) 33
AND (306) 32
OR (307) 30
ASSIGN (308) 15


Nonterminals, with rules where they appear

$accept (54)
    on left: 0
prog_start (55)
    on left: 1, on right: 0
functions (56)
    on left: 2 3, on right: 1 2
function (57)
    on left: 4, on right: 2
funcName (58)
    on left: 5, on right: 4
M (59)
    on left: 6, on right: 4
M1 (60)
    on left: 7, on right: 4
M2 (61)
    on left: 8, on right: 4
declarations (62)
    on left: 9 10, on right: 4 9
declaration (63)
    on left: 11 12, on right: 9
statements (64)
    on left: 13 14, on right: 4 13 17 27 28
statement (65)
    on left: 15 16 17 18 19 20 21 22 23 24, on right: 13
M8 (66)
    on left: 25, on right: 21
M9 (67)
    on left: 26, on right: 22
ifCond (68)
    on left: 27, on right: 16 17
loop (69)
    on left: 28, on right: 18 19 20
bool_exp (70)
    on left: 29 30, on right: 18 19 27 37
relation_and_exp (71)
    on left: 31 32, on right: 29 30 32
relation_exp (72)
    on left: 33 34 35 36 37, on right: 31 32 33
comp (73)
    on left: 38 39 40 41 42 43, on right: 34
expression (74)
    on left: 44 45 46, on right: 15 24 34 45 46 56 58 59 63
multiplicative_expression (75)
    on left: 47 48 49 50, on right: 44 45 46 48 49 50
term (76)
    on left: 51 52 53, on right: 47 48 49 50
terms (77)
    on left: 54 55 56, on right: 51 52
parenExpression (78)
    on left: 57, on right: 53
expressions (79)
    on left: 58 59, on right: 57 59
vars (80)
    on left: 60 61, on right: 21 22 61
var (81)
    on left: 62 63, on right: 15 55 60 61
identifiers (82)
    on left: 64 65, on right: 11 12 65
ident (83)
    on left: 66, on right: 62 63 64 65
number (84)
    on left: 67, on right: 12 54


State 0

    0 $accept: . prog_start $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 3 (functions)

    prog_start  go to state 2
    functions   go to state 3
    function    go to state 4
    funcName    go to state 5


State 1

    5 funcName: FUNCTION . IDENT

    IDENT  shift, and go to state 6


State 2

    0 $accept: prog_start . $end

    $end  shift, and go to state 7


State 3

    1 prog_start: functions .

    $default  reduce using rule 1 (prog_start)


State 4

    2 functions: function . functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 3 (functions)

    functions  go to state 8
    function   go to state 4
    funcName   go to state 5


State 5

    4 function: funcName . SEMICOLON BEGIN_PARAMS M1 declarations END_PARAMS M2 BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY M

    SEMICOLON  shift, and go to state 9


State 6

    5 funcName: FUNCTION IDENT .

    $default  reduce using rule 5 (funcName)


State 7

    0 $accept: prog_start $end .

    $default  accept


State 8

    2 functions: function functions .

    $default  reduce using rule 2 (functions)


State 9

    4 function: funcName SEMICOLON . BEGIN_PARAMS M1 declarations END_PARAMS M2 BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY M

    BEGIN_PARAMS  shift, and go to state 10


State 10

    4 function: funcName SEMICOLON BEGIN_PARAMS . M1 declarations END_PARAMS M2 BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY M

    $default  reduce using rule 7 (M1)

    M1  go to state 11


State 11

    4 function: funcName SEMICOLON BEGIN_PARAMS M1 . declarations END_PARAMS M2 BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY M

    IDENT  shift, and go to state 12

    $default  reduce using rule 10 (declarations)

    declarations  go to state 13
    declaration   go to state 14
    identifiers   go to state 15
    ident         go to state 16


State 12

   66 ident: IDENT .

    $default  reduce using rule 66 (ident)


State 13

    4 function: funcName SEMICOLON BEGIN_PARAMS M1 declarations . END_PARAMS M2 BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY M

    END_PARAMS  shift, and go to state 17


State 14

    9 declarations: declaration . SEMICOLON declarations

    SEMICOLON  shift, and go to state 18


State 15

   11 declaration: identifiers . COLON INTEGER
   12            | identifiers . COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER

    COLON  shift, and go to state 19


State 16

   64 identifiers: ident .
   65            | ident . COMMA identifiers

    COMMA  shift, and go to state 20

    $default  reduce using rule 64 (identifiers)


State 17

    4 function: funcName SEMICOLON BEGIN_PARAMS M1 declarations END_PARAMS . M2 BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY M

    $default  reduce using rule 8 (M2)

    M2  go to state 21


State 18

    9 declarations: declaration SEMICOLON . declarations

    IDENT  shift, and go to state 12

    $default  reduce using rule 10 (declarations)

    declarations  go to state 22
    declaration   go to state 14
    identifiers   go to state 15
    ident         go to state 16


State 19

   11 declaration: identifiers COLON . INTEGER
   12            | identifiers COLON . ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 23
    ARRAY    shift, and go to state 24


State 20

   65 identifiers: ident COMMA . identifiers

    IDENT  shift, and go to state 12

    identifiers  go to state 25
    ident        go to state 16


State 21

    4 function: funcName SEMICOLON BEGIN_PARAMS M1 declarations END_PARAMS M2 . BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY M

    BEGIN_LOCALS  shift, and go to state 26


State 22

    9 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 9 (declarations)


State 23

   11 declaration: identifiers COLON INTEGER .

    $default  reduce using rule 11 (declaration)


State 24

   12 declaration: identifiers COLON ARRAY . L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 27


State 25

   65 identifiers: ident COMMA identifiers .

    $default  reduce using rule 65 (identifiers)


State 26

    4 function: funcName SEMICOLON BEGIN_PARAMS M1 declarations END_PARAMS M2 BEGIN_LOCALS . declarations END_LOCALS BEGIN_BODY statements END_BODY M

    IDENT  shift, and go to state 12

    $default  reduce using rule 10 (declarations)

    declarations  go to state 28
    declaration   go to state 14
    identifiers   go to state 15
    ident         go to state 16


State 27

   12 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET . number R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 29

    number  go to state 30


State 28

    4 function: funcName SEMICOLON BEGIN_PARAMS M1 declarations END_PARAMS M2 BEGIN_LOCALS declarations . END_LOCALS BEGIN_BODY statements END_BODY M

    END_LOCALS  shift, and go to state 31


State 29

   67 number: NUMBER .

    $default  reduce using rule 67 (number)


State 30

   12 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET number . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 32


State 31

    4 function: funcName SEMICOLON BEGIN_PARAMS M1 declarations END_PARAMS M2 BEGIN_LOCALS declarations END_LOCALS . BEGIN_BODY statements END_BODY M

    BEGIN_BODY  shift, and go to state 33


State 32

   12 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 34


State 33

    4 function: funcName SEMICOLON BEGIN_PARAMS M1 declarations END_PARAMS M2 BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY . statements END_BODY M

    READ      shift, and go to state 35
    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    RETURN    shift, and go to state 39
    CONTINUE  shift, and go to state 40
    WRITE     shift, and go to state 41
    FOREACH   shift, and go to state 42
    IDENT     shift, and go to state 12

    $default  reduce using rule 14 (statements)

    statements  go to state 43
    statement   go to state 44
    var         go to state 45
    ident       go to state 46


State 34

   12 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 47


State 35

   21 statement: READ . M8 vars

    $default  reduce using rule 25 (M8)

    M8  go to state 48


State 36

   16 statement: IF . ifCond ENDIF
   17          | IF . ifCond ELSE statements ENDIF

    TRUE     shift, and go to state 49
    FALSE    shift, and go to state 50
    L_PAREN  shift, and go to state 51
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 52
    SUB      shift, and go to state 53
    NOT      shift, and go to state 54

    ifCond                     go to state 55
    bool_exp                   go to state 56
    relation_and_exp           go to state 57
    relation_exp               go to state 58
    expression                 go to state 59
    multiplicative_expression  go to state 60
    term                       go to state 61
    terms                      go to state 62
    var                        go to state 63
    ident                      go to state 46
    number                     go to state 64


State 37

   18 statement: WHILE . bool_exp loop

    TRUE     shift, and go to state 49
    FALSE    shift, and go to state 50
    L_PAREN  shift, and go to state 51
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 52
    SUB      shift, and go to state 53
    NOT      shift, and go to state 54

    bool_exp                   go to state 65
    relation_and_exp           go to state 57
    relation_exp               go to state 58
    expression                 go to state 59
    multiplicative_expression  go to state 60
    term                       go to state 61
    terms                      go to state 62
    var                        go to state 63
    ident                      go to state 46
    number                     go to state 64


State 38

   19 statement: DO . loop WHILE bool_exp

    BEGINLOOP  shift, and go to state 66

    loop  go to state 67


State 39

   24 statement: RETURN . expression

    L_PAREN  shift, and go to state 68
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 52
    SUB      shift, and go to state 53

    expression                 go to state 69
    multiplicative_expression  go to state 60
    term                       go to state 61
    terms                      go to state 62
    var                        go to state 63
    ident                      go to state 46
    number                     go to state 64


State 40

   23 statement: CONTINUE .

    $default  reduce using rule 23 (statement)


State 41

   22 statement: WRITE . M9 vars

    $default  reduce using rule 26 (M9)

    M9  go to state 70


State 42

   20 statement: FOREACH . IDENT IN IDENT loop

    IDENT  shift, and go to state 71


State 43

    4 function: funcName SEMICOLON BEGIN_PARAMS M1 declarations END_PARAMS M2 BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements . END_BODY M

    END_BODY  shift, and go to state 72


State 44

   13 statements: statement . SEMICOLON statements

    SEMICOLON  shift, and go to state 73


State 45

   15 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 74


State 46

   62 var: ident .
   63    | ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 75

    $default  reduce using rule 62 (var)


State 47

   12 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 12 (declaration)


State 48

   21 statement: READ M8 . vars

    IDENT  shift, and go to state 12

    vars   go to state 76
    var    go to state 77
    ident  go to state 46


State 49

   35 relation_exp: TRUE .

    $default  reduce using rule 35 (relation_exp)


State 50

   36 relation_exp: FALSE .

    $default  reduce using rule 36 (relation_exp)


State 51

   37 relation_exp: L_PAREN . bool_exp R_PAREN
   56 terms: L_PAREN . expression R_PAREN

    TRUE     shift, and go to state 49
    FALSE    shift, and go to state 50
    L_PAREN  shift, and go to state 51
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 52
    SUB      shift, and go to state 53
    NOT      shift, and go to state 54

    bool_exp                   go to state 78
    relation_and_exp           go to state 57
    relation_exp               go to state 58
    expression                 go to state 79
    multiplicative_expression  go to state 60
    term                       go to state 61
    terms                      go to state 62
    var                        go to state 63
    ident                      go to state 46
    number                     go to state 64


State 52

   53 term: IDENT . parenExpression
   66 ident: IDENT .

    L_PAREN  shift, and go to state 80

    $default  reduce using rule 66 (ident)

    parenExpression  go to state 81


State 53

   52 term: SUB . terms

    L_PAREN  shift, and go to state 68
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 12

    terms   go to state 82
    var     go to state 63
    ident   go to state 46
    number  go to state 64


State 54

   33 relation_exp: NOT . relation_exp

    TRUE     shift, and go to state 49
    FALSE    shift, and go to state 50
    L_PAREN  shift, and go to state 51
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 52
    SUB      shift, and go to state 53
    NOT      shift, and go to state 54

    relation_exp               go to state 83
    expression                 go to state 59
    multiplicative_expression  go to state 60
    term                       go to state 61
    terms                      go to state 62
    var                        go to state 63
    ident                      go to state 46
    number                     go to state 64


State 55

   16 statement: IF ifCond . ENDIF
   17          | IF ifCond . ELSE statements ENDIF

    ENDIF  shift, and go to state 84
    ELSE   shift, and go to state 85


State 56

   27 ifCond: bool_exp . THEN statements

    THEN  shift, and go to state 86


State 57

   29 bool_exp: relation_and_exp .
   30         | relation_and_exp . OR relation_and_exp

    OR  shift, and go to state 87

    $default  reduce using rule 29 (bool_exp)


State 58

   31 relation_and_exp: relation_exp .
   32                 | relation_exp . AND relation_and_exp

    AND  shift, and go to state 88

    $default  reduce using rule 31 (relation_and_exp)


State 59

   34 relation_exp: expression . comp expression
   45 expression: expression . ADD multiplicative_expression
   46           | expression . SUB multiplicative_expression

    ADD  shift, and go to state 89
    SUB  shift, and go to state 90
    LT   shift, and go to state 91
    LTE  shift, and go to state 92
    GT   shift, and go to state 93
    GTE  shift, and go to state 94
    EQ   shift, and go to state 95
    NEQ  shift, and go to state 96

    comp  go to state 97


State 60

   44 expression: multiplicative_expression .
   48 multiplicative_expression: multiplicative_expression . MULT term
   49                          | multiplicative_expression . DIV term
   50                          | multiplicative_expression . MOD term

    MULT  shift, and go to state 98
    DIV   shift, and go to state 99
    MOD   shift, and go to state 100

    $default  reduce using rule 44 (expression)


State 61

   47 multiplicative_expression: term .

    $default  reduce using rule 47 (multiplicative_expression)


State 62

   51 term: terms .

    $default  reduce using rule 51 (term)


State 63

   55 terms: var .

    $default  reduce using rule 55 (terms)


State 64

   54 terms: number .

    $default  reduce using rule 54 (terms)


State 65

   18 statement: WHILE bool_exp . loop

    BEGINLOOP  shift, and go to state 66

    loop  go to state 101


State 66

   28 loop: BEGINLOOP . statements ENDLOOP

    READ      shift, and go to state 35
    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    RETURN    shift, and go to state 39
    CONTINUE  shift, and go to state 40
    WRITE     shift, and go to state 41
    FOREACH   shift, and go to state 42
    IDENT     shift, and go to state 12

    $default  reduce using rule 14 (statements)

    statements  go to state 102
    statement   go to state 44
    var         go to state 45
    ident       go to state 46


State 67

   19 statement: DO loop . WHILE bool_exp

    WHILE  shift, and go to state 103


State 68

   56 terms: L_PAREN . expression R_PAREN

    L_PAREN  shift, and go to state 68
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 52
    SUB      shift, and go to state 53

    expression                 go to state 104
    multiplicative_expression  go to state 60
    term                       go to state 61
    terms                      go to state 62
    var                        go to state 63
    ident                      go to state 46
    number                     go to state 64


State 69

   24 statement: RETURN expression .
   45 expression: expression . ADD multiplicative_expression
   46           | expression . SUB multiplicative_expression

    ADD  shift, and go to state 89
    SUB  shift, and go to state 90

    $default  reduce using rule 24 (statement)


State 70

   22 statement: WRITE M9 . vars

    IDENT  shift, and go to state 12

    vars   go to state 105
    var    go to state 77
    ident  go to state 46


State 71

   20 statement: FOREACH IDENT . IN IDENT loop

    IN  shift, and go to state 106


State 72

    4 function: funcName SEMICOLON BEGIN_PARAMS M1 declarations END_PARAMS M2 BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY . M

    $default  reduce using rule 6 (M)

    M  go to state 107


State 73

   13 statements: statement SEMICOLON . statements

    READ      shift, and go to state 35
    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    RETURN    shift, and go to state 39
    CONTINUE  shift, and go to state 40
    WRITE     shift, and go to state 41
    FOREACH   shift, and go to state 42
    IDENT     shift, and go to state 12

    $default  reduce using rule 14 (statements)

    statements  go to state 108
    statement   go to state 44
    var         go to state 45
    ident       go to state 46


State 74

   15 statement: var ASSIGN . expression

    L_PAREN  shift, and go to state 68
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 52
    SUB      shift, and go to state 53

    expression                 go to state 109
    multiplicative_expression  go to state 60
    term                       go to state 61
    terms                      go to state 62
    var                        go to state 63
    ident                      go to state 46
    number                     go to state 64


State 75

   63 var: ident L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    L_PAREN  shift, and go to state 68
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 52
    SUB      shift, and go to state 53

    expression                 go to state 110
    multiplicative_expression  go to state 60
    term                       go to state 61
    terms                      go to state 62
    var                        go to state 63
    ident                      go to state 46
    number                     go to state 64


State 76

   21 statement: READ M8 vars .

    $default  reduce using rule 21 (statement)


State 77

   60 vars: var .
   61     | var . COMMA vars

    COMMA  shift, and go to state 111

    $default  reduce using rule 60 (vars)


State 78

   37 relation_exp: L_PAREN bool_exp . R_PAREN

    R_PAREN  shift, and go to state 112


State 79

   34 relation_exp: expression . comp expression
   45 expression: expression . ADD multiplicative_expression
   46           | expression . SUB multiplicative_expression
   56 terms: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 113
    ADD      shift, and go to state 89
    SUB      shift, and go to state 90
    LT       shift, and go to state 91
    LTE      shift, and go to state 92
    GT       shift, and go to state 93
    GTE      shift, and go to state 94
    EQ       shift, and go to state 95
    NEQ      shift, and go to state 96

    comp  go to state 97


State 80

   57 parenExpression: L_PAREN . expressions R_PAREN

    L_PAREN  shift, and go to state 68
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 52
    SUB      shift, and go to state 53

    expression                 go to state 114
    multiplicative_expression  go to state 60
    term                       go to state 61
    terms                      go to state 62
    expressions                go to state 115
    var                        go to state 63
    ident                      go to state 46
    number                     go to state 64


State 81

   53 term: IDENT parenExpression .

    $default  reduce using rule 53 (term)


State 82

   52 term: SUB terms .

    $default  reduce using rule 52 (term)


State 83

   33 relation_exp: NOT relation_exp .

    $default  reduce using rule 33 (relation_exp)


State 84

   16 statement: IF ifCond ENDIF .

    $default  reduce using rule 16 (statement)


State 85

   17 statement: IF ifCond ELSE . statements ENDIF

    READ      shift, and go to state 35
    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    RETURN    shift, and go to state 39
    CONTINUE  shift, and go to state 40
    WRITE     shift, and go to state 41
    FOREACH   shift, and go to state 42
    IDENT     shift, and go to state 12

    $default  reduce using rule 14 (statements)

    statements  go to state 116
    statement   go to state 44
    var         go to state 45
    ident       go to state 46


State 86

   27 ifCond: bool_exp THEN . statements

    READ      shift, and go to state 35
    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    RETURN    shift, and go to state 39
    CONTINUE  shift, and go to state 40
    WRITE     shift, and go to state 41
    FOREACH   shift, and go to state 42
    IDENT     shift, and go to state 12

    $default  reduce using rule 14 (statements)

    statements  go to state 117
    statement   go to state 44
    var         go to state 45
    ident       go to state 46


State 87

   30 bool_exp: relation_and_exp OR . relation_and_exp

    TRUE     shift, and go to state 49
    FALSE    shift, and go to state 50
    L_PAREN  shift, and go to state 51
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 52
    SUB      shift, and go to state 53
    NOT      shift, and go to state 54

    relation_and_exp           go to state 118
    relation_exp               go to state 58
    expression                 go to state 59
    multiplicative_expression  go to state 60
    term                       go to state 61
    terms                      go to state 62
    var                        go to state 63
    ident                      go to state 46
    number                     go to state 64


State 88

   32 relation_and_exp: relation_exp AND . relation_and_exp

    TRUE     shift, and go to state 49
    FALSE    shift, and go to state 50
    L_PAREN  shift, and go to state 51
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 52
    SUB      shift, and go to state 53
    NOT      shift, and go to state 54

    relation_and_exp           go to state 119
    relation_exp               go to state 58
    expression                 go to state 59
    multiplicative_expression  go to state 60
    term                       go to state 61
    terms                      go to state 62
    var                        go to state 63
    ident                      go to state 46
    number                     go to state 64


State 89

   45 expression: expression ADD . multiplicative_expression

    L_PAREN  shift, and go to state 68
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 52
    SUB      shift, and go to state 53

    multiplicative_expression  go to state 120
    term                       go to state 61
    terms                      go to state 62
    var                        go to state 63
    ident                      go to state 46
    number                     go to state 64


State 90

   46 expression: expression SUB . multiplicative_expression

    L_PAREN  shift, and go to state 68
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 52
    SUB      shift, and go to state 53

    multiplicative_expression  go to state 121
    term                       go to state 61
    terms                      go to state 62
    var                        go to state 63
    ident                      go to state 46
    number                     go to state 64


State 91

   40 comp: LT .

    $default  reduce using rule 40 (comp)


State 92

   42 comp: LTE .

    $default  reduce using rule 42 (comp)


State 93

   41 comp: GT .

    $default  reduce using rule 41 (comp)


State 94

   43 comp: GTE .

    $default  reduce using rule 43 (comp)


State 95

   38 comp: EQ .

    $default  reduce using rule 38 (comp)


State 96

   39 comp: NEQ .

    $default  reduce using rule 39 (comp)


State 97

   34 relation_exp: expression comp . expression

    L_PAREN  shift, and go to state 68
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 52
    SUB      shift, and go to state 53

    expression                 go to state 122
    multiplicative_expression  go to state 60
    term                       go to state 61
    terms                      go to state 62
    var                        go to state 63
    ident                      go to state 46
    number                     go to state 64


State 98

   48 multiplicative_expression: multiplicative_expression MULT . term

    L_PAREN  shift, and go to state 68
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 52
    SUB      shift, and go to state 53

    term    go to state 123
    terms   go to state 62
    var     go to state 63
    ident   go to state 46
    number  go to state 64


State 99

   49 multiplicative_expression: multiplicative_expression DIV . term

    L_PAREN  shift, and go to state 68
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 52
    SUB      shift, and go to state 53

    term    go to state 124
    terms   go to state 62
    var     go to state 63
    ident   go to state 46
    number  go to state 64


State 100

   50 multiplicative_expression: multiplicative_expression MOD . term

    L_PAREN  shift, and go to state 68
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 52
    SUB      shift, and go to state 53

    term    go to state 125
    terms   go to state 62
    var     go to state 63
    ident   go to state 46
    number  go to state 64


State 101

   18 statement: WHILE bool_exp loop .

    $default  reduce using rule 18 (statement)


State 102

   28 loop: BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 126


State 103

   19 statement: DO loop WHILE . bool_exp

    TRUE     shift, and go to state 49
    FALSE    shift, and go to state 50
    L_PAREN  shift, and go to state 51
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 52
    SUB      shift, and go to state 53
    NOT      shift, and go to state 54

    bool_exp                   go to state 127
    relation_and_exp           go to state 57
    relation_exp               go to state 58
    expression                 go to state 59
    multiplicative_expression  go to state 60
    term                       go to state 61
    terms                      go to state 62
    var                        go to state 63
    ident                      go to state 46
    number                     go to state 64


State 104

   45 expression: expression . ADD multiplicative_expression
   46           | expression . SUB multiplicative_expression
   56 terms: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 113
    ADD      shift, and go to state 89
    SUB      shift, and go to state 90


State 105

   22 statement: WRITE M9 vars .

    $default  reduce using rule 22 (statement)


State 106

   20 statement: FOREACH IDENT IN . IDENT loop

    IDENT  shift, and go to state 128


State 107

    4 function: funcName SEMICOLON BEGIN_PARAMS M1 declarations END_PARAMS M2 BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY M .

    $default  reduce using rule 4 (function)


State 108

   13 statements: statement SEMICOLON statements .

    $default  reduce using rule 13 (statements)


State 109

   15 statement: var ASSIGN expression .
   45 expression: expression . ADD multiplicative_expression
   46           | expression . SUB multiplicative_expression

    ADD  shift, and go to state 89
    SUB  shift, and go to state 90

    $default  reduce using rule 15 (statement)


State 110

   45 expression: expression . ADD multiplicative_expression
   46           | expression . SUB multiplicative_expression
   63 var: ident L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 129
    ADD               shift, and go to state 89
    SUB               shift, and go to state 90


State 111

   61 vars: var COMMA . vars

    IDENT  shift, and go to state 12

    vars   go to state 130
    var    go to state 77
    ident  go to state 46


State 112

   37 relation_exp: L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 37 (relation_exp)


State 113

   56 terms: L_PAREN expression R_PAREN .

    $default  reduce using rule 56 (terms)


State 114

   45 expression: expression . ADD multiplicative_expression
   46           | expression . SUB multiplicative_expression
   58 expressions: expression .
   59            | expression . COMMA expressions

    COMMA  shift, and go to state 131
    ADD    shift, and go to state 89
    SUB    shift, and go to state 90

    $default  reduce using rule 58 (expressions)


State 115

   57 parenExpression: L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 132


State 116

   17 statement: IF ifCond ELSE statements . ENDIF

    ENDIF  shift, and go to state 133


State 117

   27 ifCond: bool_exp THEN statements .

    $default  reduce using rule 27 (ifCond)


State 118

   30 bool_exp: relation_and_exp OR relation_and_exp .

    $default  reduce using rule 30 (bool_exp)


State 119

   32 relation_and_exp: relation_exp AND relation_and_exp .

    $default  reduce using rule 32 (relation_and_exp)


State 120

   45 expression: expression ADD multiplicative_expression .
   48 multiplicative_expression: multiplicative_expression . MULT term
   49                          | multiplicative_expression . DIV term
   50                          | multiplicative_expression . MOD term

    MULT  shift, and go to state 98
    DIV   shift, and go to state 99
    MOD   shift, and go to state 100

    $default  reduce using rule 45 (expression)


State 121

   46 expression: expression SUB multiplicative_expression .
   48 multiplicative_expression: multiplicative_expression . MULT term
   49                          | multiplicative_expression . DIV term
   50                          | multiplicative_expression . MOD term

    MULT  shift, and go to state 98
    DIV   shift, and go to state 99
    MOD   shift, and go to state 100

    $default  reduce using rule 46 (expression)


State 122

   34 relation_exp: expression comp expression .
   45 expression: expression . ADD multiplicative_expression
   46           | expression . SUB multiplicative_expression

    ADD  shift, and go to state 89
    SUB  shift, and go to state 90

    $default  reduce using rule 34 (relation_exp)


State 123

   48 multiplicative_expression: multiplicative_expression MULT term .

    $default  reduce using rule 48 (multiplicative_expression)


State 124

   49 multiplicative_expression: multiplicative_expression DIV term .

    $default  reduce using rule 49 (multiplicative_expression)


State 125

   50 multiplicative_expression: multiplicative_expression MOD term .

    $default  reduce using rule 50 (multiplicative_expression)


State 126

   28 loop: BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 28 (loop)


State 127

   19 statement: DO loop WHILE bool_exp .

    $default  reduce using rule 19 (statement)


State 128

   20 statement: FOREACH IDENT IN IDENT . loop

    BEGINLOOP  shift, and go to state 66

    loop  go to state 134


State 129

   63 var: ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 63 (var)


State 130

   61 vars: var COMMA vars .

    $default  reduce using rule 61 (vars)


State 131

   59 expressions: expression COMMA . expressions

    L_PAREN  shift, and go to state 68
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 52
    SUB      shift, and go to state 53

    expression                 go to state 114
    multiplicative_expression  go to state 60
    term                       go to state 61
    terms                      go to state 62
    expressions                go to state 135
    var                        go to state 63
    ident                      go to state 46
    number                     go to state 64


State 132

   57 parenExpression: L_PAREN expressions R_PAREN .

    $default  reduce using rule 57 (parenExpression)


State 133

   17 statement: IF ifCond ELSE statements ENDIF .

    $default  reduce using rule 17 (statement)


State 134

   20 statement: FOREACH IDENT IN IDENT loop .

    $default  reduce using rule 20 (statement)


State 135

   59 expressions: expression COMMA expressions .

    $default  reduce using rule 59 (expressions)
