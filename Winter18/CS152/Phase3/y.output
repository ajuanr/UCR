Grammar

    0 $accept: prog_start $end

    1 prog_start: functions

    2 functions: function functions
    3          | %empty

    4 function: funcName SEMICOLON M1 BEGIN_PARAMS declarations END_PARAMS M2 BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    5 funcName: FUNCTION IDENT

    6 M1: %empty

    7 M2: %empty

    8 declarations: declaration SEMICOLON declarations
    9             | %empty

   10 declaration: identifiers COLON INTEGER
   11            | identifiers COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER

   12 statements: statement SEMICOLON statements
   13           | %empty

   14 statement: var ASSIGN expression
   15          | ifCond statements ENDIF M4
   16          | ifCond statements M3 ELSE statements ENDIF M4
   17          | M11 while BEGINLOOP statements M6 ENDLOOP
   18          | DO M7 BEGINLOOP statements ENDLOOP M8 WHILE bool_exp
   19          | foreach IN ident M5 BEGINLOOP statements ENDLOOP
   20          | READ vars
   21          | WRITE vars
   22          | CONTINUE
   23          | RETURN expression

   24 foreach: FOREACH ident

   25 M11: %empty

   26 while: WHILE bool_exp

   27 ifCond: IF bool_exp THEN

   28 M3: %empty

   29 M4: %empty

   30 M5: %empty

   31 M6: %empty

   32 M7: %empty

   33 M8: %empty

   34 bool_exp: relation_and_exp
   35         | relation_and_exp OR relation_and_exp

   36 relation_and_exp: relation_exp
   37                 | relation_exp AND relation_and_exp

   38 relation_exp: NOT relation_exp
   39             | expression comp expression
   40             | TRUE
   41             | FALSE
   42             | L_PAREN bool_exp R_PAREN

   43 comp: EQ
   44     | NEQ
   45     | LT
   46     | GT
   47     | LTE
   48     | GTE

   49 expression: multiplicative_expression
   50           | expression ADD multiplicative_expression
   51           | expression SUB multiplicative_expression

   52 multiplicative_expression: term
   53                          | multiplicative_expression MULT term
   54                          | multiplicative_expression DIV term
   55                          | multiplicative_expression MOD term

   56 term: terms
   57     | SUB terms
   58     | IDENT parenExpression

   59 terms: number
   60      | var
   61      | L_PAREN expression R_PAREN

   62 parenExpression: L_PAREN expressions R_PAREN

   63 expressions: expression
   64            | expression COMMA expressions

   65 vars: var
   66     | var COMMA vars

   67 var: ident
   68    | ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET

   69 identifiers: ident
   70            | ident COMMA identifiers

   71 ident: IDENT

   72 number: NUMBER


Terminals, with rules where they appear

$end (0) 0
error (256)
FUNCTION (258) 5
INTEGER (259) 10 11
OF (260) 11
ARRAY (261) 11
READ (262) 20
IF (263) 27
THEN (264) 27
ENDIF (265) 15 16
ELSE (266) 16
WHILE (267) 18 26
DO (268) 18
BEGIN_PARAMS (269) 4
BEGIN_LOCALS (270) 4
BEGIN_BODY (271) 4
IN (272) 19
BEGINLOOP (273) 17 18 19
ENDLOOP (274) 17 18 19
RETURN (275) 23
END_PARAMS (276) 4
END_LOCALS (277) 4
END_BODY (278) 4
CONTINUE (279) 22
WRITE (280) 21
TRUE (281) 40
FALSE (282) 41
FOREACH (283) 24
SEMICOLON (284) 4 8 12
COLON (285) 10 11
COMMA (286) 64 66 70
L_PAREN (287) 42 61 62
R_PAREN (288) 42 61 62
L_SQUARE_BRACKET (289) 11 68
R_SQUARE_BRACKET (290) 11 68
NUMBER (291) 72
IDENT (292) 5 58 71
UMINUS (293)
MULT (294) 53
DIV (295) 54
MOD (296) 55
ADD (297) 50
SUB (298) 51 57
LT (299) 45
LTE (300) 47
GT (301) 46
GTE (302) 48
EQ (303) 43
NEQ (304) 44
NOT (305) 38
AND (306) 37
OR (307) 35
ASSIGN (308) 14


Nonterminals, with rules where they appear

$accept (54)
    on left: 0
prog_start (55)
    on left: 1, on right: 0
functions (56)
    on left: 2 3, on right: 1 2
function (57)
    on left: 4, on right: 2
funcName (58)
    on left: 5, on right: 4
M1 (59)
    on left: 6, on right: 4
M2 (60)
    on left: 7, on right: 4
declarations (61)
    on left: 8 9, on right: 4 8
declaration (62)
    on left: 10 11, on right: 8
statements (63)
    on left: 12 13, on right: 4 12 15 16 17 18 19
statement (64)
    on left: 14 15 16 17 18 19 20 21 22 23, on right: 12
foreach (65)
    on left: 24, on right: 19
M11 (66)
    on left: 25, on right: 17
while (67)
    on left: 26, on right: 17
ifCond (68)
    on left: 27, on right: 15 16
M3 (69)
    on left: 28, on right: 16
M4 (70)
    on left: 29, on right: 15 16
M5 (71)
    on left: 30, on right: 19
M6 (72)
    on left: 31, on right: 17
M7 (73)
    on left: 32, on right: 18
M8 (74)
    on left: 33, on right: 18
bool_exp (75)
    on left: 34 35, on right: 18 26 27 42
relation_and_exp (76)
    on left: 36 37, on right: 34 35 37
relation_exp (77)
    on left: 38 39 40 41 42, on right: 36 37 38
comp (78)
    on left: 43 44 45 46 47 48, on right: 39
expression (79)
    on left: 49 50 51, on right: 14 23 39 50 51 61 63 64 68
multiplicative_expression (80)
    on left: 52 53 54 55, on right: 49 50 51 53 54 55
term (81)
    on left: 56 57 58, on right: 52 53 54 55
terms (82)
    on left: 59 60 61, on right: 56 57
parenExpression (83)
    on left: 62, on right: 58
expressions (84)
    on left: 63 64, on right: 62 64
vars (85)
    on left: 65 66, on right: 20 21 66
var (86)
    on left: 67 68, on right: 14 60 65 66
identifiers (87)
    on left: 69 70, on right: 10 11 70
ident (88)
    on left: 71, on right: 19 24 67 68 69 70
number (89)
    on left: 72, on right: 11 59


State 0

    0 $accept: . prog_start $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 3 (functions)

    prog_start  go to state 2
    functions   go to state 3
    function    go to state 4
    funcName    go to state 5


State 1

    5 funcName: FUNCTION . IDENT

    IDENT  shift, and go to state 6


State 2

    0 $accept: prog_start . $end

    $end  shift, and go to state 7


State 3

    1 prog_start: functions .

    $default  reduce using rule 1 (prog_start)


State 4

    2 functions: function . functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 3 (functions)

    functions  go to state 8
    function   go to state 4
    funcName   go to state 5


State 5

    4 function: funcName . SEMICOLON M1 BEGIN_PARAMS declarations END_PARAMS M2 BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    SEMICOLON  shift, and go to state 9


State 6

    5 funcName: FUNCTION IDENT .

    $default  reduce using rule 5 (funcName)


State 7

    0 $accept: prog_start $end .

    $default  accept


State 8

    2 functions: function functions .

    $default  reduce using rule 2 (functions)


State 9

    4 function: funcName SEMICOLON . M1 BEGIN_PARAMS declarations END_PARAMS M2 BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    $default  reduce using rule 6 (M1)

    M1  go to state 10


State 10

    4 function: funcName SEMICOLON M1 . BEGIN_PARAMS declarations END_PARAMS M2 BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_PARAMS  shift, and go to state 11


State 11

    4 function: funcName SEMICOLON M1 BEGIN_PARAMS . declarations END_PARAMS M2 BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 12

    $default  reduce using rule 9 (declarations)

    declarations  go to state 13
    declaration   go to state 14
    identifiers   go to state 15
    ident         go to state 16


State 12

   71 ident: IDENT .

    $default  reduce using rule 71 (ident)


State 13

    4 function: funcName SEMICOLON M1 BEGIN_PARAMS declarations . END_PARAMS M2 BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    END_PARAMS  shift, and go to state 17


State 14

    8 declarations: declaration . SEMICOLON declarations

    SEMICOLON  shift, and go to state 18


State 15

   10 declaration: identifiers . COLON INTEGER
   11            | identifiers . COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER

    COLON  shift, and go to state 19


State 16

   69 identifiers: ident .
   70            | ident . COMMA identifiers

    COMMA  shift, and go to state 20

    $default  reduce using rule 69 (identifiers)


State 17

    4 function: funcName SEMICOLON M1 BEGIN_PARAMS declarations END_PARAMS . M2 BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    $default  reduce using rule 7 (M2)

    M2  go to state 21


State 18

    8 declarations: declaration SEMICOLON . declarations

    IDENT  shift, and go to state 12

    $default  reduce using rule 9 (declarations)

    declarations  go to state 22
    declaration   go to state 14
    identifiers   go to state 15
    ident         go to state 16


State 19

   10 declaration: identifiers COLON . INTEGER
   11            | identifiers COLON . ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 23
    ARRAY    shift, and go to state 24


State 20

   70 identifiers: ident COMMA . identifiers

    IDENT  shift, and go to state 12

    identifiers  go to state 25
    ident        go to state 16


State 21

    4 function: funcName SEMICOLON M1 BEGIN_PARAMS declarations END_PARAMS M2 . BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 26


State 22

    8 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 8 (declarations)


State 23

   10 declaration: identifiers COLON INTEGER .

    $default  reduce using rule 10 (declaration)


State 24

   11 declaration: identifiers COLON ARRAY . L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 27


State 25

   70 identifiers: ident COMMA identifiers .

    $default  reduce using rule 70 (identifiers)


State 26

    4 function: funcName SEMICOLON M1 BEGIN_PARAMS declarations END_PARAMS M2 BEGIN_LOCALS . declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 12

    $default  reduce using rule 9 (declarations)

    declarations  go to state 28
    declaration   go to state 14
    identifiers   go to state 15
    ident         go to state 16


State 27

   11 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET . number R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 29

    number  go to state 30


State 28

    4 function: funcName SEMICOLON M1 BEGIN_PARAMS declarations END_PARAMS M2 BEGIN_LOCALS declarations . END_LOCALS BEGIN_BODY statements END_BODY

    END_LOCALS  shift, and go to state 31


State 29

   72 number: NUMBER .

    $default  reduce using rule 72 (number)


State 30

   11 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET number . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 32


State 31

    4 function: funcName SEMICOLON M1 BEGIN_PARAMS declarations END_PARAMS M2 BEGIN_LOCALS declarations END_LOCALS . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 33


State 32

   11 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 34


State 33

    4 function: funcName SEMICOLON M1 BEGIN_PARAMS declarations END_PARAMS M2 BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY . statements END_BODY

    READ      shift, and go to state 35
    IF        shift, and go to state 36
    DO        shift, and go to state 37
    RETURN    shift, and go to state 38
    CONTINUE  shift, and go to state 39
    WRITE     shift, and go to state 40
    FOREACH   shift, and go to state 41
    IDENT     shift, and go to state 12

    WHILE     reduce using rule 25 (M11)
    $default  reduce using rule 13 (statements)

    statements  go to state 42
    statement   go to state 43
    foreach     go to state 44
    M11         go to state 45
    ifCond      go to state 46
    var         go to state 47
    ident       go to state 48


State 34

   11 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 49


State 35

   20 statement: READ . vars

    IDENT  shift, and go to state 12

    vars   go to state 50
    var    go to state 51
    ident  go to state 48


State 36

   27 ifCond: IF . bool_exp THEN

    TRUE     shift, and go to state 52
    FALSE    shift, and go to state 53
    L_PAREN  shift, and go to state 54
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 55
    SUB      shift, and go to state 56
    NOT      shift, and go to state 57

    bool_exp                   go to state 58
    relation_and_exp           go to state 59
    relation_exp               go to state 60
    expression                 go to state 61
    multiplicative_expression  go to state 62
    term                       go to state 63
    terms                      go to state 64
    var                        go to state 65
    ident                      go to state 48
    number                     go to state 66


State 37

   18 statement: DO . M7 BEGINLOOP statements ENDLOOP M8 WHILE bool_exp

    $default  reduce using rule 32 (M7)

    M7  go to state 67


State 38

   23 statement: RETURN . expression

    L_PAREN  shift, and go to state 68
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 55
    SUB      shift, and go to state 56

    expression                 go to state 69
    multiplicative_expression  go to state 62
    term                       go to state 63
    terms                      go to state 64
    var                        go to state 65
    ident                      go to state 48
    number                     go to state 66


State 39

   22 statement: CONTINUE .

    $default  reduce using rule 22 (statement)


State 40

   21 statement: WRITE . vars

    IDENT  shift, and go to state 12

    vars   go to state 70
    var    go to state 51
    ident  go to state 48


State 41

   24 foreach: FOREACH . ident

    IDENT  shift, and go to state 12

    ident  go to state 71


State 42

    4 function: funcName SEMICOLON M1 BEGIN_PARAMS declarations END_PARAMS M2 BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements . END_BODY

    END_BODY  shift, and go to state 72


State 43

   12 statements: statement . SEMICOLON statements

    SEMICOLON  shift, and go to state 73


State 44

   19 statement: foreach . IN ident M5 BEGINLOOP statements ENDLOOP

    IN  shift, and go to state 74


State 45

   17 statement: M11 . while BEGINLOOP statements M6 ENDLOOP

    WHILE  shift, and go to state 75

    while  go to state 76


State 46

   15 statement: ifCond . statements ENDIF M4
   16          | ifCond . statements M3 ELSE statements ENDIF M4

    READ      shift, and go to state 35
    IF        shift, and go to state 36
    DO        shift, and go to state 37
    RETURN    shift, and go to state 38
    CONTINUE  shift, and go to state 39
    WRITE     shift, and go to state 40
    FOREACH   shift, and go to state 41
    IDENT     shift, and go to state 12

    WHILE     reduce using rule 25 (M11)
    $default  reduce using rule 13 (statements)

    statements  go to state 77
    statement   go to state 43
    foreach     go to state 44
    M11         go to state 45
    ifCond      go to state 46
    var         go to state 47
    ident       go to state 48


State 47

   14 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 78


State 48

   67 var: ident .
   68    | ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 79

    $default  reduce using rule 67 (var)


State 49

   11 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 11 (declaration)


State 50

   20 statement: READ vars .

    $default  reduce using rule 20 (statement)


State 51

   65 vars: var .
   66     | var . COMMA vars

    COMMA  shift, and go to state 80

    $default  reduce using rule 65 (vars)


State 52

   40 relation_exp: TRUE .

    $default  reduce using rule 40 (relation_exp)


State 53

   41 relation_exp: FALSE .

    $default  reduce using rule 41 (relation_exp)


State 54

   42 relation_exp: L_PAREN . bool_exp R_PAREN
   61 terms: L_PAREN . expression R_PAREN

    TRUE     shift, and go to state 52
    FALSE    shift, and go to state 53
    L_PAREN  shift, and go to state 54
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 55
    SUB      shift, and go to state 56
    NOT      shift, and go to state 57

    bool_exp                   go to state 81
    relation_and_exp           go to state 59
    relation_exp               go to state 60
    expression                 go to state 82
    multiplicative_expression  go to state 62
    term                       go to state 63
    terms                      go to state 64
    var                        go to state 65
    ident                      go to state 48
    number                     go to state 66


State 55

   58 term: IDENT . parenExpression
   71 ident: IDENT .

    L_PAREN  shift, and go to state 83

    $default  reduce using rule 71 (ident)

    parenExpression  go to state 84


State 56

   57 term: SUB . terms

    L_PAREN  shift, and go to state 68
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 12

    terms   go to state 85
    var     go to state 65
    ident   go to state 48
    number  go to state 66


State 57

   38 relation_exp: NOT . relation_exp

    TRUE     shift, and go to state 52
    FALSE    shift, and go to state 53
    L_PAREN  shift, and go to state 54
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 55
    SUB      shift, and go to state 56
    NOT      shift, and go to state 57

    relation_exp               go to state 86
    expression                 go to state 61
    multiplicative_expression  go to state 62
    term                       go to state 63
    terms                      go to state 64
    var                        go to state 65
    ident                      go to state 48
    number                     go to state 66


State 58

   27 ifCond: IF bool_exp . THEN

    THEN  shift, and go to state 87


State 59

   34 bool_exp: relation_and_exp .
   35         | relation_and_exp . OR relation_and_exp

    OR  shift, and go to state 88

    $default  reduce using rule 34 (bool_exp)


State 60

   36 relation_and_exp: relation_exp .
   37                 | relation_exp . AND relation_and_exp

    AND  shift, and go to state 89

    $default  reduce using rule 36 (relation_and_exp)


State 61

   39 relation_exp: expression . comp expression
   50 expression: expression . ADD multiplicative_expression
   51           | expression . SUB multiplicative_expression

    ADD  shift, and go to state 90
    SUB  shift, and go to state 91
    LT   shift, and go to state 92
    LTE  shift, and go to state 93
    GT   shift, and go to state 94
    GTE  shift, and go to state 95
    EQ   shift, and go to state 96
    NEQ  shift, and go to state 97

    comp  go to state 98


State 62

   49 expression: multiplicative_expression .
   53 multiplicative_expression: multiplicative_expression . MULT term
   54                          | multiplicative_expression . DIV term
   55                          | multiplicative_expression . MOD term

    MULT  shift, and go to state 99
    DIV   shift, and go to state 100
    MOD   shift, and go to state 101

    $default  reduce using rule 49 (expression)


State 63

   52 multiplicative_expression: term .

    $default  reduce using rule 52 (multiplicative_expression)


State 64

   56 term: terms .

    $default  reduce using rule 56 (term)


State 65

   60 terms: var .

    $default  reduce using rule 60 (terms)


State 66

   59 terms: number .

    $default  reduce using rule 59 (terms)


State 67

   18 statement: DO M7 . BEGINLOOP statements ENDLOOP M8 WHILE bool_exp

    BEGINLOOP  shift, and go to state 102


State 68

   61 terms: L_PAREN . expression R_PAREN

    L_PAREN  shift, and go to state 68
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 55
    SUB      shift, and go to state 56

    expression                 go to state 103
    multiplicative_expression  go to state 62
    term                       go to state 63
    terms                      go to state 64
    var                        go to state 65
    ident                      go to state 48
    number                     go to state 66


State 69

   23 statement: RETURN expression .
   50 expression: expression . ADD multiplicative_expression
   51           | expression . SUB multiplicative_expression

    ADD  shift, and go to state 90
    SUB  shift, and go to state 91

    $default  reduce using rule 23 (statement)


State 70

   21 statement: WRITE vars .

    $default  reduce using rule 21 (statement)


State 71

   24 foreach: FOREACH ident .

    $default  reduce using rule 24 (foreach)


State 72

    4 function: funcName SEMICOLON M1 BEGIN_PARAMS declarations END_PARAMS M2 BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY .

    $default  reduce using rule 4 (function)


State 73

   12 statements: statement SEMICOLON . statements

    READ      shift, and go to state 35
    IF        shift, and go to state 36
    DO        shift, and go to state 37
    RETURN    shift, and go to state 38
    CONTINUE  shift, and go to state 39
    WRITE     shift, and go to state 40
    FOREACH   shift, and go to state 41
    IDENT     shift, and go to state 12

    WHILE     reduce using rule 25 (M11)
    $default  reduce using rule 13 (statements)

    statements  go to state 104
    statement   go to state 43
    foreach     go to state 44
    M11         go to state 45
    ifCond      go to state 46
    var         go to state 47
    ident       go to state 48


State 74

   19 statement: foreach IN . ident M5 BEGINLOOP statements ENDLOOP

    IDENT  shift, and go to state 12

    ident  go to state 105


State 75

   26 while: WHILE . bool_exp

    TRUE     shift, and go to state 52
    FALSE    shift, and go to state 53
    L_PAREN  shift, and go to state 54
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 55
    SUB      shift, and go to state 56
    NOT      shift, and go to state 57

    bool_exp                   go to state 106
    relation_and_exp           go to state 59
    relation_exp               go to state 60
    expression                 go to state 61
    multiplicative_expression  go to state 62
    term                       go to state 63
    terms                      go to state 64
    var                        go to state 65
    ident                      go to state 48
    number                     go to state 66


State 76

   17 statement: M11 while . BEGINLOOP statements M6 ENDLOOP

    BEGINLOOP  shift, and go to state 107


State 77

   15 statement: ifCond statements . ENDIF M4
   16          | ifCond statements . M3 ELSE statements ENDIF M4

    ENDIF  shift, and go to state 108

    $default  reduce using rule 28 (M3)

    M3  go to state 109


State 78

   14 statement: var ASSIGN . expression

    L_PAREN  shift, and go to state 68
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 55
    SUB      shift, and go to state 56

    expression                 go to state 110
    multiplicative_expression  go to state 62
    term                       go to state 63
    terms                      go to state 64
    var                        go to state 65
    ident                      go to state 48
    number                     go to state 66


State 79

   68 var: ident L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    L_PAREN  shift, and go to state 68
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 55
    SUB      shift, and go to state 56

    expression                 go to state 111
    multiplicative_expression  go to state 62
    term                       go to state 63
    terms                      go to state 64
    var                        go to state 65
    ident                      go to state 48
    number                     go to state 66


State 80

   66 vars: var COMMA . vars

    IDENT  shift, and go to state 12

    vars   go to state 112
    var    go to state 51
    ident  go to state 48


State 81

   42 relation_exp: L_PAREN bool_exp . R_PAREN

    R_PAREN  shift, and go to state 113


State 82

   39 relation_exp: expression . comp expression
   50 expression: expression . ADD multiplicative_expression
   51           | expression . SUB multiplicative_expression
   61 terms: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 114
    ADD      shift, and go to state 90
    SUB      shift, and go to state 91
    LT       shift, and go to state 92
    LTE      shift, and go to state 93
    GT       shift, and go to state 94
    GTE      shift, and go to state 95
    EQ       shift, and go to state 96
    NEQ      shift, and go to state 97

    comp  go to state 98


State 83

   62 parenExpression: L_PAREN . expressions R_PAREN

    L_PAREN  shift, and go to state 68
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 55
    SUB      shift, and go to state 56

    expression                 go to state 115
    multiplicative_expression  go to state 62
    term                       go to state 63
    terms                      go to state 64
    expressions                go to state 116
    var                        go to state 65
    ident                      go to state 48
    number                     go to state 66


State 84

   58 term: IDENT parenExpression .

    $default  reduce using rule 58 (term)


State 85

   57 term: SUB terms .

    $default  reduce using rule 57 (term)


State 86

   38 relation_exp: NOT relation_exp .

    $default  reduce using rule 38 (relation_exp)


State 87

   27 ifCond: IF bool_exp THEN .

    $default  reduce using rule 27 (ifCond)


State 88

   35 bool_exp: relation_and_exp OR . relation_and_exp

    TRUE     shift, and go to state 52
    FALSE    shift, and go to state 53
    L_PAREN  shift, and go to state 54
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 55
    SUB      shift, and go to state 56
    NOT      shift, and go to state 57

    relation_and_exp           go to state 117
    relation_exp               go to state 60
    expression                 go to state 61
    multiplicative_expression  go to state 62
    term                       go to state 63
    terms                      go to state 64
    var                        go to state 65
    ident                      go to state 48
    number                     go to state 66


State 89

   37 relation_and_exp: relation_exp AND . relation_and_exp

    TRUE     shift, and go to state 52
    FALSE    shift, and go to state 53
    L_PAREN  shift, and go to state 54
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 55
    SUB      shift, and go to state 56
    NOT      shift, and go to state 57

    relation_and_exp           go to state 118
    relation_exp               go to state 60
    expression                 go to state 61
    multiplicative_expression  go to state 62
    term                       go to state 63
    terms                      go to state 64
    var                        go to state 65
    ident                      go to state 48
    number                     go to state 66


State 90

   50 expression: expression ADD . multiplicative_expression

    L_PAREN  shift, and go to state 68
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 55
    SUB      shift, and go to state 56

    multiplicative_expression  go to state 119
    term                       go to state 63
    terms                      go to state 64
    var                        go to state 65
    ident                      go to state 48
    number                     go to state 66


State 91

   51 expression: expression SUB . multiplicative_expression

    L_PAREN  shift, and go to state 68
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 55
    SUB      shift, and go to state 56

    multiplicative_expression  go to state 120
    term                       go to state 63
    terms                      go to state 64
    var                        go to state 65
    ident                      go to state 48
    number                     go to state 66


State 92

   45 comp: LT .

    $default  reduce using rule 45 (comp)


State 93

   47 comp: LTE .

    $default  reduce using rule 47 (comp)


State 94

   46 comp: GT .

    $default  reduce using rule 46 (comp)


State 95

   48 comp: GTE .

    $default  reduce using rule 48 (comp)


State 96

   43 comp: EQ .

    $default  reduce using rule 43 (comp)


State 97

   44 comp: NEQ .

    $default  reduce using rule 44 (comp)


State 98

   39 relation_exp: expression comp . expression

    L_PAREN  shift, and go to state 68
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 55
    SUB      shift, and go to state 56

    expression                 go to state 121
    multiplicative_expression  go to state 62
    term                       go to state 63
    terms                      go to state 64
    var                        go to state 65
    ident                      go to state 48
    number                     go to state 66


State 99

   53 multiplicative_expression: multiplicative_expression MULT . term

    L_PAREN  shift, and go to state 68
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 55
    SUB      shift, and go to state 56

    term    go to state 122
    terms   go to state 64
    var     go to state 65
    ident   go to state 48
    number  go to state 66


State 100

   54 multiplicative_expression: multiplicative_expression DIV . term

    L_PAREN  shift, and go to state 68
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 55
    SUB      shift, and go to state 56

    term    go to state 123
    terms   go to state 64
    var     go to state 65
    ident   go to state 48
    number  go to state 66


State 101

   55 multiplicative_expression: multiplicative_expression MOD . term

    L_PAREN  shift, and go to state 68
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 55
    SUB      shift, and go to state 56

    term    go to state 124
    terms   go to state 64
    var     go to state 65
    ident   go to state 48
    number  go to state 66


State 102

   18 statement: DO M7 BEGINLOOP . statements ENDLOOP M8 WHILE bool_exp

    READ      shift, and go to state 35
    IF        shift, and go to state 36
    DO        shift, and go to state 37
    RETURN    shift, and go to state 38
    CONTINUE  shift, and go to state 39
    WRITE     shift, and go to state 40
    FOREACH   shift, and go to state 41
    IDENT     shift, and go to state 12

    WHILE     reduce using rule 25 (M11)
    $default  reduce using rule 13 (statements)

    statements  go to state 125
    statement   go to state 43
    foreach     go to state 44
    M11         go to state 45
    ifCond      go to state 46
    var         go to state 47
    ident       go to state 48


State 103

   50 expression: expression . ADD multiplicative_expression
   51           | expression . SUB multiplicative_expression
   61 terms: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 114
    ADD      shift, and go to state 90
    SUB      shift, and go to state 91


State 104

   12 statements: statement SEMICOLON statements .

    $default  reduce using rule 12 (statements)


State 105

   19 statement: foreach IN ident . M5 BEGINLOOP statements ENDLOOP

    $default  reduce using rule 30 (M5)

    M5  go to state 126


State 106

   26 while: WHILE bool_exp .

    $default  reduce using rule 26 (while)


State 107

   17 statement: M11 while BEGINLOOP . statements M6 ENDLOOP

    READ      shift, and go to state 35
    IF        shift, and go to state 36
    DO        shift, and go to state 37
    RETURN    shift, and go to state 38
    CONTINUE  shift, and go to state 39
    WRITE     shift, and go to state 40
    FOREACH   shift, and go to state 41
    IDENT     shift, and go to state 12

    WHILE     reduce using rule 25 (M11)
    $default  reduce using rule 13 (statements)

    statements  go to state 127
    statement   go to state 43
    foreach     go to state 44
    M11         go to state 45
    ifCond      go to state 46
    var         go to state 47
    ident       go to state 48


State 108

   15 statement: ifCond statements ENDIF . M4

    $default  reduce using rule 29 (M4)

    M4  go to state 128


State 109

   16 statement: ifCond statements M3 . ELSE statements ENDIF M4

    ELSE  shift, and go to state 129


State 110

   14 statement: var ASSIGN expression .
   50 expression: expression . ADD multiplicative_expression
   51           | expression . SUB multiplicative_expression

    ADD  shift, and go to state 90
    SUB  shift, and go to state 91

    $default  reduce using rule 14 (statement)


State 111

   50 expression: expression . ADD multiplicative_expression
   51           | expression . SUB multiplicative_expression
   68 var: ident L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 130
    ADD               shift, and go to state 90
    SUB               shift, and go to state 91


State 112

   66 vars: var COMMA vars .

    $default  reduce using rule 66 (vars)


State 113

   42 relation_exp: L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 42 (relation_exp)


State 114

   61 terms: L_PAREN expression R_PAREN .

    $default  reduce using rule 61 (terms)


State 115

   50 expression: expression . ADD multiplicative_expression
   51           | expression . SUB multiplicative_expression
   63 expressions: expression .
   64            | expression . COMMA expressions

    COMMA  shift, and go to state 131
    ADD    shift, and go to state 90
    SUB    shift, and go to state 91

    $default  reduce using rule 63 (expressions)


State 116

   62 parenExpression: L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 132


State 117

   35 bool_exp: relation_and_exp OR relation_and_exp .

    $default  reduce using rule 35 (bool_exp)


State 118

   37 relation_and_exp: relation_exp AND relation_and_exp .

    $default  reduce using rule 37 (relation_and_exp)


State 119

   50 expression: expression ADD multiplicative_expression .
   53 multiplicative_expression: multiplicative_expression . MULT term
   54                          | multiplicative_expression . DIV term
   55                          | multiplicative_expression . MOD term

    MULT  shift, and go to state 99
    DIV   shift, and go to state 100
    MOD   shift, and go to state 101

    $default  reduce using rule 50 (expression)


State 120

   51 expression: expression SUB multiplicative_expression .
   53 multiplicative_expression: multiplicative_expression . MULT term
   54                          | multiplicative_expression . DIV term
   55                          | multiplicative_expression . MOD term

    MULT  shift, and go to state 99
    DIV   shift, and go to state 100
    MOD   shift, and go to state 101

    $default  reduce using rule 51 (expression)


State 121

   39 relation_exp: expression comp expression .
   50 expression: expression . ADD multiplicative_expression
   51           | expression . SUB multiplicative_expression

    ADD  shift, and go to state 90
    SUB  shift, and go to state 91

    $default  reduce using rule 39 (relation_exp)


State 122

   53 multiplicative_expression: multiplicative_expression MULT term .

    $default  reduce using rule 53 (multiplicative_expression)


State 123

   54 multiplicative_expression: multiplicative_expression DIV term .

    $default  reduce using rule 54 (multiplicative_expression)


State 124

   55 multiplicative_expression: multiplicative_expression MOD term .

    $default  reduce using rule 55 (multiplicative_expression)


State 125

   18 statement: DO M7 BEGINLOOP statements . ENDLOOP M8 WHILE bool_exp

    ENDLOOP  shift, and go to state 133


State 126

   19 statement: foreach IN ident M5 . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 134


State 127

   17 statement: M11 while BEGINLOOP statements . M6 ENDLOOP

    $default  reduce using rule 31 (M6)

    M6  go to state 135


State 128

   15 statement: ifCond statements ENDIF M4 .

    $default  reduce using rule 15 (statement)


State 129

   16 statement: ifCond statements M3 ELSE . statements ENDIF M4

    READ      shift, and go to state 35
    IF        shift, and go to state 36
    DO        shift, and go to state 37
    RETURN    shift, and go to state 38
    CONTINUE  shift, and go to state 39
    WRITE     shift, and go to state 40
    FOREACH   shift, and go to state 41
    IDENT     shift, and go to state 12

    WHILE     reduce using rule 25 (M11)
    $default  reduce using rule 13 (statements)

    statements  go to state 136
    statement   go to state 43
    foreach     go to state 44
    M11         go to state 45
    ifCond      go to state 46
    var         go to state 47
    ident       go to state 48


State 130

   68 var: ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 68 (var)


State 131

   64 expressions: expression COMMA . expressions

    L_PAREN  shift, and go to state 68
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 55
    SUB      shift, and go to state 56

    expression                 go to state 115
    multiplicative_expression  go to state 62
    term                       go to state 63
    terms                      go to state 64
    expressions                go to state 137
    var                        go to state 65
    ident                      go to state 48
    number                     go to state 66


State 132

   62 parenExpression: L_PAREN expressions R_PAREN .

    $default  reduce using rule 62 (parenExpression)


State 133

   18 statement: DO M7 BEGINLOOP statements ENDLOOP . M8 WHILE bool_exp

    $default  reduce using rule 33 (M8)

    M8  go to state 138


State 134

   19 statement: foreach IN ident M5 BEGINLOOP . statements ENDLOOP

    READ      shift, and go to state 35
    IF        shift, and go to state 36
    DO        shift, and go to state 37
    RETURN    shift, and go to state 38
    CONTINUE  shift, and go to state 39
    WRITE     shift, and go to state 40
    FOREACH   shift, and go to state 41
    IDENT     shift, and go to state 12

    WHILE     reduce using rule 25 (M11)
    $default  reduce using rule 13 (statements)

    statements  go to state 139
    statement   go to state 43
    foreach     go to state 44
    M11         go to state 45
    ifCond      go to state 46
    var         go to state 47
    ident       go to state 48


State 135

   17 statement: M11 while BEGINLOOP statements M6 . ENDLOOP

    ENDLOOP  shift, and go to state 140


State 136

   16 statement: ifCond statements M3 ELSE statements . ENDIF M4

    ENDIF  shift, and go to state 141


State 137

   64 expressions: expression COMMA expressions .

    $default  reduce using rule 64 (expressions)


State 138

   18 statement: DO M7 BEGINLOOP statements ENDLOOP M8 . WHILE bool_exp

    WHILE  shift, and go to state 142


State 139

   19 statement: foreach IN ident M5 BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 143


State 140

   17 statement: M11 while BEGINLOOP statements M6 ENDLOOP .

    $default  reduce using rule 17 (statement)


State 141

   16 statement: ifCond statements M3 ELSE statements ENDIF . M4

    $default  reduce using rule 29 (M4)

    M4  go to state 144


State 142

   18 statement: DO M7 BEGINLOOP statements ENDLOOP M8 WHILE . bool_exp

    TRUE     shift, and go to state 52
    FALSE    shift, and go to state 53
    L_PAREN  shift, and go to state 54
    NUMBER   shift, and go to state 29
    IDENT    shift, and go to state 55
    SUB      shift, and go to state 56
    NOT      shift, and go to state 57

    bool_exp                   go to state 145
    relation_and_exp           go to state 59
    relation_exp               go to state 60
    expression                 go to state 61
    multiplicative_expression  go to state 62
    term                       go to state 63
    terms                      go to state 64
    var                        go to state 65
    ident                      go to state 48
    number                     go to state 66


State 143

   19 statement: foreach IN ident M5 BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 19 (statement)


State 144

   16 statement: ifCond statements M3 ELSE statements ENDIF M4 .

    $default  reduce using rule 16 (statement)


State 145

   18 statement: DO M7 BEGINLOOP statements ENDLOOP M8 WHILE bool_exp .

    $default  reduce using rule 18 (statement)
