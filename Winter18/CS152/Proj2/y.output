Terminals unused in grammar

   OF
   ARRAY
   ELSE
   IN
   TRUE
   FOREACH
   FALSE
   RETURN
   MULT
   DIV
   MOD
   AND
   OR
   COMMA
   NEQ
   SUB
   NOT


Grammar

    0 $accept: prog_start $end

    1 prog_start: functions

    2 functions: function functions
    3          | %empty

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    5 declarations: declaration SEMICOLON declarations
    6             | %empty

    7 declaration: identifiers COLON INTEGER
    8            | %empty

    9 statements: statement SEMICOLON statements
   10           | %empty

   11 statement: READ vars
   12          | WRITE vars
   13          | IF bool_exp THEN statements ENDIF
   14          | DO BEGINLOOP statements ENDLOOP WHILE bool_exp
   15          | var ASSIGN expression
   16          | CONTINUE
   17          | %empty

   18 vars: var

   19 var: ident
   20    | ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET

   21 identifiers: identifiers COLON INTEGER
   22            | ident

   23 bool_exp: relation_and_expression

   24 relation_and_expression: relation_exp

   25 relation_exp: expression comp expression

   26 ident: IDENT

   27 comp: LT
   28     | GT
   29     | GTE
   30     | LTE
   31     | EQ

   32 expression: multiplicative_expression
   33           | multiplicative_expression ADD multiplicative_expression

   34 multiplicative_expression: term

   35 term: NUMBER
   36     | var
   37     | L_PAREN expression R_PAREN


Terminals, with rules where they appear

$end (0) 0
error (256)
FUNCTION (258) 4
IDENT (259) 4 26
INTEGER (260) 7 21
OF (261)
ARRAY (262)
READ (263) 11
IF (264) 13
THEN (265) 13
ENDIF (266) 13
ELSE (267)
WHILE (268) 14
DO (269) 14
BEGIN_PARAMS (270) 4
BEGIN_LOCALS (271) 4
BEGIN_BODY (272) 4
IN (273)
BEGINLOOP (274) 14
ENDLOOP (275) 14
END_PARAMS (276) 4
END_LOCALS (277) 4
END_BODY (278) 4
CONTINUE (279) 16
WRITE (280) 12
TRUE (281)
FOREACH (282)
FALSE (283)
RETURN (284)
NUMBER (285) 35
ADD (286) 33
MULT (287)
DIV (288)
MOD (289)
AND (290)
OR (291)
SEMICOLON (292) 4 5 9
COLON (293) 7 21
COMMA (294)
L_PAREN (295) 37
R_PAREN (296) 37
L_SQUARE_BRACKET (297) 20
R_SQUARE_BRACKET (298) 20
EQ (299) 31
NEQ (300)
LT (301) 27
GT (302) 28
LTE (303) 30
GTE (304) 29
SUB (305)
NOT (306)
ASSIGN (307) 15


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
prog_start (54)
    on left: 1, on right: 0
functions (55)
    on left: 2 3, on right: 1 2
function (56)
    on left: 4, on right: 2
declarations (57)
    on left: 5 6, on right: 4 5
declaration (58)
    on left: 7 8, on right: 5
statements (59)
    on left: 9 10, on right: 4 9 13 14
statement (60)
    on left: 11 12 13 14 15 16 17, on right: 9
vars (61)
    on left: 18, on right: 11 12
var (62)
    on left: 19 20, on right: 15 18 36
identifiers (63)
    on left: 21 22, on right: 7 21
bool_exp (64)
    on left: 23, on right: 13 14
relation_and_expression (65)
    on left: 24, on right: 23
relation_exp (66)
    on left: 25, on right: 24
ident (67)
    on left: 26, on right: 19 20 22
comp (68)
    on left: 27 28 29 30 31, on right: 25
expression (69)
    on left: 32 33, on right: 15 20 25 37
multiplicative_expression (70)
    on left: 34, on right: 32 33
term (71)
    on left: 35 36 37, on right: 34


State 0

    0 $accept: . prog_start $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 3 (functions)

    prog_start  go to state 2
    functions   go to state 3
    function    go to state 4


State 1

    4 function: FUNCTION . IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 5


State 2

    0 $accept: prog_start . $end

    $end  shift, and go to state 6


State 3

    1 prog_start: functions .

    $default  reduce using rule 1 (prog_start)


State 4

    2 functions: function . functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 3 (functions)

    functions  go to state 7
    function   go to state 4


State 5

    4 function: FUNCTION IDENT . SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    SEMICOLON  shift, and go to state 8


State 6

    0 $accept: prog_start $end .

    $default  accept


State 7

    2 functions: function functions .

    $default  reduce using rule 2 (functions)


State 8

    4 function: FUNCTION IDENT SEMICOLON . BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_PARAMS  shift, and go to state 9


State 9

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS . declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 10

    SEMICOLON  reduce using rule 8 (declaration)
    $default   reduce using rule 6 (declarations)

    declarations  go to state 11
    declaration   go to state 12
    identifiers   go to state 13
    ident         go to state 14


State 10

   26 ident: IDENT .

    $default  reduce using rule 26 (ident)


State 11

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations . END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    END_PARAMS  shift, and go to state 15


State 12

    5 declarations: declaration . SEMICOLON declarations

    SEMICOLON  shift, and go to state 16


State 13

    7 declaration: identifiers . COLON INTEGER
   21 identifiers: identifiers . COLON INTEGER

    COLON  shift, and go to state 17


State 14

   22 identifiers: ident .

    $default  reduce using rule 22 (identifiers)


State 15

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS . BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 18


State 16

    5 declarations: declaration SEMICOLON . declarations

    IDENT  shift, and go to state 10

    SEMICOLON  reduce using rule 8 (declaration)
    $default   reduce using rule 6 (declarations)

    declarations  go to state 19
    declaration   go to state 12
    identifiers   go to state 13
    ident         go to state 14


State 17

    7 declaration: identifiers COLON . INTEGER
   21 identifiers: identifiers COLON . INTEGER

    INTEGER  shift, and go to state 20


State 18

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS . declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 10

    SEMICOLON  reduce using rule 8 (declaration)
    $default   reduce using rule 6 (declarations)

    declarations  go to state 21
    declaration   go to state 12
    identifiers   go to state 13
    ident         go to state 14


State 19

    5 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 5 (declarations)


State 20

    7 declaration: identifiers COLON INTEGER .
   21 identifiers: identifiers COLON INTEGER .

    COLON     reduce using rule 21 (identifiers)
    $default  reduce using rule 7 (declaration)


State 21

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations . END_LOCALS BEGIN_BODY statements END_BODY

    END_LOCALS  shift, and go to state 22


State 22

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 23


State 23

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY . statements END_BODY

    IDENT     shift, and go to state 10
    READ      shift, and go to state 24
    IF        shift, and go to state 25
    DO        shift, and go to state 26
    CONTINUE  shift, and go to state 27
    WRITE     shift, and go to state 28

    SEMICOLON  reduce using rule 17 (statement)
    $default   reduce using rule 10 (statements)

    statements  go to state 29
    statement   go to state 30
    var         go to state 31
    ident       go to state 32


State 24

   11 statement: READ . vars

    IDENT  shift, and go to state 10

    vars   go to state 33
    var    go to state 34
    ident  go to state 32


State 25

   13 statement: IF . bool_exp THEN statements ENDIF

    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 35
    L_PAREN  shift, and go to state 36

    var                        go to state 37
    bool_exp                   go to state 38
    relation_and_expression    go to state 39
    relation_exp               go to state 40
    ident                      go to state 32
    expression                 go to state 41
    multiplicative_expression  go to state 42
    term                       go to state 43


State 26

   14 statement: DO . BEGINLOOP statements ENDLOOP WHILE bool_exp

    BEGINLOOP  shift, and go to state 44


State 27

   16 statement: CONTINUE .

    $default  reduce using rule 16 (statement)


State 28

   12 statement: WRITE . vars

    IDENT  shift, and go to state 10

    vars   go to state 45
    var    go to state 34
    ident  go to state 32


State 29

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements . END_BODY

    END_BODY  shift, and go to state 46


State 30

    9 statements: statement . SEMICOLON statements

    SEMICOLON  shift, and go to state 47


State 31

   15 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 48


State 32

   19 var: ident .
   20    | ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 49

    $default  reduce using rule 19 (var)


State 33

   11 statement: READ vars .

    $default  reduce using rule 11 (statement)


State 34

   18 vars: var .

    $default  reduce using rule 18 (vars)


State 35

   35 term: NUMBER .

    $default  reduce using rule 35 (term)


State 36

   37 term: L_PAREN . expression R_PAREN

    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 35
    L_PAREN  shift, and go to state 36

    var                        go to state 37
    ident                      go to state 32
    expression                 go to state 50
    multiplicative_expression  go to state 42
    term                       go to state 43


State 37

   36 term: var .

    $default  reduce using rule 36 (term)


State 38

   13 statement: IF bool_exp . THEN statements ENDIF

    THEN  shift, and go to state 51


State 39

   23 bool_exp: relation_and_expression .

    $default  reduce using rule 23 (bool_exp)


State 40

   24 relation_and_expression: relation_exp .

    $default  reduce using rule 24 (relation_and_expression)


State 41

   25 relation_exp: expression . comp expression

    EQ   shift, and go to state 52
    LT   shift, and go to state 53
    GT   shift, and go to state 54
    LTE  shift, and go to state 55
    GTE  shift, and go to state 56

    comp  go to state 57


State 42

   32 expression: multiplicative_expression .
   33           | multiplicative_expression . ADD multiplicative_expression

    ADD  shift, and go to state 58

    $default  reduce using rule 32 (expression)


State 43

   34 multiplicative_expression: term .

    $default  reduce using rule 34 (multiplicative_expression)


State 44

   14 statement: DO BEGINLOOP . statements ENDLOOP WHILE bool_exp

    IDENT     shift, and go to state 10
    READ      shift, and go to state 24
    IF        shift, and go to state 25
    DO        shift, and go to state 26
    CONTINUE  shift, and go to state 27
    WRITE     shift, and go to state 28

    SEMICOLON  reduce using rule 17 (statement)
    $default   reduce using rule 10 (statements)

    statements  go to state 59
    statement   go to state 30
    var         go to state 31
    ident       go to state 32


State 45

   12 statement: WRITE vars .

    $default  reduce using rule 12 (statement)


State 46

    4 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY .

    $default  reduce using rule 4 (function)


State 47

    9 statements: statement SEMICOLON . statements

    IDENT     shift, and go to state 10
    READ      shift, and go to state 24
    IF        shift, and go to state 25
    DO        shift, and go to state 26
    CONTINUE  shift, and go to state 27
    WRITE     shift, and go to state 28

    SEMICOLON  reduce using rule 17 (statement)
    $default   reduce using rule 10 (statements)

    statements  go to state 60
    statement   go to state 30
    var         go to state 31
    ident       go to state 32


State 48

   15 statement: var ASSIGN . expression

    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 35
    L_PAREN  shift, and go to state 36

    var                        go to state 37
    ident                      go to state 32
    expression                 go to state 61
    multiplicative_expression  go to state 42
    term                       go to state 43


State 49

   20 var: ident L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 35
    L_PAREN  shift, and go to state 36

    var                        go to state 37
    ident                      go to state 32
    expression                 go to state 62
    multiplicative_expression  go to state 42
    term                       go to state 43


State 50

   37 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 63


State 51

   13 statement: IF bool_exp THEN . statements ENDIF

    IDENT     shift, and go to state 10
    READ      shift, and go to state 24
    IF        shift, and go to state 25
    DO        shift, and go to state 26
    CONTINUE  shift, and go to state 27
    WRITE     shift, and go to state 28

    SEMICOLON  reduce using rule 17 (statement)
    $default   reduce using rule 10 (statements)

    statements  go to state 64
    statement   go to state 30
    var         go to state 31
    ident       go to state 32


State 52

   31 comp: EQ .

    $default  reduce using rule 31 (comp)


State 53

   27 comp: LT .

    $default  reduce using rule 27 (comp)


State 54

   28 comp: GT .

    $default  reduce using rule 28 (comp)


State 55

   30 comp: LTE .

    $default  reduce using rule 30 (comp)


State 56

   29 comp: GTE .

    $default  reduce using rule 29 (comp)


State 57

   25 relation_exp: expression comp . expression

    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 35
    L_PAREN  shift, and go to state 36

    var                        go to state 37
    ident                      go to state 32
    expression                 go to state 65
    multiplicative_expression  go to state 42
    term                       go to state 43


State 58

   33 expression: multiplicative_expression ADD . multiplicative_expression

    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 35
    L_PAREN  shift, and go to state 36

    var                        go to state 37
    ident                      go to state 32
    multiplicative_expression  go to state 66
    term                       go to state 43


State 59

   14 statement: DO BEGINLOOP statements . ENDLOOP WHILE bool_exp

    ENDLOOP  shift, and go to state 67


State 60

    9 statements: statement SEMICOLON statements .

    $default  reduce using rule 9 (statements)


State 61

   15 statement: var ASSIGN expression .

    $default  reduce using rule 15 (statement)


State 62

   20 var: ident L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 68


State 63

   37 term: L_PAREN expression R_PAREN .

    $default  reduce using rule 37 (term)


State 64

   13 statement: IF bool_exp THEN statements . ENDIF

    ENDIF  shift, and go to state 69


State 65

   25 relation_exp: expression comp expression .

    $default  reduce using rule 25 (relation_exp)


State 66

   33 expression: multiplicative_expression ADD multiplicative_expression .

    $default  reduce using rule 33 (expression)


State 67

   14 statement: DO BEGINLOOP statements ENDLOOP . WHILE bool_exp

    WHILE  shift, and go to state 70


State 68

   20 var: ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 20 (var)


State 69

   13 statement: IF bool_exp THEN statements ENDIF .

    $default  reduce using rule 13 (statement)


State 70

   14 statement: DO BEGINLOOP statements ENDLOOP WHILE . bool_exp

    IDENT    shift, and go to state 10
    NUMBER   shift, and go to state 35
    L_PAREN  shift, and go to state 36

    var                        go to state 37
    bool_exp                   go to state 71
    relation_and_expression    go to state 39
    relation_exp               go to state 40
    ident                      go to state 32
    expression                 go to state 41
    multiplicative_expression  go to state 42
    term                       go to state 43


State 71

   14 statement: DO BEGINLOOP statements ENDLOOP WHILE bool_exp .

    $default  reduce using rule 14 (statement)
