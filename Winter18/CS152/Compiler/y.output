Grammar

    0 $accept: prog_start $end

    1 prog_start: functions

    2 functions: function functions
    3          | %empty

    4 function: funcName SEMICOLON begin_params declarations end_params BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    5 funcName: FUNCTION IDENT

    6 begin_params: BEGIN_PARAMS

    7 end_params: END_PARAMS

    8 declarations: declaration SEMICOLON declarations
    9             | %empty

   10 declaration: identifiers COLON INTEGER
   11            | identifiers COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER
   12            | identifiers COLON ARRAY L_SQUARE_BRACKET error R_SQUARE_BRACKET OF INTEGER
   13            | identifiers COLON error

   14 statements: statement SEMICOLON statements
   15           | %empty

   16 statement: var ASSIGN expression
   17          | ifCond statements endif
   18          | ifCond statements else statements endif
   19          | while BEGINLOOP statements ENDLOOP
   20          | do BEGINLOOP statements ENDLOOP WHILE bool_exp
   21          | foreach IN ident BEGINLOOP statements ENDLOOP
   22          | READ vars
   23          | WRITE vars
   24          | CONTINUE
   25          | error
   26          | RETURN expression

   27 foreach: FOREACH ident

   28 while: WHILE bool_exp

   29 ifCond: IF bool_exp THEN

   30 else: ELSE

   31 endif: ENDIF

   32 do: DO

   33 bool_exp: relation_and_exp
   34         | relation_and_exp OR relation_and_exp

   35 relation_and_exp: relation_exp
   36                 | relation_exp AND relation_and_exp

   37 relation_exp: NOT relation_exp
   38             | expression comp expression
   39             | TRUE
   40             | FALSE
   41             | L_PAREN bool_exp R_PAREN

   42 comp: EQ
   43     | NEQ
   44     | LT
   45     | GT
   46     | LTE
   47     | GTE

   48 expression: multiplicative_expression
   49           | expression ADD multiplicative_expression
   50           | expression SUB multiplicative_expression

   51 multiplicative_expression: term
   52                          | multiplicative_expression MULT term
   53                          | multiplicative_expression DIV term
   54                          | multiplicative_expression MOD term

   55 term: terms
   56     | SUB terms
   57     | IDENT parenExpression

   58 terms: number
   59      | var
   60      | L_PAREN expression R_PAREN

   61 parenExpression: L_PAREN expressions R_PAREN

   62 expressions: expression
   63            | expression COMMA expressions

   64 vars: var
   65     | var COMMA vars

   66 var: ident
   67    | ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET

   68 identifiers: ident
   69            | ident COMMA identifiers

   70 ident: IDENT

   71 number: NUMBER


Terminals, with rules where they appear

$end (0) 0
error (256) 12 13 25
FUNCTION (258) 5
INTEGER (259) 10 11 12
OF (260) 11 12
ARRAY (261) 11 12
READ (262) 22
IF (263) 29
THEN (264) 29
ENDIF (265) 31
ELSE (266) 30
WHILE (267) 20 28
DO (268) 32
BEGIN_PARAMS (269) 6
BEGIN_LOCALS (270) 4
BEGIN_BODY (271) 4
IN (272) 21
BEGINLOOP (273) 19 20 21
ENDLOOP (274) 19 20 21
RETURN (275) 26
END_PARAMS (276) 7
END_LOCALS (277) 4
END_BODY (278) 4
CONTINUE (279) 24
WRITE (280) 23
TRUE (281) 39
FALSE (282) 40
FOREACH (283) 27
SEMICOLON (284) 4 8 14
COLON (285) 10 11 12 13
COMMA (286) 63 65 69
L_PAREN (287) 41 60 61
R_PAREN (288) 41 60 61
L_SQUARE_BRACKET (289) 11 12 67
R_SQUARE_BRACKET (290) 11 12 67
NUMBER (291) 71
IDENT (292) 5 57 70
UMINUS (293)
MULT (294) 52
DIV (295) 53
MOD (296) 54
ADD (297) 49
SUB (298) 50 56
LT (299) 44
LTE (300) 46
GT (301) 45
GTE (302) 47
EQ (303) 42
NEQ (304) 43
NOT (305) 37
AND (306) 36
OR (307) 34
ASSIGN (308) 16


Nonterminals, with rules where they appear

$accept (54)
    on left: 0
prog_start (55)
    on left: 1, on right: 0
functions (56)
    on left: 2 3, on right: 1 2
function (57)
    on left: 4, on right: 2
funcName (58)
    on left: 5, on right: 4
begin_params (59)
    on left: 6, on right: 4
end_params (60)
    on left: 7, on right: 4
declarations (61)
    on left: 8 9, on right: 4 8
declaration (62)
    on left: 10 11 12 13, on right: 8
statements (63)
    on left: 14 15, on right: 4 14 17 18 19 20 21
statement (64)
    on left: 16 17 18 19 20 21 22 23 24 25 26, on right: 14
foreach (65)
    on left: 27, on right: 21
while (66)
    on left: 28, on right: 19
ifCond (67)
    on left: 29, on right: 17 18
else (68)
    on left: 30, on right: 18
endif (69)
    on left: 31, on right: 17 18
do (70)
    on left: 32, on right: 20
bool_exp (71)
    on left: 33 34, on right: 20 28 29 41
relation_and_exp (72)
    on left: 35 36, on right: 33 34 36
relation_exp (73)
    on left: 37 38 39 40 41, on right: 35 36 37
comp (74)
    on left: 42 43 44 45 46 47, on right: 38
expression (75)
    on left: 48 49 50, on right: 16 26 38 49 50 60 62 63 67
multiplicative_expression (76)
    on left: 51 52 53 54, on right: 48 49 50 52 53 54
term (77)
    on left: 55 56 57, on right: 51 52 53 54
terms (78)
    on left: 58 59 60, on right: 55 56
parenExpression (79)
    on left: 61, on right: 57
expressions (80)
    on left: 62 63, on right: 61 63
vars (81)
    on left: 64 65, on right: 22 23 65
var (82)
    on left: 66 67, on right: 16 59 64 65
identifiers (83)
    on left: 68 69, on right: 10 11 12 13 69
ident (84)
    on left: 70, on right: 21 27 66 67 68 69
number (85)
    on left: 71, on right: 11 58


State 0

    0 $accept: . prog_start $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 3 (functions)

    prog_start  go to state 2
    functions   go to state 3
    function    go to state 4
    funcName    go to state 5


State 1

    5 funcName: FUNCTION . IDENT

    IDENT  shift, and go to state 6


State 2

    0 $accept: prog_start . $end

    $end  shift, and go to state 7


State 3

    1 prog_start: functions .

    $default  reduce using rule 1 (prog_start)


State 4

    2 functions: function . functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 3 (functions)

    functions  go to state 8
    function   go to state 4
    funcName   go to state 5


State 5

    4 function: funcName . SEMICOLON begin_params declarations end_params BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    SEMICOLON  shift, and go to state 9


State 6

    5 funcName: FUNCTION IDENT .

    $default  reduce using rule 5 (funcName)


State 7

    0 $accept: prog_start $end .

    $default  accept


State 8

    2 functions: function functions .

    $default  reduce using rule 2 (functions)


State 9

    4 function: funcName SEMICOLON . begin_params declarations end_params BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_PARAMS  shift, and go to state 10

    begin_params  go to state 11


State 10

    6 begin_params: BEGIN_PARAMS .

    $default  reduce using rule 6 (begin_params)


State 11

    4 function: funcName SEMICOLON begin_params . declarations end_params BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 12

    $default  reduce using rule 9 (declarations)

    declarations  go to state 13
    declaration   go to state 14
    identifiers   go to state 15
    ident         go to state 16


State 12

   70 ident: IDENT .

    $default  reduce using rule 70 (ident)


State 13

    4 function: funcName SEMICOLON begin_params declarations . end_params BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    END_PARAMS  shift, and go to state 17

    end_params  go to state 18


State 14

    8 declarations: declaration . SEMICOLON declarations

    SEMICOLON  shift, and go to state 19


State 15

   10 declaration: identifiers . COLON INTEGER
   11            | identifiers . COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER
   12            | identifiers . COLON ARRAY L_SQUARE_BRACKET error R_SQUARE_BRACKET OF INTEGER
   13            | identifiers . COLON error

    COLON  shift, and go to state 20


State 16

   68 identifiers: ident .
   69            | ident . COMMA identifiers

    COMMA  shift, and go to state 21

    $default  reduce using rule 68 (identifiers)


State 17

    7 end_params: END_PARAMS .

    $default  reduce using rule 7 (end_params)


State 18

    4 function: funcName SEMICOLON begin_params declarations end_params . BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 22


State 19

    8 declarations: declaration SEMICOLON . declarations

    IDENT  shift, and go to state 12

    $default  reduce using rule 9 (declarations)

    declarations  go to state 23
    declaration   go to state 14
    identifiers   go to state 15
    ident         go to state 16


State 20

   10 declaration: identifiers COLON . INTEGER
   11            | identifiers COLON . ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER
   12            | identifiers COLON . ARRAY L_SQUARE_BRACKET error R_SQUARE_BRACKET OF INTEGER
   13            | identifiers COLON . error

    error    shift, and go to state 24
    INTEGER  shift, and go to state 25
    ARRAY    shift, and go to state 26


State 21

   69 identifiers: ident COMMA . identifiers

    IDENT  shift, and go to state 12

    identifiers  go to state 27
    ident        go to state 16


State 22

    4 function: funcName SEMICOLON begin_params declarations end_params BEGIN_LOCALS . declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 12

    $default  reduce using rule 9 (declarations)

    declarations  go to state 28
    declaration   go to state 14
    identifiers   go to state 15
    ident         go to state 16


State 23

    8 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 8 (declarations)


State 24

   13 declaration: identifiers COLON error .

    $default  reduce using rule 13 (declaration)


State 25

   10 declaration: identifiers COLON INTEGER .

    $default  reduce using rule 10 (declaration)


State 26

   11 declaration: identifiers COLON ARRAY . L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER
   12            | identifiers COLON ARRAY . L_SQUARE_BRACKET error R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 29


State 27

   69 identifiers: ident COMMA identifiers .

    $default  reduce using rule 69 (identifiers)


State 28

    4 function: funcName SEMICOLON begin_params declarations end_params BEGIN_LOCALS declarations . END_LOCALS BEGIN_BODY statements END_BODY

    END_LOCALS  shift, and go to state 30


State 29

   11 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET . number R_SQUARE_BRACKET OF INTEGER
   12            | identifiers COLON ARRAY L_SQUARE_BRACKET . error R_SQUARE_BRACKET OF INTEGER

    error   shift, and go to state 31
    NUMBER  shift, and go to state 32

    number  go to state 33


State 30

    4 function: funcName SEMICOLON begin_params declarations end_params BEGIN_LOCALS declarations END_LOCALS . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 34


State 31

   12 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET error . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 35


State 32

   71 number: NUMBER .

    $default  reduce using rule 71 (number)


State 33

   11 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET number . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 36


State 34

    4 function: funcName SEMICOLON begin_params declarations end_params BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY . statements END_BODY

    error     shift, and go to state 37
    READ      shift, and go to state 38
    IF        shift, and go to state 39
    WHILE     shift, and go to state 40
    DO        shift, and go to state 41
    RETURN    shift, and go to state 42
    CONTINUE  shift, and go to state 43
    WRITE     shift, and go to state 44
    FOREACH   shift, and go to state 45
    IDENT     shift, and go to state 12

    END_BODY  reduce using rule 15 (statements)

    statements  go to state 46
    statement   go to state 47
    foreach     go to state 48
    while       go to state 49
    ifCond      go to state 50
    do          go to state 51
    var         go to state 52
    ident       go to state 53


State 35

   12 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET error R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 54


State 36

   11 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 55


State 37

   25 statement: error .

    $default  reduce using rule 25 (statement)


State 38

   22 statement: READ . vars

    IDENT  shift, and go to state 12

    vars   go to state 56
    var    go to state 57
    ident  go to state 53


State 39

   29 ifCond: IF . bool_exp THEN

    TRUE     shift, and go to state 58
    FALSE    shift, and go to state 59
    L_PAREN  shift, and go to state 60
    NUMBER   shift, and go to state 32
    IDENT    shift, and go to state 61
    SUB      shift, and go to state 62
    NOT      shift, and go to state 63

    bool_exp                   go to state 64
    relation_and_exp           go to state 65
    relation_exp               go to state 66
    expression                 go to state 67
    multiplicative_expression  go to state 68
    term                       go to state 69
    terms                      go to state 70
    var                        go to state 71
    ident                      go to state 53
    number                     go to state 72


State 40

   28 while: WHILE . bool_exp

    TRUE     shift, and go to state 58
    FALSE    shift, and go to state 59
    L_PAREN  shift, and go to state 60
    NUMBER   shift, and go to state 32
    IDENT    shift, and go to state 61
    SUB      shift, and go to state 62
    NOT      shift, and go to state 63

    bool_exp                   go to state 73
    relation_and_exp           go to state 65
    relation_exp               go to state 66
    expression                 go to state 67
    multiplicative_expression  go to state 68
    term                       go to state 69
    terms                      go to state 70
    var                        go to state 71
    ident                      go to state 53
    number                     go to state 72


State 41

   32 do: DO .

    $default  reduce using rule 32 (do)


State 42

   26 statement: RETURN . expression

    L_PAREN  shift, and go to state 74
    NUMBER   shift, and go to state 32
    IDENT    shift, and go to state 61
    SUB      shift, and go to state 62

    expression                 go to state 75
    multiplicative_expression  go to state 68
    term                       go to state 69
    terms                      go to state 70
    var                        go to state 71
    ident                      go to state 53
    number                     go to state 72


State 43

   24 statement: CONTINUE .

    $default  reduce using rule 24 (statement)


State 44

   23 statement: WRITE . vars

    IDENT  shift, and go to state 12

    vars   go to state 76
    var    go to state 57
    ident  go to state 53


State 45

   27 foreach: FOREACH . ident

    IDENT  shift, and go to state 12

    ident  go to state 77


State 46

    4 function: funcName SEMICOLON begin_params declarations end_params BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements . END_BODY

    END_BODY  shift, and go to state 78


State 47

   14 statements: statement . SEMICOLON statements

    SEMICOLON  shift, and go to state 79


State 48

   21 statement: foreach . IN ident BEGINLOOP statements ENDLOOP

    IN  shift, and go to state 80


State 49

   19 statement: while . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 81


State 50

   17 statement: ifCond . statements endif
   18          | ifCond . statements else statements endif

    error     shift, and go to state 37
    READ      shift, and go to state 38
    IF        shift, and go to state 39
    WHILE     shift, and go to state 40
    DO        shift, and go to state 41
    RETURN    shift, and go to state 42
    CONTINUE  shift, and go to state 43
    WRITE     shift, and go to state 44
    FOREACH   shift, and go to state 45
    IDENT     shift, and go to state 12

    ENDIF  reduce using rule 15 (statements)
    ELSE   reduce using rule 15 (statements)

    statements  go to state 82
    statement   go to state 47
    foreach     go to state 48
    while       go to state 49
    ifCond      go to state 50
    do          go to state 51
    var         go to state 52
    ident       go to state 53


State 51

   20 statement: do . BEGINLOOP statements ENDLOOP WHILE bool_exp

    BEGINLOOP  shift, and go to state 83


State 52

   16 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 84


State 53

   66 var: ident .
   67    | ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 85

    $default  reduce using rule 66 (var)


State 54

   12 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET error R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 86


State 55

   11 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 87


State 56

   22 statement: READ vars .

    $default  reduce using rule 22 (statement)


State 57

   64 vars: var .
   65     | var . COMMA vars

    COMMA  shift, and go to state 88

    $default  reduce using rule 64 (vars)


State 58

   39 relation_exp: TRUE .

    $default  reduce using rule 39 (relation_exp)


State 59

   40 relation_exp: FALSE .

    $default  reduce using rule 40 (relation_exp)


State 60

   41 relation_exp: L_PAREN . bool_exp R_PAREN
   60 terms: L_PAREN . expression R_PAREN

    TRUE     shift, and go to state 58
    FALSE    shift, and go to state 59
    L_PAREN  shift, and go to state 60
    NUMBER   shift, and go to state 32
    IDENT    shift, and go to state 61
    SUB      shift, and go to state 62
    NOT      shift, and go to state 63

    bool_exp                   go to state 89
    relation_and_exp           go to state 65
    relation_exp               go to state 66
    expression                 go to state 90
    multiplicative_expression  go to state 68
    term                       go to state 69
    terms                      go to state 70
    var                        go to state 71
    ident                      go to state 53
    number                     go to state 72


State 61

   57 term: IDENT . parenExpression
   70 ident: IDENT .

    L_PAREN  shift, and go to state 91

    $default  reduce using rule 70 (ident)

    parenExpression  go to state 92


State 62

   56 term: SUB . terms

    L_PAREN  shift, and go to state 74
    NUMBER   shift, and go to state 32
    IDENT    shift, and go to state 12

    terms   go to state 93
    var     go to state 71
    ident   go to state 53
    number  go to state 72


State 63

   37 relation_exp: NOT . relation_exp

    TRUE     shift, and go to state 58
    FALSE    shift, and go to state 59
    L_PAREN  shift, and go to state 60
    NUMBER   shift, and go to state 32
    IDENT    shift, and go to state 61
    SUB      shift, and go to state 62
    NOT      shift, and go to state 63

    relation_exp               go to state 94
    expression                 go to state 67
    multiplicative_expression  go to state 68
    term                       go to state 69
    terms                      go to state 70
    var                        go to state 71
    ident                      go to state 53
    number                     go to state 72


State 64

   29 ifCond: IF bool_exp . THEN

    THEN  shift, and go to state 95


State 65

   33 bool_exp: relation_and_exp .
   34         | relation_and_exp . OR relation_and_exp

    OR  shift, and go to state 96

    $default  reduce using rule 33 (bool_exp)


State 66

   35 relation_and_exp: relation_exp .
   36                 | relation_exp . AND relation_and_exp

    AND  shift, and go to state 97

    $default  reduce using rule 35 (relation_and_exp)


State 67

   38 relation_exp: expression . comp expression
   49 expression: expression . ADD multiplicative_expression
   50           | expression . SUB multiplicative_expression

    ADD  shift, and go to state 98
    SUB  shift, and go to state 99
    LT   shift, and go to state 100
    LTE  shift, and go to state 101
    GT   shift, and go to state 102
    GTE  shift, and go to state 103
    EQ   shift, and go to state 104
    NEQ  shift, and go to state 105

    comp  go to state 106


State 68

   48 expression: multiplicative_expression .
   52 multiplicative_expression: multiplicative_expression . MULT term
   53                          | multiplicative_expression . DIV term
   54                          | multiplicative_expression . MOD term

    MULT  shift, and go to state 107
    DIV   shift, and go to state 108
    MOD   shift, and go to state 109

    $default  reduce using rule 48 (expression)


State 69

   51 multiplicative_expression: term .

    $default  reduce using rule 51 (multiplicative_expression)


State 70

   55 term: terms .

    $default  reduce using rule 55 (term)


State 71

   59 terms: var .

    $default  reduce using rule 59 (terms)


State 72

   58 terms: number .

    $default  reduce using rule 58 (terms)


State 73

   28 while: WHILE bool_exp .

    $default  reduce using rule 28 (while)


State 74

   60 terms: L_PAREN . expression R_PAREN

    L_PAREN  shift, and go to state 74
    NUMBER   shift, and go to state 32
    IDENT    shift, and go to state 61
    SUB      shift, and go to state 62

    expression                 go to state 110
    multiplicative_expression  go to state 68
    term                       go to state 69
    terms                      go to state 70
    var                        go to state 71
    ident                      go to state 53
    number                     go to state 72


State 75

   26 statement: RETURN expression .
   49 expression: expression . ADD multiplicative_expression
   50           | expression . SUB multiplicative_expression

    ADD  shift, and go to state 98
    SUB  shift, and go to state 99

    $default  reduce using rule 26 (statement)


State 76

   23 statement: WRITE vars .

    $default  reduce using rule 23 (statement)


State 77

   27 foreach: FOREACH ident .

    $default  reduce using rule 27 (foreach)


State 78

    4 function: funcName SEMICOLON begin_params declarations end_params BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY .

    $default  reduce using rule 4 (function)


State 79

   14 statements: statement SEMICOLON . statements

    error     shift, and go to state 37
    READ      shift, and go to state 38
    IF        shift, and go to state 39
    WHILE     shift, and go to state 40
    DO        shift, and go to state 41
    RETURN    shift, and go to state 42
    CONTINUE  shift, and go to state 43
    WRITE     shift, and go to state 44
    FOREACH   shift, and go to state 45
    IDENT     shift, and go to state 12

    ENDIF     reduce using rule 15 (statements)
    ELSE      reduce using rule 15 (statements)
    ENDLOOP   reduce using rule 15 (statements)
    END_BODY  reduce using rule 15 (statements)

    statements  go to state 111
    statement   go to state 47
    foreach     go to state 48
    while       go to state 49
    ifCond      go to state 50
    do          go to state 51
    var         go to state 52
    ident       go to state 53


State 80

   21 statement: foreach IN . ident BEGINLOOP statements ENDLOOP

    IDENT  shift, and go to state 12

    ident  go to state 112


State 81

   19 statement: while BEGINLOOP . statements ENDLOOP

    error     shift, and go to state 37
    READ      shift, and go to state 38
    IF        shift, and go to state 39
    WHILE     shift, and go to state 40
    DO        shift, and go to state 41
    RETURN    shift, and go to state 42
    CONTINUE  shift, and go to state 43
    WRITE     shift, and go to state 44
    FOREACH   shift, and go to state 45
    IDENT     shift, and go to state 12

    ENDLOOP  reduce using rule 15 (statements)

    statements  go to state 113
    statement   go to state 47
    foreach     go to state 48
    while       go to state 49
    ifCond      go to state 50
    do          go to state 51
    var         go to state 52
    ident       go to state 53


State 82

   17 statement: ifCond statements . endif
   18          | ifCond statements . else statements endif

    ENDIF  shift, and go to state 114
    ELSE   shift, and go to state 115

    else   go to state 116
    endif  go to state 117


State 83

   20 statement: do BEGINLOOP . statements ENDLOOP WHILE bool_exp

    error     shift, and go to state 37
    READ      shift, and go to state 38
    IF        shift, and go to state 39
    WHILE     shift, and go to state 40
    DO        shift, and go to state 41
    RETURN    shift, and go to state 42
    CONTINUE  shift, and go to state 43
    WRITE     shift, and go to state 44
    FOREACH   shift, and go to state 45
    IDENT     shift, and go to state 12

    ENDLOOP  reduce using rule 15 (statements)

    statements  go to state 118
    statement   go to state 47
    foreach     go to state 48
    while       go to state 49
    ifCond      go to state 50
    do          go to state 51
    var         go to state 52
    ident       go to state 53


State 84

   16 statement: var ASSIGN . expression

    L_PAREN  shift, and go to state 74
    NUMBER   shift, and go to state 32
    IDENT    shift, and go to state 61
    SUB      shift, and go to state 62

    expression                 go to state 119
    multiplicative_expression  go to state 68
    term                       go to state 69
    terms                      go to state 70
    var                        go to state 71
    ident                      go to state 53
    number                     go to state 72


State 85

   67 var: ident L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    L_PAREN  shift, and go to state 74
    NUMBER   shift, and go to state 32
    IDENT    shift, and go to state 61
    SUB      shift, and go to state 62

    expression                 go to state 120
    multiplicative_expression  go to state 68
    term                       go to state 69
    terms                      go to state 70
    var                        go to state 71
    ident                      go to state 53
    number                     go to state 72


State 86

   12 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET error R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 12 (declaration)


State 87

   11 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 11 (declaration)


State 88

   65 vars: var COMMA . vars

    IDENT  shift, and go to state 12

    vars   go to state 121
    var    go to state 57
    ident  go to state 53


State 89

   41 relation_exp: L_PAREN bool_exp . R_PAREN

    R_PAREN  shift, and go to state 122


State 90

   38 relation_exp: expression . comp expression
   49 expression: expression . ADD multiplicative_expression
   50           | expression . SUB multiplicative_expression
   60 terms: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 123
    ADD      shift, and go to state 98
    SUB      shift, and go to state 99
    LT       shift, and go to state 100
    LTE      shift, and go to state 101
    GT       shift, and go to state 102
    GTE      shift, and go to state 103
    EQ       shift, and go to state 104
    NEQ      shift, and go to state 105

    comp  go to state 106


State 91

   61 parenExpression: L_PAREN . expressions R_PAREN

    L_PAREN  shift, and go to state 74
    NUMBER   shift, and go to state 32
    IDENT    shift, and go to state 61
    SUB      shift, and go to state 62

    expression                 go to state 124
    multiplicative_expression  go to state 68
    term                       go to state 69
    terms                      go to state 70
    expressions                go to state 125
    var                        go to state 71
    ident                      go to state 53
    number                     go to state 72


State 92

   57 term: IDENT parenExpression .

    $default  reduce using rule 57 (term)


State 93

   56 term: SUB terms .

    $default  reduce using rule 56 (term)


State 94

   37 relation_exp: NOT relation_exp .

    $default  reduce using rule 37 (relation_exp)


State 95

   29 ifCond: IF bool_exp THEN .

    $default  reduce using rule 29 (ifCond)


State 96

   34 bool_exp: relation_and_exp OR . relation_and_exp

    TRUE     shift, and go to state 58
    FALSE    shift, and go to state 59
    L_PAREN  shift, and go to state 60
    NUMBER   shift, and go to state 32
    IDENT    shift, and go to state 61
    SUB      shift, and go to state 62
    NOT      shift, and go to state 63

    relation_and_exp           go to state 126
    relation_exp               go to state 66
    expression                 go to state 67
    multiplicative_expression  go to state 68
    term                       go to state 69
    terms                      go to state 70
    var                        go to state 71
    ident                      go to state 53
    number                     go to state 72


State 97

   36 relation_and_exp: relation_exp AND . relation_and_exp

    TRUE     shift, and go to state 58
    FALSE    shift, and go to state 59
    L_PAREN  shift, and go to state 60
    NUMBER   shift, and go to state 32
    IDENT    shift, and go to state 61
    SUB      shift, and go to state 62
    NOT      shift, and go to state 63

    relation_and_exp           go to state 127
    relation_exp               go to state 66
    expression                 go to state 67
    multiplicative_expression  go to state 68
    term                       go to state 69
    terms                      go to state 70
    var                        go to state 71
    ident                      go to state 53
    number                     go to state 72


State 98

   49 expression: expression ADD . multiplicative_expression

    L_PAREN  shift, and go to state 74
    NUMBER   shift, and go to state 32
    IDENT    shift, and go to state 61
    SUB      shift, and go to state 62

    multiplicative_expression  go to state 128
    term                       go to state 69
    terms                      go to state 70
    var                        go to state 71
    ident                      go to state 53
    number                     go to state 72


State 99

   50 expression: expression SUB . multiplicative_expression

    L_PAREN  shift, and go to state 74
    NUMBER   shift, and go to state 32
    IDENT    shift, and go to state 61
    SUB      shift, and go to state 62

    multiplicative_expression  go to state 129
    term                       go to state 69
    terms                      go to state 70
    var                        go to state 71
    ident                      go to state 53
    number                     go to state 72


State 100

   44 comp: LT .

    $default  reduce using rule 44 (comp)


State 101

   46 comp: LTE .

    $default  reduce using rule 46 (comp)


State 102

   45 comp: GT .

    $default  reduce using rule 45 (comp)


State 103

   47 comp: GTE .

    $default  reduce using rule 47 (comp)


State 104

   42 comp: EQ .

    $default  reduce using rule 42 (comp)


State 105

   43 comp: NEQ .

    $default  reduce using rule 43 (comp)


State 106

   38 relation_exp: expression comp . expression

    L_PAREN  shift, and go to state 74
    NUMBER   shift, and go to state 32
    IDENT    shift, and go to state 61
    SUB      shift, and go to state 62

    expression                 go to state 130
    multiplicative_expression  go to state 68
    term                       go to state 69
    terms                      go to state 70
    var                        go to state 71
    ident                      go to state 53
    number                     go to state 72


State 107

   52 multiplicative_expression: multiplicative_expression MULT . term

    L_PAREN  shift, and go to state 74
    NUMBER   shift, and go to state 32
    IDENT    shift, and go to state 61
    SUB      shift, and go to state 62

    term    go to state 131
    terms   go to state 70
    var     go to state 71
    ident   go to state 53
    number  go to state 72


State 108

   53 multiplicative_expression: multiplicative_expression DIV . term

    L_PAREN  shift, and go to state 74
    NUMBER   shift, and go to state 32
    IDENT    shift, and go to state 61
    SUB      shift, and go to state 62

    term    go to state 132
    terms   go to state 70
    var     go to state 71
    ident   go to state 53
    number  go to state 72


State 109

   54 multiplicative_expression: multiplicative_expression MOD . term

    L_PAREN  shift, and go to state 74
    NUMBER   shift, and go to state 32
    IDENT    shift, and go to state 61
    SUB      shift, and go to state 62

    term    go to state 133
    terms   go to state 70
    var     go to state 71
    ident   go to state 53
    number  go to state 72


State 110

   49 expression: expression . ADD multiplicative_expression
   50           | expression . SUB multiplicative_expression
   60 terms: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 123
    ADD      shift, and go to state 98
    SUB      shift, and go to state 99


State 111

   14 statements: statement SEMICOLON statements .

    $default  reduce using rule 14 (statements)


State 112

   21 statement: foreach IN ident . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 134


State 113

   19 statement: while BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 135


State 114

   31 endif: ENDIF .

    $default  reduce using rule 31 (endif)


State 115

   30 else: ELSE .

    $default  reduce using rule 30 (else)


State 116

   18 statement: ifCond statements else . statements endif

    error     shift, and go to state 37
    READ      shift, and go to state 38
    IF        shift, and go to state 39
    WHILE     shift, and go to state 40
    DO        shift, and go to state 41
    RETURN    shift, and go to state 42
    CONTINUE  shift, and go to state 43
    WRITE     shift, and go to state 44
    FOREACH   shift, and go to state 45
    IDENT     shift, and go to state 12

    ENDIF  reduce using rule 15 (statements)

    statements  go to state 136
    statement   go to state 47
    foreach     go to state 48
    while       go to state 49
    ifCond      go to state 50
    do          go to state 51
    var         go to state 52
    ident       go to state 53


State 117

   17 statement: ifCond statements endif .

    $default  reduce using rule 17 (statement)


State 118

   20 statement: do BEGINLOOP statements . ENDLOOP WHILE bool_exp

    ENDLOOP  shift, and go to state 137


State 119

   16 statement: var ASSIGN expression .
   49 expression: expression . ADD multiplicative_expression
   50           | expression . SUB multiplicative_expression

    ADD  shift, and go to state 98
    SUB  shift, and go to state 99

    $default  reduce using rule 16 (statement)


State 120

   49 expression: expression . ADD multiplicative_expression
   50           | expression . SUB multiplicative_expression
   67 var: ident L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 138
    ADD               shift, and go to state 98
    SUB               shift, and go to state 99


State 121

   65 vars: var COMMA vars .

    $default  reduce using rule 65 (vars)


State 122

   41 relation_exp: L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 41 (relation_exp)


State 123

   60 terms: L_PAREN expression R_PAREN .

    $default  reduce using rule 60 (terms)


State 124

   49 expression: expression . ADD multiplicative_expression
   50           | expression . SUB multiplicative_expression
   62 expressions: expression .
   63            | expression . COMMA expressions

    COMMA  shift, and go to state 139
    ADD    shift, and go to state 98
    SUB    shift, and go to state 99

    $default  reduce using rule 62 (expressions)


State 125

   61 parenExpression: L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 140


State 126

   34 bool_exp: relation_and_exp OR relation_and_exp .

    $default  reduce using rule 34 (bool_exp)


State 127

   36 relation_and_exp: relation_exp AND relation_and_exp .

    $default  reduce using rule 36 (relation_and_exp)


State 128

   49 expression: expression ADD multiplicative_expression .
   52 multiplicative_expression: multiplicative_expression . MULT term
   53                          | multiplicative_expression . DIV term
   54                          | multiplicative_expression . MOD term

    MULT  shift, and go to state 107
    DIV   shift, and go to state 108
    MOD   shift, and go to state 109

    $default  reduce using rule 49 (expression)


State 129

   50 expression: expression SUB multiplicative_expression .
   52 multiplicative_expression: multiplicative_expression . MULT term
   53                          | multiplicative_expression . DIV term
   54                          | multiplicative_expression . MOD term

    MULT  shift, and go to state 107
    DIV   shift, and go to state 108
    MOD   shift, and go to state 109

    $default  reduce using rule 50 (expression)


State 130

   38 relation_exp: expression comp expression .
   49 expression: expression . ADD multiplicative_expression
   50           | expression . SUB multiplicative_expression

    ADD  shift, and go to state 98
    SUB  shift, and go to state 99

    $default  reduce using rule 38 (relation_exp)


State 131

   52 multiplicative_expression: multiplicative_expression MULT term .

    $default  reduce using rule 52 (multiplicative_expression)


State 132

   53 multiplicative_expression: multiplicative_expression DIV term .

    $default  reduce using rule 53 (multiplicative_expression)


State 133

   54 multiplicative_expression: multiplicative_expression MOD term .

    $default  reduce using rule 54 (multiplicative_expression)


State 134

   21 statement: foreach IN ident BEGINLOOP . statements ENDLOOP

    error     shift, and go to state 37
    READ      shift, and go to state 38
    IF        shift, and go to state 39
    WHILE     shift, and go to state 40
    DO        shift, and go to state 41
    RETURN    shift, and go to state 42
    CONTINUE  shift, and go to state 43
    WRITE     shift, and go to state 44
    FOREACH   shift, and go to state 45
    IDENT     shift, and go to state 12

    ENDLOOP  reduce using rule 15 (statements)

    statements  go to state 141
    statement   go to state 47
    foreach     go to state 48
    while       go to state 49
    ifCond      go to state 50
    do          go to state 51
    var         go to state 52
    ident       go to state 53


State 135

   19 statement: while BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 19 (statement)


State 136

   18 statement: ifCond statements else statements . endif

    ENDIF  shift, and go to state 114

    endif  go to state 142


State 137

   20 statement: do BEGINLOOP statements ENDLOOP . WHILE bool_exp

    WHILE  shift, and go to state 143


State 138

   67 var: ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 67 (var)


State 139

   63 expressions: expression COMMA . expressions

    L_PAREN  shift, and go to state 74
    NUMBER   shift, and go to state 32
    IDENT    shift, and go to state 61
    SUB      shift, and go to state 62

    expression                 go to state 124
    multiplicative_expression  go to state 68
    term                       go to state 69
    terms                      go to state 70
    expressions                go to state 144
    var                        go to state 71
    ident                      go to state 53
    number                     go to state 72


State 140

   61 parenExpression: L_PAREN expressions R_PAREN .

    $default  reduce using rule 61 (parenExpression)


State 141

   21 statement: foreach IN ident BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 145


State 142

   18 statement: ifCond statements else statements endif .

    $default  reduce using rule 18 (statement)


State 143

   20 statement: do BEGINLOOP statements ENDLOOP WHILE . bool_exp

    TRUE     shift, and go to state 58
    FALSE    shift, and go to state 59
    L_PAREN  shift, and go to state 60
    NUMBER   shift, and go to state 32
    IDENT    shift, and go to state 61
    SUB      shift, and go to state 62
    NOT      shift, and go to state 63

    bool_exp                   go to state 146
    relation_and_exp           go to state 65
    relation_exp               go to state 66
    expression                 go to state 67
    multiplicative_expression  go to state 68
    term                       go to state 69
    terms                      go to state 70
    var                        go to state 71
    ident                      go to state 53
    number                     go to state 72


State 144

   63 expressions: expression COMMA expressions .

    $default  reduce using rule 63 (expressions)


State 145

   21 statement: foreach IN ident BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 21 (statement)


State 146

   20 statement: do BEGINLOOP statements ENDLOOP WHILE bool_exp .

    $default  reduce using rule 20 (statement)
